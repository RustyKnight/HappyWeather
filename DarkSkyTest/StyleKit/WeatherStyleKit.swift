//
//  WeatherStyleKit.swift
//  DarkSky
//
//  Created by Shane Whitehead on 24/8/18.
//  Copyright Â© 2018 Beam Communications. All rights reserved.
//
//  Generated by PaintCode
//  http://www.paintcodeapp.com
//



import UIKit

public class WeatherStyleKit : NSObject {

    //// Cache

    private struct Cache {
        static var imageOfMoonWaningGibbous: UIImage?
        static var moonWaningGibbousTargets: [AnyObject]?
        static var imageOfWeatherPartlyCloudyDay: UIImage?
        static var weatherPartlyCloudyDayTargets: [AnyObject]?
        static var imageOfWeatherPartlyCloudyRainDay: UIImage?
        static var weatherPartlyCloudyRainDayTargets: [AnyObject]?
        static var imageOfMoonNew: UIImage?
        static var moonNewTargets: [AnyObject]?
        static var imageOfMoonWaningCrescent: UIImage?
        static var moonWaningCrescentTargets: [AnyObject]?
        static var imageOfMoonWaxingGibbous: UIImage?
        static var moonWaxingGibbousTargets: [AnyObject]?
        static var imageOfMoonFirstQuarter: UIImage?
        static var moonFirstQuarterTargets: [AnyObject]?
        static var imageOfMoonWaxingCrescent: UIImage?
        static var moonWaxingCrescentTargets: [AnyObject]?
        static var imageOfWeatherWindy: UIImage?
        static var weatherWindyTargets: [AnyObject]?
        static var imageOfWeatherLightSnow: UIImage?
        static var weatherLightSnowTargets: [AnyObject]?
        static var imageOfWeatherTornado: UIImage?
        static var weatherTornadoTargets: [AnyObject]?
        static var imageOfWeatherSleet: UIImage?
        static var weatherSleetTargets: [AnyObject]?
        static var imageOfWeatherSnow: UIImage?
        static var weatherSnowTargets: [AnyObject]?
        static var imageOfWeatherStorm: UIImage?
        static var weatherStormTargets: [AnyObject]?
        static var imageOfWeatherHail: UIImage?
        static var weatherHailTargets: [AnyObject]?
        static var imageOfWeatherTorrentialRain: UIImage?
        static var weatherTorrentialRainTargets: [AnyObject]?
        static var imageOfWeatherLightRain: UIImage?
        static var weatherLightRainTargets: [AnyObject]?
        static var imageOfWeatherModerateRain: UIImage?
        static var weatherModerateRainTargets: [AnyObject]?
    }

    //// Drawing Methods

    @objc dynamic public class func drawWeatherSunny(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 50, height: 50), resizing: ResizingBehavior = .aspectFit, sunRays: CGFloat = 90) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 50, height: 50), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 50, y: resizedFrame.height / 50)


        //// Color Declarations
        let fillColor = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1.000)

        //// Group
        //// BallOfGas Drawing
        let ballOfGasPath = UIBezierPath()
        ballOfGasPath.move(to: CGPoint(x: 25, y: 15))
        ballOfGasPath.addCurve(to: CGPoint(x: 15, y: 25), controlPoint1: CGPoint(x: 19.48, y: 15), controlPoint2: CGPoint(x: 15, y: 19.48))
        ballOfGasPath.addCurve(to: CGPoint(x: 25, y: 35), controlPoint1: CGPoint(x: 15, y: 30.52), controlPoint2: CGPoint(x: 19.48, y: 35))
        ballOfGasPath.addCurve(to: CGPoint(x: 35, y: 25), controlPoint1: CGPoint(x: 30.52, y: 35), controlPoint2: CGPoint(x: 35, y: 30.52))
        ballOfGasPath.addCurve(to: CGPoint(x: 25, y: 15), controlPoint1: CGPoint(x: 35, y: 19.48), controlPoint2: CGPoint(x: 30.52, y: 15))
        ballOfGasPath.close()
        fillColor.setFill()
        ballOfGasPath.fill()


        //// Rays Drawing
        context.saveGState()
        context.translateBy(x: 25, y: 25)
        context.rotate(by: -sunRays * CGFloat.pi/180)

        let raysPath = UIBezierPath()
        raysPath.move(to: CGPoint(x: -0.03, y: -21))
        raysPath.addCurve(to: CGPoint(x: -0.15, y: -20.96), controlPoint1: CGPoint(x: -0.07, y: -20.99), controlPoint2: CGPoint(x: -0.11, y: -20.98))
        raysPath.addCurve(to: CGPoint(x: -0.93, y: -19.97), controlPoint1: CGPoint(x: -0.61, y: -20.86), controlPoint2: CGPoint(x: -0.94, y: -20.44))
        raysPath.addLine(to: CGPoint(x: -0.93, y: -13.97))
        raysPath.addCurve(to: CGPoint(x: -0.43, y: -13.09), controlPoint1: CGPoint(x: -0.93, y: -13.61), controlPoint2: CGPoint(x: -0.74, y: -13.28))
        raysPath.addCurve(to: CGPoint(x: 0.57, y: -13.09), controlPoint1: CGPoint(x: -0.12, y: -12.92), controlPoint2: CGPoint(x: 0.26, y: -12.92))
        raysPath.addCurve(to: CGPoint(x: 1.06, y: -13.97), controlPoint1: CGPoint(x: 0.88, y: -13.28), controlPoint2: CGPoint(x: 1.07, y: -13.61))
        raysPath.addLine(to: CGPoint(x: 1.06, y: -19.97))
        raysPath.addCurve(to: CGPoint(x: 0.75, y: -20.73), controlPoint1: CGPoint(x: 1.08, y: -20.25), controlPoint2: CGPoint(x: 0.96, y: -20.53))
        raysPath.addCurve(to: CGPoint(x: -0.03, y: -21), controlPoint1: CGPoint(x: 0.54, y: -20.93), controlPoint2: CGPoint(x: 0.26, y: -21.02))
        raysPath.close()
        raysPath.move(to: CGPoint(x: -14.22, y: -15.13))
        raysPath.addCurve(to: CGPoint(x: -15, y: -14.43), controlPoint1: CGPoint(x: -14.59, y: -15.06), controlPoint2: CGPoint(x: -14.89, y: -14.79))
        raysPath.addCurve(to: CGPoint(x: -14.72, y: -13.41), controlPoint1: CGPoint(x: -15.1, y: -14.06), controlPoint2: CGPoint(x: -14.99, y: -13.67))
        raysPath.addLine(to: CGPoint(x: -10.48, y: -9.17))
        raysPath.addCurve(to: CGPoint(x: -9.48, y: -8.82), controlPoint1: CGPoint(x: -10.24, y: -8.87), controlPoint2: CGPoint(x: -9.86, y: -8.73))
        raysPath.addCurve(to: CGPoint(x: -8.74, y: -9.57), controlPoint1: CGPoint(x: -9.11, y: -8.9), controlPoint2: CGPoint(x: -8.82, y: -9.2))
        raysPath.addCurve(to: CGPoint(x: -9.08, y: -10.57), controlPoint1: CGPoint(x: -8.65, y: -9.94), controlPoint2: CGPoint(x: -8.79, y: -10.33))
        raysPath.addLine(to: CGPoint(x: -13.32, y: -14.82))
        raysPath.addCurve(to: CGPoint(x: -14.13, y: -15.13), controlPoint1: CGPoint(x: -13.52, y: -15.04), controlPoint2: CGPoint(x: -13.82, y: -15.15))
        raysPath.addCurve(to: CGPoint(x: -14.22, y: -15.13), controlPoint1: CGPoint(x: -14.16, y: -15.13), controlPoint2: CGPoint(x: -14.19, y: -15.13))
        raysPath.close()
        raysPath.move(to: CGPoint(x: 14.04, y: -15.13))
        raysPath.addCurve(to: CGPoint(x: 13.45, y: -14.82), controlPoint1: CGPoint(x: 13.82, y: -15.1), controlPoint2: CGPoint(x: 13.61, y: -14.98))
        raysPath.addLine(to: CGPoint(x: 9.22, y: -10.57))
        raysPath.addCurve(to: CGPoint(x: 8.87, y: -9.57), controlPoint1: CGPoint(x: 8.92, y: -10.33), controlPoint2: CGPoint(x: 8.79, y: -9.94))
        raysPath.addCurve(to: CGPoint(x: 9.62, y: -8.82), controlPoint1: CGPoint(x: 8.96, y: -9.2), controlPoint2: CGPoint(x: 9.25, y: -8.9))
        raysPath.addCurve(to: CGPoint(x: 10.62, y: -9.17), controlPoint1: CGPoint(x: 9.99, y: -8.73), controlPoint2: CGPoint(x: 10.38, y: -8.87))
        raysPath.addLine(to: CGPoint(x: 14.85, y: -13.41))
        raysPath.addCurve(to: CGPoint(x: 15.07, y: -14.56), controlPoint1: CGPoint(x: 15.17, y: -13.71), controlPoint2: CGPoint(x: 15.25, y: -14.17))
        raysPath.addCurve(to: CGPoint(x: 14.04, y: -15.13), controlPoint1: CGPoint(x: 14.89, y: -14.96), controlPoint2: CGPoint(x: 14.47, y: -15.18))
        raysPath.close()
        raysPath.move(to: CGPoint(x: -20.13, y: -0.99))
        raysPath.addCurve(to: CGPoint(x: -20.99, y: 0.15), controlPoint1: CGPoint(x: -20.68, y: -0.91), controlPoint2: CGPoint(x: -21.07, y: -0.4))
        raysPath.addCurve(to: CGPoint(x: -19.85, y: 1.01), controlPoint1: CGPoint(x: -20.91, y: 0.7), controlPoint2: CGPoint(x: -20.4, y: 1.09))
        raysPath.addLine(to: CGPoint(x: -13.88, y: 1.01))
        raysPath.addCurve(to: CGPoint(x: -13, y: 0.51), controlPoint1: CGPoint(x: -13.52, y: 1.01), controlPoint2: CGPoint(x: -13.18, y: 0.83))
        raysPath.addCurve(to: CGPoint(x: -13, y: -0.49), controlPoint1: CGPoint(x: -12.82, y: 0.2), controlPoint2: CGPoint(x: -12.82, y: -0.18))
        raysPath.addCurve(to: CGPoint(x: -13.88, y: -0.99), controlPoint1: CGPoint(x: -13.18, y: -0.8), controlPoint2: CGPoint(x: -13.52, y: -0.99))
        raysPath.addLine(to: CGPoint(x: -19.85, y: -0.99))
        raysPath.addCurve(to: CGPoint(x: -19.95, y: -0.99), controlPoint1: CGPoint(x: -19.88, y: -0.99), controlPoint2: CGPoint(x: -19.92, y: -0.99))
        raysPath.addCurve(to: CGPoint(x: -20.04, y: -0.99), controlPoint1: CGPoint(x: -19.98, y: -0.99), controlPoint2: CGPoint(x: -20.01, y: -0.99))
        raysPath.addCurve(to: CGPoint(x: -20.13, y: -0.99), controlPoint1: CGPoint(x: -20.07, y: -0.99), controlPoint2: CGPoint(x: -20.1, y: -0.99))
        raysPath.close()
        raysPath.move(to: CGPoint(x: 13.73, y: -0.99))
        raysPath.addCurve(to: CGPoint(x: 12.88, y: 0.15), controlPoint1: CGPoint(x: 13.18, y: -0.91), controlPoint2: CGPoint(x: 12.8, y: -0.4))
        raysPath.addCurve(to: CGPoint(x: 14.01, y: 1.01), controlPoint1: CGPoint(x: 12.96, y: 0.7), controlPoint2: CGPoint(x: 13.47, y: 1.09))
        raysPath.addLine(to: CGPoint(x: 19.99, y: 1.01))
        raysPath.addCurve(to: CGPoint(x: 20.87, y: 0.51), controlPoint1: CGPoint(x: 20.35, y: 1.01), controlPoint2: CGPoint(x: 20.68, y: 0.83))
        raysPath.addCurve(to: CGPoint(x: 20.87, y: -0.49), controlPoint1: CGPoint(x: 21.04, y: 0.2), controlPoint2: CGPoint(x: 21.04, y: -0.18))
        raysPath.addCurve(to: CGPoint(x: 19.99, y: -0.99), controlPoint1: CGPoint(x: 20.68, y: -0.8), controlPoint2: CGPoint(x: 20.35, y: -0.99))
        raysPath.addLine(to: CGPoint(x: 14.01, y: -0.99))
        raysPath.addCurve(to: CGPoint(x: 13.92, y: -0.99), controlPoint1: CGPoint(x: 13.98, y: -0.99), controlPoint2: CGPoint(x: 13.95, y: -0.99))
        raysPath.addCurve(to: CGPoint(x: 13.83, y: -0.99), controlPoint1: CGPoint(x: 13.89, y: -0.99), controlPoint2: CGPoint(x: 13.86, y: -0.99))
        raysPath.addCurve(to: CGPoint(x: 13.73, y: -0.99), controlPoint1: CGPoint(x: 13.8, y: -0.99), controlPoint2: CGPoint(x: 13.76, y: -0.99))
        raysPath.close()
        raysPath.move(to: CGPoint(x: -9.89, y: 8.88))
        raysPath.addCurve(to: CGPoint(x: -10.48, y: 9.19), controlPoint1: CGPoint(x: -10.12, y: 8.91), controlPoint2: CGPoint(x: -10.33, y: 9.02))
        raysPath.addLine(to: CGPoint(x: -14.72, y: 13.43))
        raysPath.addCurve(to: CGPoint(x: -15.06, y: 14.44), controlPoint1: CGPoint(x: -15.01, y: 13.67), controlPoint2: CGPoint(x: -15.15, y: 14.06))
        raysPath.addCurve(to: CGPoint(x: -14.32, y: 15.18), controlPoint1: CGPoint(x: -14.98, y: 14.81), controlPoint2: CGPoint(x: -14.69, y: 15.1))
        raysPath.addCurve(to: CGPoint(x: -13.32, y: 14.84), controlPoint1: CGPoint(x: -13.94, y: 15.27), controlPoint2: CGPoint(x: -13.56, y: 15.13))
        raysPath.addLine(to: CGPoint(x: -9.08, y: 10.59))
        raysPath.addCurve(to: CGPoint(x: -8.86, y: 9.49), controlPoint1: CGPoint(x: -8.79, y: 10.31), controlPoint2: CGPoint(x: -8.7, y: 9.87))
        raysPath.addCurve(to: CGPoint(x: -9.8, y: 8.88), controlPoint1: CGPoint(x: -9.01, y: 9.11), controlPoint2: CGPoint(x: -9.39, y: 8.87))
        raysPath.addCurve(to: CGPoint(x: -9.89, y: 8.88), controlPoint1: CGPoint(x: -9.83, y: 8.88), controlPoint2: CGPoint(x: -9.86, y: 8.88))
        raysPath.close()
        raysPath.move(to: CGPoint(x: 9.72, y: 8.88))
        raysPath.addCurve(to: CGPoint(x: 8.94, y: 9.58), controlPoint1: CGPoint(x: 9.34, y: 8.94), controlPoint2: CGPoint(x: 9.04, y: 9.22))
        raysPath.addCurve(to: CGPoint(x: 9.22, y: 10.59), controlPoint1: CGPoint(x: 8.83, y: 9.94), controlPoint2: CGPoint(x: 8.94, y: 10.33))
        raysPath.addLine(to: CGPoint(x: 13.45, y: 14.84))
        raysPath.addCurve(to: CGPoint(x: 14.45, y: 15.18), controlPoint1: CGPoint(x: 13.69, y: 15.13), controlPoint2: CGPoint(x: 14.08, y: 15.27))
        raysPath.addCurve(to: CGPoint(x: 15.2, y: 14.44), controlPoint1: CGPoint(x: 14.82, y: 15.1), controlPoint2: CGPoint(x: 15.11, y: 14.81))
        raysPath.addCurve(to: CGPoint(x: 14.85, y: 13.43), controlPoint1: CGPoint(x: 15.29, y: 14.06), controlPoint2: CGPoint(x: 15.15, y: 13.67))
        raysPath.addLine(to: CGPoint(x: 10.62, y: 9.19))
        raysPath.addCurve(to: CGPoint(x: 9.9, y: 8.88), controlPoint1: CGPoint(x: 10.43, y: 8.99), controlPoint2: CGPoint(x: 10.18, y: 8.88))
        raysPath.addCurve(to: CGPoint(x: 9.81, y: 8.88), controlPoint1: CGPoint(x: 9.87, y: 8.88), controlPoint2: CGPoint(x: 9.84, y: 8.88))
        raysPath.addCurve(to: CGPoint(x: 9.72, y: 8.88), controlPoint1: CGPoint(x: 9.78, y: 8.88), controlPoint2: CGPoint(x: 9.75, y: 8.88))
        raysPath.close()
        raysPath.move(to: CGPoint(x: -0.03, y: 12.96))
        raysPath.addCurve(to: CGPoint(x: -0.15, y: 13), controlPoint1: CGPoint(x: -0.07, y: 12.97), controlPoint2: CGPoint(x: -0.11, y: 12.98))
        raysPath.addCurve(to: CGPoint(x: -0.93, y: 13.99), controlPoint1: CGPoint(x: -0.61, y: 13.1), controlPoint2: CGPoint(x: -0.94, y: 13.52))
        raysPath.addLine(to: CGPoint(x: -0.93, y: 19.99))
        raysPath.addCurve(to: CGPoint(x: -0.43, y: 20.87), controlPoint1: CGPoint(x: -0.93, y: 20.35), controlPoint2: CGPoint(x: -0.74, y: 20.68))
        raysPath.addCurve(to: CGPoint(x: 0.57, y: 20.87), controlPoint1: CGPoint(x: -0.12, y: 21.04), controlPoint2: CGPoint(x: 0.26, y: 21.04))
        raysPath.addCurve(to: CGPoint(x: 1.06, y: 19.99), controlPoint1: CGPoint(x: 0.88, y: 20.68), controlPoint2: CGPoint(x: 1.07, y: 20.35))
        raysPath.addLine(to: CGPoint(x: 1.06, y: 13.99))
        raysPath.addCurve(to: CGPoint(x: 0.75, y: 13.23), controlPoint1: CGPoint(x: 1.08, y: 13.71), controlPoint2: CGPoint(x: 0.96, y: 13.43))
        raysPath.addCurve(to: CGPoint(x: -0.03, y: 12.96), controlPoint1: CGPoint(x: 0.54, y: 13.03), controlPoint2: CGPoint(x: 0.26, y: 12.94))
        raysPath.close()
        fillColor.setFill()
        raysPath.fill()

        context.restoreGState()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawMoonWaningGibbous(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 50, height: 50), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 50, height: 50), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 50, y: resizedFrame.height / 50)


        //// Color Declarations
        let fillColor = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1.000)

        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 2, y: 25))
        bezierPath.addCurve(to: CGPoint(x: 25, y: 48), controlPoint1: CGPoint(x: 2, y: 37.68), controlPoint2: CGPoint(x: 12.32, y: 48))
        bezierPath.addCurve(to: CGPoint(x: 48, y: 25), controlPoint1: CGPoint(x: 37.68, y: 48), controlPoint2: CGPoint(x: 48, y: 37.68))
        bezierPath.addCurve(to: CGPoint(x: 25, y: 2), controlPoint1: CGPoint(x: 48, y: 12.32), controlPoint2: CGPoint(x: 37.68, y: 2))
        bezierPath.addCurve(to: CGPoint(x: 2, y: 25), controlPoint1: CGPoint(x: 12.32, y: 2), controlPoint2: CGPoint(x: 2, y: 12.32))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 4, y: 25))
        bezierPath.addCurve(to: CGPoint(x: 25, y: 4), controlPoint1: CGPoint(x: 4, y: 13.42), controlPoint2: CGPoint(x: 13.42, y: 4))
        bezierPath.addCurve(to: CGPoint(x: 34.08, y: 25), controlPoint1: CGPoint(x: 29.92, y: 4), controlPoint2: CGPoint(x: 34.08, y: 13.62))
        bezierPath.addCurve(to: CGPoint(x: 25, y: 46), controlPoint1: CGPoint(x: 34.08, y: 36.38), controlPoint2: CGPoint(x: 29.92, y: 46))
        bezierPath.addCurve(to: CGPoint(x: 4, y: 25), controlPoint1: CGPoint(x: 13.42, y: 46), controlPoint2: CGPoint(x: 4, y: 36.58))
        bezierPath.close()
        fillColor.setFill()
        bezierPath.fill()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawWeatherPartlyCloudyDay(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 50, height: 50), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 50, height: 50), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 50, y: resizedFrame.height / 50)


        //// Color Declarations
        let fillColor = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1.000)

        //// surface1
        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 16.91, y: 3.97))
        bezierPath.addCurve(to: CGPoint(x: 16.78, y: 4), controlPoint1: CGPoint(x: 16.86, y: 3.98), controlPoint2: CGPoint(x: 16.82, y: 3.99))
        bezierPath.addCurve(to: CGPoint(x: 16, y: 5), controlPoint1: CGPoint(x: 16.32, y: 4.11), controlPoint2: CGPoint(x: 15.99, y: 4.52))
        bezierPath.addLine(to: CGPoint(x: 16, y: 10))
        bezierPath.addCurve(to: CGPoint(x: 16.5, y: 10.88), controlPoint1: CGPoint(x: 16, y: 10.36), controlPoint2: CGPoint(x: 16.18, y: 10.7))
        bezierPath.addCurve(to: CGPoint(x: 17.5, y: 10.88), controlPoint1: CGPoint(x: 16.81, y: 11.06), controlPoint2: CGPoint(x: 17.19, y: 11.06))
        bezierPath.addCurve(to: CGPoint(x: 18, y: 10), controlPoint1: CGPoint(x: 17.82, y: 10.7), controlPoint2: CGPoint(x: 18, y: 10.36))
        bezierPath.addLine(to: CGPoint(x: 18, y: 5))
        bezierPath.addCurve(to: CGPoint(x: 17.69, y: 4.24), controlPoint1: CGPoint(x: 18.01, y: 4.71), controlPoint2: CGPoint(x: 17.89, y: 4.43))
        bezierPath.addCurve(to: CGPoint(x: 16.91, y: 3.97), controlPoint1: CGPoint(x: 17.48, y: 4.04), controlPoint2: CGPoint(x: 17.19, y: 3.94))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 5.59, y: 8.66))
        bezierPath.addCurve(to: CGPoint(x: 5.47, y: 8.69), controlPoint1: CGPoint(x: 5.55, y: 8.66), controlPoint2: CGPoint(x: 5.51, y: 8.68))
        bezierPath.addCurve(to: CGPoint(x: 4.69, y: 9.39), controlPoint1: CGPoint(x: 5.09, y: 8.75), controlPoint2: CGPoint(x: 4.79, y: 9.03))
        bezierPath.addCurve(to: CGPoint(x: 4.97, y: 10.41), controlPoint1: CGPoint(x: 4.58, y: 9.76), controlPoint2: CGPoint(x: 4.69, y: 10.15))
        bezierPath.addLine(to: CGPoint(x: 8.5, y: 13.94))
        bezierPath.addCurve(to: CGPoint(x: 9.94, y: 13.94), controlPoint1: CGPoint(x: 8.9, y: 14.34), controlPoint2: CGPoint(x: 9.54, y: 14.34))
        bezierPath.addCurve(to: CGPoint(x: 9.94, y: 12.5), controlPoint1: CGPoint(x: 10.34, y: 13.54), controlPoint2: CGPoint(x: 10.34, y: 12.9))
        bezierPath.addLine(to: CGPoint(x: 6.41, y: 8.97))
        bezierPath.addCurve(to: CGPoint(x: 5.59, y: 8.66), controlPoint1: CGPoint(x: 6.2, y: 8.75), controlPoint2: CGPoint(x: 5.9, y: 8.63))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 28.22, y: 8.66))
        bezierPath.addCurve(to: CGPoint(x: 28.09, y: 8.69), controlPoint1: CGPoint(x: 28.18, y: 8.66), controlPoint2: CGPoint(x: 28.13, y: 8.68))
        bezierPath.addCurve(to: CGPoint(x: 27.59, y: 8.97), controlPoint1: CGPoint(x: 27.9, y: 8.73), controlPoint2: CGPoint(x: 27.73, y: 8.83))
        bezierPath.addLine(to: CGPoint(x: 24.06, y: 12.5))
        bezierPath.addCurve(to: CGPoint(x: 24.06, y: 13.94), controlPoint1: CGPoint(x: 23.66, y: 12.9), controlPoint2: CGPoint(x: 23.66, y: 13.54))
        bezierPath.addCurve(to: CGPoint(x: 25.5, y: 13.94), controlPoint1: CGPoint(x: 24.46, y: 14.34), controlPoint2: CGPoint(x: 25.1, y: 14.34))
        bezierPath.addLine(to: CGPoint(x: 29.03, y: 10.41))
        bezierPath.addCurve(to: CGPoint(x: 29.29, y: 9.22), controlPoint1: CGPoint(x: 29.38, y: 10.12), controlPoint2: CGPoint(x: 29.48, y: 9.63))
        bezierPath.addCurve(to: CGPoint(x: 28.22, y: 8.66), controlPoint1: CGPoint(x: 29.1, y: 8.81), controlPoint2: CGPoint(x: 28.66, y: 8.58))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 17, y: 13))
        bezierPath.addCurve(to: CGPoint(x: 9, y: 21), controlPoint1: CGPoint(x: 12.58, y: 13), controlPoint2: CGPoint(x: 9, y: 16.58))
        bezierPath.addCurve(to: CGPoint(x: 13.25, y: 28.06), controlPoint1: CGPoint(x: 9, y: 24.07), controlPoint2: CGPoint(x: 10.72, y: 26.72))
        bezierPath.addCurve(to: CGPoint(x: 17, y: 25.5), controlPoint1: CGPoint(x: 14.25, y: 26.92), controlPoint2: CGPoint(x: 15.53, y: 26.02))
        bezierPath.addCurve(to: CGPoint(x: 22.94, y: 15.66), controlPoint1: CGPoint(x: 17.17, y: 21.3), controlPoint2: CGPoint(x: 19.52, y: 17.66))
        bezierPath.addCurve(to: CGPoint(x: 17, y: 13), controlPoint1: CGPoint(x: 21.47, y: 14.03), controlPoint2: CGPoint(x: 19.36, y: 13))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 29, y: 16))
        bezierPath.addCurve(to: CGPoint(x: 19, y: 26), controlPoint1: CGPoint(x: 23.48, y: 16), controlPoint2: CGPoint(x: 19, y: 20.48))
        bezierPath.addCurve(to: CGPoint(x: 19.06, y: 27.06), controlPoint1: CGPoint(x: 19, y: 26.35), controlPoint2: CGPoint(x: 19.02, y: 26.71))
        bezierPath.addCurve(to: CGPoint(x: 13, y: 34), controlPoint1: CGPoint(x: 15.64, y: 27.52), controlPoint2: CGPoint(x: 13, y: 30.46))
        bezierPath.addCurve(to: CGPoint(x: 20, y: 41), controlPoint1: CGPoint(x: 13, y: 37.86), controlPoint2: CGPoint(x: 16.14, y: 41))
        bezierPath.addLine(to: CGPoint(x: 41, y: 41))
        bezierPath.addCurve(to: CGPoint(x: 50, y: 32), controlPoint1: CGPoint(x: 45.96, y: 41), controlPoint2: CGPoint(x: 50, y: 36.96))
        bezierPath.addCurve(to: CGPoint(x: 41, y: 23), controlPoint1: CGPoint(x: 50, y: 27.04), controlPoint2: CGPoint(x: 45.96, y: 23))
        bezierPath.addCurve(to: CGPoint(x: 38.62, y: 23.31), controlPoint1: CGPoint(x: 40.19, y: 23), controlPoint2: CGPoint(x: 39.39, y: 23.1))
        bezierPath.addCurve(to: CGPoint(x: 29, y: 16), controlPoint1: CGPoint(x: 37.44, y: 19.01), controlPoint2: CGPoint(x: 33.57, y: 16))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 0.81, y: 20))
        bezierPath.addCurve(to: CGPoint(x: -0.09, y: 21.09), controlPoint1: CGPoint(x: 0.26, y: 20.05), controlPoint2: CGPoint(x: -0.14, y: 20.54))
        bezierPath.addCurve(to: CGPoint(x: 1, y: 22), controlPoint1: CGPoint(x: -0.04, y: 21.64), controlPoint2: CGPoint(x: 0.45, y: 22.05))
        bezierPath.addLine(to: CGPoint(x: 6, y: 22))
        bezierPath.addCurve(to: CGPoint(x: 6.88, y: 21.5), controlPoint1: CGPoint(x: 6.36, y: 22), controlPoint2: CGPoint(x: 6.7, y: 21.82))
        bezierPath.addCurve(to: CGPoint(x: 6.88, y: 20.5), controlPoint1: CGPoint(x: 7.06, y: 21.19), controlPoint2: CGPoint(x: 7.06, y: 20.81))
        bezierPath.addCurve(to: CGPoint(x: 6, y: 20), controlPoint1: CGPoint(x: 6.7, y: 20.18), controlPoint2: CGPoint(x: 6.36, y: 20))
        bezierPath.addLine(to: CGPoint(x: 1, y: 20))
        bezierPath.addCurve(to: CGPoint(x: 0.91, y: 20), controlPoint1: CGPoint(x: 0.97, y: 20), controlPoint2: CGPoint(x: 0.94, y: 20))
        bezierPath.addCurve(to: CGPoint(x: 0.81, y: 20), controlPoint1: CGPoint(x: 0.88, y: 20), controlPoint2: CGPoint(x: 0.84, y: 20))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 9.12, y: 27.75))
        bezierPath.addCurve(to: CGPoint(x: 9, y: 27.78), controlPoint1: CGPoint(x: 9.08, y: 27.76), controlPoint2: CGPoint(x: 9.04, y: 27.77))
        bezierPath.addCurve(to: CGPoint(x: 8.5, y: 28.06), controlPoint1: CGPoint(x: 8.81, y: 27.82), controlPoint2: CGPoint(x: 8.64, y: 27.92))
        bezierPath.addLine(to: CGPoint(x: 4.97, y: 31.59))
        bezierPath.addCurve(to: CGPoint(x: 4.97, y: 33.03), controlPoint1: CGPoint(x: 4.57, y: 31.99), controlPoint2: CGPoint(x: 4.57, y: 32.63))
        bezierPath.addCurve(to: CGPoint(x: 6.41, y: 33.03), controlPoint1: CGPoint(x: 5.37, y: 33.43), controlPoint2: CGPoint(x: 6.01, y: 33.43))
        bezierPath.addLine(to: CGPoint(x: 9.94, y: 29.47))
        bezierPath.addCurve(to: CGPoint(x: 10.16, y: 28.32), controlPoint1: CGPoint(x: 10.25, y: 29.17), controlPoint2: CGPoint(x: 10.34, y: 28.71))
        bezierPath.addCurve(to: CGPoint(x: 9.12, y: 27.75), controlPoint1: CGPoint(x: 9.97, y: 27.92), controlPoint2: CGPoint(x: 9.55, y: 27.7))
        bezierPath.close()
        fillColor.setFill()
        bezierPath.fill()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawWeatherPartlyCloudyRainDay(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 50, height: 50), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 50, height: 50), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 50, y: resizedFrame.height / 50)


        //// Color Declarations
        let fillColor = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1.000)

        //// surface1
        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 17, y: 2))
        bezierPath.addCurve(to: CGPoint(x: 16, y: 3), controlPoint1: CGPoint(x: 16.45, y: 2), controlPoint2: CGPoint(x: 16, y: 2.45))
        bezierPath.addLine(to: CGPoint(x: 16, y: 8))
        bezierPath.addCurve(to: CGPoint(x: 17, y: 9), controlPoint1: CGPoint(x: 16, y: 8.55), controlPoint2: CGPoint(x: 16.45, y: 9))
        bezierPath.addCurve(to: CGPoint(x: 18, y: 8), controlPoint1: CGPoint(x: 17.55, y: 9), controlPoint2: CGPoint(x: 18, y: 8.55))
        bezierPath.addLine(to: CGPoint(x: 18, y: 3))
        bezierPath.addCurve(to: CGPoint(x: 17, y: 2), controlPoint1: CGPoint(x: 18, y: 2.45), controlPoint2: CGPoint(x: 17.55, y: 2))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 5.69, y: 6.69))
        bezierPath.addCurve(to: CGPoint(x: 4.97, y: 6.97), controlPoint1: CGPoint(x: 5.43, y: 6.69), controlPoint2: CGPoint(x: 5.16, y: 6.77))
        bezierPath.addCurve(to: CGPoint(x: 4.97, y: 8.41), controlPoint1: CGPoint(x: 4.58, y: 7.36), controlPoint2: CGPoint(x: 4.58, y: 8.02))
        bezierPath.addLine(to: CGPoint(x: 8.53, y: 11.94))
        bezierPath.addCurve(to: CGPoint(x: 9.22, y: 12.22), controlPoint1: CGPoint(x: 8.73, y: 12.13), controlPoint2: CGPoint(x: 8.96, y: 12.22))
        bezierPath.addCurve(to: CGPoint(x: 9.94, y: 11.94), controlPoint1: CGPoint(x: 9.48, y: 12.22), controlPoint2: CGPoint(x: 9.74, y: 12.13))
        bezierPath.addCurve(to: CGPoint(x: 9.94, y: 10.5), controlPoint1: CGPoint(x: 10.33, y: 11.55), controlPoint2: CGPoint(x: 10.33, y: 10.89))
        bezierPath.addLine(to: CGPoint(x: 6.41, y: 6.97))
        bezierPath.addCurve(to: CGPoint(x: 5.69, y: 6.69), controlPoint1: CGPoint(x: 6.21, y: 6.77), controlPoint2: CGPoint(x: 5.94, y: 6.69))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 28.31, y: 6.69))
        bezierPath.addCurve(to: CGPoint(x: 27.59, y: 6.97), controlPoint1: CGPoint(x: 28.06, y: 6.69), controlPoint2: CGPoint(x: 27.79, y: 6.77))
        bezierPath.addLine(to: CGPoint(x: 24.06, y: 10.5))
        bezierPath.addCurve(to: CGPoint(x: 24.06, y: 11.94), controlPoint1: CGPoint(x: 23.67, y: 10.89), controlPoint2: CGPoint(x: 23.67, y: 11.55))
        bezierPath.addCurve(to: CGPoint(x: 24.78, y: 12.22), controlPoint1: CGPoint(x: 24.26, y: 12.13), controlPoint2: CGPoint(x: 24.52, y: 12.22))
        bezierPath.addCurve(to: CGPoint(x: 25.5, y: 11.94), controlPoint1: CGPoint(x: 25.04, y: 12.22), controlPoint2: CGPoint(x: 25.3, y: 12.13))
        bezierPath.addLine(to: CGPoint(x: 29.03, y: 8.41))
        bezierPath.addCurve(to: CGPoint(x: 29.03, y: 6.97), controlPoint1: CGPoint(x: 29.42, y: 8.02), controlPoint2: CGPoint(x: 29.42, y: 7.36))
        bezierPath.addCurve(to: CGPoint(x: 28.31, y: 6.69), controlPoint1: CGPoint(x: 28.84, y: 6.77), controlPoint2: CGPoint(x: 28.57, y: 6.69))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 17, y: 11))
        bezierPath.addCurve(to: CGPoint(x: 9, y: 19), controlPoint1: CGPoint(x: 12.58, y: 11), controlPoint2: CGPoint(x: 9, y: 14.58))
        bezierPath.addCurve(to: CGPoint(x: 13.25, y: 26.06), controlPoint1: CGPoint(x: 9, y: 22.06), controlPoint2: CGPoint(x: 10.72, y: 24.72))
        bezierPath.addCurve(to: CGPoint(x: 17, y: 23.5), controlPoint1: CGPoint(x: 14.25, y: 24.92), controlPoint2: CGPoint(x: 15.53, y: 24.02))
        bezierPath.addCurve(to: CGPoint(x: 22.94, y: 13.66), controlPoint1: CGPoint(x: 17.17, y: 19.3), controlPoint2: CGPoint(x: 19.52, y: 15.67))
        bezierPath.addCurve(to: CGPoint(x: 17, y: 11), controlPoint1: CGPoint(x: 21.47, y: 12.03), controlPoint2: CGPoint(x: 19.36, y: 11))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 29, y: 14))
        bezierPath.addCurve(to: CGPoint(x: 23.19, y: 15.88), controlPoint1: CGPoint(x: 26.83, y: 14), controlPoint2: CGPoint(x: 24.83, y: 14.7))
        bezierPath.addCurve(to: CGPoint(x: 22.75, y: 16.22), controlPoint1: CGPoint(x: 23.04, y: 15.98), controlPoint2: CGPoint(x: 22.89, y: 16.1))
        bezierPath.addCurve(to: CGPoint(x: 22.53, y: 16.41), controlPoint1: CGPoint(x: 22.68, y: 16.28), controlPoint2: CGPoint(x: 22.61, y: 16.34))
        bezierPath.addCurve(to: CGPoint(x: 21.53, y: 17.41), controlPoint1: CGPoint(x: 22.17, y: 16.71), controlPoint2: CGPoint(x: 21.84, y: 17.05))
        bezierPath.addCurve(to: CGPoint(x: 21.22, y: 17.75), controlPoint1: CGPoint(x: 21.43, y: 17.52), controlPoint2: CGPoint(x: 21.32, y: 17.63))
        bezierPath.addCurve(to: CGPoint(x: 21.06, y: 17.94), controlPoint1: CGPoint(x: 21.17, y: 17.81), controlPoint2: CGPoint(x: 21.11, y: 17.88))
        bezierPath.addCurve(to: CGPoint(x: 20.53, y: 18.72), controlPoint1: CGPoint(x: 20.87, y: 18.19), controlPoint2: CGPoint(x: 20.7, y: 18.45))
        bezierPath.addCurve(to: CGPoint(x: 20.31, y: 19.12), controlPoint1: CGPoint(x: 20.45, y: 18.85), controlPoint2: CGPoint(x: 20.39, y: 18.99))
        bezierPath.addCurve(to: CGPoint(x: 20.22, y: 19.25), controlPoint1: CGPoint(x: 20.29, y: 19.17), controlPoint2: CGPoint(x: 20.24, y: 19.21))
        bezierPath.addCurve(to: CGPoint(x: 19.81, y: 20.06), controlPoint1: CGPoint(x: 20.07, y: 19.52), controlPoint2: CGPoint(x: 19.93, y: 19.78))
        bezierPath.addCurve(to: CGPoint(x: 19.19, y: 22.16), controlPoint1: CGPoint(x: 19.52, y: 20.73), controlPoint2: CGPoint(x: 19.32, y: 21.43))
        bezierPath.addCurve(to: CGPoint(x: 19.06, y: 22.88), controlPoint1: CGPoint(x: 19.14, y: 22.39), controlPoint2: CGPoint(x: 19.09, y: 22.63))
        bezierPath.addCurve(to: CGPoint(x: 19, y: 24), controlPoint1: CGPoint(x: 19.02, y: 23.24), controlPoint2: CGPoint(x: 19, y: 23.62))
        bezierPath.addCurve(to: CGPoint(x: 19.06, y: 25.06), controlPoint1: CGPoint(x: 19, y: 24.35), controlPoint2: CGPoint(x: 19.02, y: 24.71))
        bezierPath.addCurve(to: CGPoint(x: 18.34, y: 25.22), controlPoint1: CGPoint(x: 18.82, y: 25.1), controlPoint2: CGPoint(x: 18.58, y: 25.16))
        bezierPath.addCurve(to: CGPoint(x: 17.88, y: 25.31), controlPoint1: CGPoint(x: 18.19, y: 25.26), controlPoint2: CGPoint(x: 18.02, y: 25.27))
        bezierPath.addCurve(to: CGPoint(x: 17.22, y: 25.56), controlPoint1: CGPoint(x: 17.65, y: 25.38), controlPoint2: CGPoint(x: 17.43, y: 25.47))
        bezierPath.addCurve(to: CGPoint(x: 17.03, y: 25.66), controlPoint1: CGPoint(x: 17.16, y: 25.59), controlPoint2: CGPoint(x: 17.09, y: 25.62))
        bezierPath.addCurve(to: CGPoint(x: 15.47, y: 26.69), controlPoint1: CGPoint(x: 16.45, y: 25.93), controlPoint2: CGPoint(x: 15.95, y: 26.28))
        bezierPath.addCurve(to: CGPoint(x: 15.31, y: 26.81), controlPoint1: CGPoint(x: 15.42, y: 26.73), controlPoint2: CGPoint(x: 15.36, y: 26.77))
        bezierPath.addCurve(to: CGPoint(x: 13, y: 32), controlPoint1: CGPoint(x: 13.9, y: 28.09), controlPoint2: CGPoint(x: 13, y: 29.95))
        bezierPath.addCurve(to: CGPoint(x: 20, y: 39), controlPoint1: CGPoint(x: 13, y: 35.86), controlPoint2: CGPoint(x: 16.14, y: 39))
        bezierPath.addLine(to: CGPoint(x: 41, y: 39))
        bezierPath.addCurve(to: CGPoint(x: 50, y: 30), controlPoint1: CGPoint(x: 45.96, y: 39), controlPoint2: CGPoint(x: 50, y: 34.96))
        bezierPath.addCurve(to: CGPoint(x: 41, y: 21), controlPoint1: CGPoint(x: 50, y: 25.04), controlPoint2: CGPoint(x: 45.96, y: 21))
        bezierPath.addCurve(to: CGPoint(x: 38.62, y: 21.31), controlPoint1: CGPoint(x: 40.19, y: 21), controlPoint2: CGPoint(x: 39.39, y: 21.1))
        bezierPath.addCurve(to: CGPoint(x: 29, y: 14), controlPoint1: CGPoint(x: 37.44, y: 17.01), controlPoint2: CGPoint(x: 33.57, y: 14))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 1, y: 18))
        bezierPath.addCurve(to: CGPoint(x: 0, y: 19), controlPoint1: CGPoint(x: 0.45, y: 18), controlPoint2: CGPoint(x: 0, y: 18.45))
        bezierPath.addCurve(to: CGPoint(x: 1, y: 20), controlPoint1: CGPoint(x: 0, y: 19.55), controlPoint2: CGPoint(x: 0.45, y: 20))
        bezierPath.addLine(to: CGPoint(x: 6, y: 20))
        bezierPath.addCurve(to: CGPoint(x: 7, y: 19), controlPoint1: CGPoint(x: 6.55, y: 20), controlPoint2: CGPoint(x: 7, y: 19.55))
        bezierPath.addCurve(to: CGPoint(x: 6, y: 18), controlPoint1: CGPoint(x: 7, y: 18.45), controlPoint2: CGPoint(x: 6.55, y: 18))
        bezierPath.addLine(to: CGPoint(x: 1, y: 18))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 9.22, y: 25.78))
        bezierPath.addCurve(to: CGPoint(x: 8.53, y: 26.06), controlPoint1: CGPoint(x: 8.96, y: 25.78), controlPoint2: CGPoint(x: 8.73, y: 25.87))
        bezierPath.addLine(to: CGPoint(x: 4.97, y: 29.59))
        bezierPath.addCurve(to: CGPoint(x: 4.97, y: 31.03), controlPoint1: CGPoint(x: 4.58, y: 29.98), controlPoint2: CGPoint(x: 4.58, y: 30.64))
        bezierPath.addCurve(to: CGPoint(x: 5.69, y: 31.31), controlPoint1: CGPoint(x: 5.16, y: 31.23), controlPoint2: CGPoint(x: 5.43, y: 31.31))
        bezierPath.addCurve(to: CGPoint(x: 6.41, y: 31.03), controlPoint1: CGPoint(x: 5.95, y: 31.31), controlPoint2: CGPoint(x: 6.21, y: 31.23))
        bezierPath.addLine(to: CGPoint(x: 9.94, y: 27.5))
        bezierPath.addCurve(to: CGPoint(x: 9.94, y: 26.06), controlPoint1: CGPoint(x: 10.33, y: 27.11), controlPoint2: CGPoint(x: 10.33, y: 26.45))
        bezierPath.addCurve(to: CGPoint(x: 9.22, y: 25.78), controlPoint1: CGPoint(x: 9.74, y: 25.87), controlPoint2: CGPoint(x: 9.47, y: 25.78))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 22, y: 41))
        bezierPath.addCurve(to: CGPoint(x: 21.28, y: 41.28), controlPoint1: CGPoint(x: 21.75, y: 41), controlPoint2: CGPoint(x: 21.48, y: 41.09))
        bezierPath.addLine(to: CGPoint(x: 19.28, y: 43.28))
        bezierPath.addCurve(to: CGPoint(x: 19.28, y: 44.72), controlPoint1: CGPoint(x: 18.89, y: 43.67), controlPoint2: CGPoint(x: 18.89, y: 44.33))
        bezierPath.addCurve(to: CGPoint(x: 20, y: 45), controlPoint1: CGPoint(x: 19.48, y: 44.91), controlPoint2: CGPoint(x: 19.74, y: 45))
        bezierPath.addCurve(to: CGPoint(x: 20.72, y: 44.72), controlPoint1: CGPoint(x: 20.26, y: 45), controlPoint2: CGPoint(x: 20.52, y: 44.91))
        bezierPath.addLine(to: CGPoint(x: 22.72, y: 42.72))
        bezierPath.addCurve(to: CGPoint(x: 22.72, y: 41.28), controlPoint1: CGPoint(x: 23.11, y: 42.33), controlPoint2: CGPoint(x: 23.11, y: 41.67))
        bezierPath.addCurve(to: CGPoint(x: 22, y: 41), controlPoint1: CGPoint(x: 22.52, y: 41.09), controlPoint2: CGPoint(x: 22.25, y: 41))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 41, y: 41))
        bezierPath.addCurve(to: CGPoint(x: 40.28, y: 41.28), controlPoint1: CGPoint(x: 40.75, y: 41), controlPoint2: CGPoint(x: 40.48, y: 41.09))
        bezierPath.addLine(to: CGPoint(x: 38.28, y: 43.28))
        bezierPath.addCurve(to: CGPoint(x: 38.28, y: 44.72), controlPoint1: CGPoint(x: 37.89, y: 43.67), controlPoint2: CGPoint(x: 37.89, y: 44.33))
        bezierPath.addCurve(to: CGPoint(x: 39, y: 45), controlPoint1: CGPoint(x: 38.48, y: 44.91), controlPoint2: CGPoint(x: 38.74, y: 45))
        bezierPath.addCurve(to: CGPoint(x: 39.72, y: 44.72), controlPoint1: CGPoint(x: 39.26, y: 45), controlPoint2: CGPoint(x: 39.52, y: 44.91))
        bezierPath.addLine(to: CGPoint(x: 41.72, y: 42.72))
        bezierPath.addCurve(to: CGPoint(x: 41.72, y: 41.28), controlPoint1: CGPoint(x: 42.11, y: 42.33), controlPoint2: CGPoint(x: 42.11, y: 41.67))
        bezierPath.addCurve(to: CGPoint(x: 41, y: 41), controlPoint1: CGPoint(x: 41.52, y: 41.09), controlPoint2: CGPoint(x: 41.25, y: 41))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 31, y: 45))
        bezierPath.addCurve(to: CGPoint(x: 30.28, y: 45.28), controlPoint1: CGPoint(x: 30.75, y: 45), controlPoint2: CGPoint(x: 30.48, y: 45.09))
        bezierPath.addLine(to: CGPoint(x: 28.28, y: 47.28))
        bezierPath.addCurve(to: CGPoint(x: 28.28, y: 48.72), controlPoint1: CGPoint(x: 27.89, y: 47.67), controlPoint2: CGPoint(x: 27.89, y: 48.33))
        bezierPath.addCurve(to: CGPoint(x: 29, y: 49), controlPoint1: CGPoint(x: 28.48, y: 48.91), controlPoint2: CGPoint(x: 28.74, y: 49))
        bezierPath.addCurve(to: CGPoint(x: 29.72, y: 48.72), controlPoint1: CGPoint(x: 29.26, y: 49), controlPoint2: CGPoint(x: 29.52, y: 48.91))
        bezierPath.addLine(to: CGPoint(x: 31.72, y: 46.72))
        bezierPath.addCurve(to: CGPoint(x: 31.72, y: 45.28), controlPoint1: CGPoint(x: 32.11, y: 46.33), controlPoint2: CGPoint(x: 32.11, y: 45.67))
        bezierPath.addCurve(to: CGPoint(x: 31, y: 45), controlPoint1: CGPoint(x: 31.52, y: 45.09), controlPoint2: CGPoint(x: 31.25, y: 45))
        bezierPath.close()
        fillColor.setFill()
        bezierPath.fill()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawMoonNew(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 50, height: 50), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 50, height: 50), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 50, y: resizedFrame.height / 50)


        //// Color Declarations
        let fillColor = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1.000)

        //// Oval Drawing
        let ovalPath = UIBezierPath(ovalIn: CGRect(x: 2, y: 2, width: 46, height: 46))
        fillColor.setFill()
        ovalPath.fill()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawMoonWaningCrescent(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 50, height: 50), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 50, height: 50), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 50, y: resizedFrame.height / 50)


        //// Color Declarations
        let fillColor = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1.000)

        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 2, y: 25))
        bezierPath.addCurve(to: CGPoint(x: 25, y: 48), controlPoint1: CGPoint(x: 2, y: 37.68), controlPoint2: CGPoint(x: 12.32, y: 48))
        bezierPath.addCurve(to: CGPoint(x: 48, y: 25), controlPoint1: CGPoint(x: 37.68, y: 48), controlPoint2: CGPoint(x: 48, y: 37.68))
        bezierPath.addCurve(to: CGPoint(x: 25, y: 2), controlPoint1: CGPoint(x: 48, y: 12.32), controlPoint2: CGPoint(x: 37.68, y: 2))
        bezierPath.addCurve(to: CGPoint(x: 2, y: 25), controlPoint1: CGPoint(x: 12.32, y: 2), controlPoint2: CGPoint(x: 2, y: 12.32))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 4, y: 25))
        bezierPath.addCurve(to: CGPoint(x: 19.71, y: 4.7), controlPoint1: CGPoint(x: 4, y: 15.25), controlPoint2: CGPoint(x: 10.69, y: 7.06))
        bezierPath.addCurve(to: CGPoint(x: 13.92, y: 25), controlPoint1: CGPoint(x: 16.23, y: 8.54), controlPoint2: CGPoint(x: 13.92, y: 16.11))
        bezierPath.addCurve(to: CGPoint(x: 19.71, y: 45.3), controlPoint1: CGPoint(x: 13.92, y: 33.89), controlPoint2: CGPoint(x: 16.23, y: 41.46))
        bezierPath.addCurve(to: CGPoint(x: 4, y: 25), controlPoint1: CGPoint(x: 10.69, y: 42.94), controlPoint2: CGPoint(x: 4, y: 34.75))
        bezierPath.close()
        fillColor.setFill()
        bezierPath.fill()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawMoonWaxingGibbous(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 50, height: 50), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 50, height: 50), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 50, y: resizedFrame.height / 50)


        //// Color Declarations
        let fillColor = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1.000)

        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 25, y: 2))
        bezierPath.addCurve(to: CGPoint(x: 2, y: 25), controlPoint1: CGPoint(x: 12.32, y: 2), controlPoint2: CGPoint(x: 2, y: 12.32))
        bezierPath.addCurve(to: CGPoint(x: 25, y: 48), controlPoint1: CGPoint(x: 2, y: 37.68), controlPoint2: CGPoint(x: 12.32, y: 48))
        bezierPath.addCurve(to: CGPoint(x: 48, y: 25), controlPoint1: CGPoint(x: 37.68, y: 48), controlPoint2: CGPoint(x: 48, y: 37.68))
        bezierPath.addCurve(to: CGPoint(x: 25, y: 2), controlPoint1: CGPoint(x: 48, y: 12.32), controlPoint2: CGPoint(x: 37.68, y: 2))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 25, y: 46))
        bezierPath.addCurve(to: CGPoint(x: 15.92, y: 25), controlPoint1: CGPoint(x: 20.08, y: 46), controlPoint2: CGPoint(x: 15.92, y: 36.38))
        bezierPath.addCurve(to: CGPoint(x: 25, y: 4), controlPoint1: CGPoint(x: 15.92, y: 13.62), controlPoint2: CGPoint(x: 20.08, y: 4))
        bezierPath.addCurve(to: CGPoint(x: 46, y: 25), controlPoint1: CGPoint(x: 36.58, y: 4), controlPoint2: CGPoint(x: 46, y: 13.42))
        bezierPath.addCurve(to: CGPoint(x: 25, y: 46), controlPoint1: CGPoint(x: 46, y: 36.58), controlPoint2: CGPoint(x: 36.58, y: 46))
        bezierPath.close()
        fillColor.setFill()
        bezierPath.fill()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawMoonFirstQuarter(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 50, height: 50), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 50, height: 50), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 50, y: resizedFrame.height / 50)


        //// Color Declarations
        let fillColor = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1.000)

        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 2, y: 25))
        bezierPath.addCurve(to: CGPoint(x: 23.86, y: 47.97), controlPoint1: CGPoint(x: 2, y: 37.3), controlPoint2: CGPoint(x: 11.7, y: 47.37))
        bezierPath.addCurve(to: CGPoint(x: 24, y: 48), controlPoint1: CGPoint(x: 23.91, y: 47.98), controlPoint2: CGPoint(x: 23.95, y: 48))
        bezierPath.addCurve(to: CGPoint(x: 24.11, y: 47.98), controlPoint1: CGPoint(x: 24.04, y: 48), controlPoint2: CGPoint(x: 24.07, y: 47.98))
        bezierPath.addCurve(to: CGPoint(x: 25, y: 48), controlPoint1: CGPoint(x: 24.41, y: 47.99), controlPoint2: CGPoint(x: 24.7, y: 48))
        bezierPath.addCurve(to: CGPoint(x: 48, y: 25), controlPoint1: CGPoint(x: 37.68, y: 48), controlPoint2: CGPoint(x: 48, y: 37.68))
        bezierPath.addCurve(to: CGPoint(x: 25, y: 2), controlPoint1: CGPoint(x: 48, y: 12.32), controlPoint2: CGPoint(x: 37.68, y: 2))
        bezierPath.addCurve(to: CGPoint(x: 24.11, y: 2.02), controlPoint1: CGPoint(x: 24.7, y: 2), controlPoint2: CGPoint(x: 24.41, y: 2.01))
        bezierPath.addCurve(to: CGPoint(x: 24, y: 2), controlPoint1: CGPoint(x: 24.07, y: 2.02), controlPoint2: CGPoint(x: 24.04, y: 2))
        bezierPath.addCurve(to: CGPoint(x: 23.86, y: 2.03), controlPoint1: CGPoint(x: 23.95, y: 2), controlPoint2: CGPoint(x: 23.91, y: 2.02))
        bezierPath.addCurve(to: CGPoint(x: 2, y: 25), controlPoint1: CGPoint(x: 11.7, y: 2.63), controlPoint2: CGPoint(x: 2, y: 12.7))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 46, y: 25))
        bezierPath.addCurve(to: CGPoint(x: 25, y: 46), controlPoint1: CGPoint(x: 46, y: 36.58), controlPoint2: CGPoint(x: 36.58, y: 46))
        bezierPath.addLine(to: CGPoint(x: 25, y: 4))
        bezierPath.addCurve(to: CGPoint(x: 46, y: 25), controlPoint1: CGPoint(x: 36.58, y: 4), controlPoint2: CGPoint(x: 46, y: 13.42))
        bezierPath.close()
        fillColor.setFill()
        bezierPath.fill()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawMoonWaxingCrescent(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 50, height: 50), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 50, height: 50), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 50, y: resizedFrame.height / 50)


        //// Color Declarations
        let fillColor = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1.000)

        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 25, y: 2))
        bezierPath.addCurve(to: CGPoint(x: 2, y: 25), controlPoint1: CGPoint(x: 12.32, y: 2), controlPoint2: CGPoint(x: 2, y: 12.32))
        bezierPath.addCurve(to: CGPoint(x: 25, y: 48), controlPoint1: CGPoint(x: 2, y: 37.68), controlPoint2: CGPoint(x: 12.32, y: 48))
        bezierPath.addCurve(to: CGPoint(x: 48, y: 25), controlPoint1: CGPoint(x: 37.68, y: 48), controlPoint2: CGPoint(x: 48, y: 37.68))
        bezierPath.addCurve(to: CGPoint(x: 25, y: 2), controlPoint1: CGPoint(x: 48, y: 12.32), controlPoint2: CGPoint(x: 37.68, y: 2))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 30.29, y: 45.3))
        bezierPath.addCurve(to: CGPoint(x: 36.08, y: 25), controlPoint1: CGPoint(x: 33.77, y: 41.46), controlPoint2: CGPoint(x: 36.08, y: 33.89))
        bezierPath.addCurve(to: CGPoint(x: 30.29, y: 4.7), controlPoint1: CGPoint(x: 36.08, y: 16.11), controlPoint2: CGPoint(x: 33.77, y: 8.54))
        bezierPath.addCurve(to: CGPoint(x: 46, y: 25), controlPoint1: CGPoint(x: 39.31, y: 7.06), controlPoint2: CGPoint(x: 46, y: 15.25))
        bezierPath.addCurve(to: CGPoint(x: 30.29, y: 45.3), controlPoint1: CGPoint(x: 46, y: 34.75), controlPoint2: CGPoint(x: 39.31, y: 42.94))
        bezierPath.close()
        fillColor.setFill()
        bezierPath.fill()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawWeatherWindy(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 50, height: 50), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 50, height: 50), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 50, y: resizedFrame.height / 50)


        //// Color Declarations
        let fillColor = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1.000)

        //// surface1
        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 21.5, y: 6))
        bezierPath.addCurve(to: CGPoint(x: 11, y: 16.5), controlPoint1: CGPoint(x: 15.71, y: 6), controlPoint2: CGPoint(x: 11, y: 10.71))
        bezierPath.addCurve(to: CGPoint(x: 11.02, y: 17), controlPoint1: CGPoint(x: 11, y: 16.66), controlPoint2: CGPoint(x: 11, y: 16.83))
        bezierPath.addLine(to: CGPoint(x: 11, y: 17))
        bezierPath.addCurve(to: CGPoint(x: 3, y: 25), controlPoint1: CGPoint(x: 6.59, y: 17), controlPoint2: CGPoint(x: 3, y: 20.59))
        bezierPath.addCurve(to: CGPoint(x: 7.01, y: 31.92), controlPoint1: CGPoint(x: 3, y: 27.96), controlPoint2: CGPoint(x: 4.62, y: 30.54))
        bezierPath.addCurve(to: CGPoint(x: 9.22, y: 29.11), controlPoint1: CGPoint(x: 7.04, y: 30.57), controlPoint2: CGPoint(x: 7.97, y: 29.45))
        bezierPath.addCurve(to: CGPoint(x: 9, y: 28), controlPoint1: CGPoint(x: 9.08, y: 28.77), controlPoint2: CGPoint(x: 9, y: 28.39))
        bezierPath.addCurve(to: CGPoint(x: 12, y: 25), controlPoint1: CGPoint(x: 9, y: 26.35), controlPoint2: CGPoint(x: 10.35, y: 25))
        bezierPath.addLine(to: CGPoint(x: 17.68, y: 25))
        bezierPath.addCurve(to: CGPoint(x: 17.32, y: 22.14), controlPoint1: CGPoint(x: 17.1, y: 24.2), controlPoint2: CGPoint(x: 16.93, y: 23.13))
        bezierPath.addCurve(to: CGPoint(x: 23.38, y: 18), controlPoint1: CGPoint(x: 18.3, y: 19.62), controlPoint2: CGPoint(x: 20.68, y: 18))
        bezierPath.addCurve(to: CGPoint(x: 29.88, y: 24.5), controlPoint1: CGPoint(x: 26.96, y: 18), controlPoint2: CGPoint(x: 29.88, y: 20.91))
        bezierPath.addCurve(to: CGPoint(x: 28.05, y: 29), controlPoint1: CGPoint(x: 29.88, y: 26.25), controlPoint2: CGPoint(x: 29.18, y: 27.83))
        bezierPath.addLine(to: CGPoint(x: 31, y: 29))
        bezierPath.addCurve(to: CGPoint(x: 37.69, y: 32.62), controlPoint1: CGPoint(x: 33.8, y: 29), controlPoint2: CGPoint(x: 36.26, y: 30.45))
        bezierPath.addCurve(to: CGPoint(x: 45, y: 23), controlPoint1: CGPoint(x: 41.9, y: 31.45), controlPoint2: CGPoint(x: 45, y: 27.58))
        bezierPath.addCurve(to: CGPoint(x: 35, y: 13), controlPoint1: CGPoint(x: 45, y: 17.48), controlPoint2: CGPoint(x: 40.52, y: 13))
        bezierPath.addCurve(to: CGPoint(x: 31.58, y: 13.61), controlPoint1: CGPoint(x: 33.82, y: 13), controlPoint2: CGPoint(x: 32.68, y: 13.2))
        bezierPath.addCurve(to: CGPoint(x: 21.5, y: 6), controlPoint1: CGPoint(x: 30.32, y: 9.13), controlPoint2: CGPoint(x: 26.26, y: 6))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 23.38, y: 20))
        bezierPath.addCurve(to: CGPoint(x: 22.67, y: 20.05), controlPoint1: CGPoint(x: 23.14, y: 20), controlPoint2: CGPoint(x: 22.9, y: 20.02))
        bezierPath.addCurve(to: CGPoint(x: 22.53, y: 20.09), controlPoint1: CGPoint(x: 22.62, y: 20.06), controlPoint2: CGPoint(x: 22.58, y: 20.08))
        bezierPath.addCurve(to: CGPoint(x: 19.47, y: 22.27), controlPoint1: CGPoint(x: 21.25, y: 20.33), controlPoint2: CGPoint(x: 20.13, y: 21.12))
        bezierPath.addLine(to: CGPoint(x: 19.47, y: 22.27))
        bezierPath.addCurve(to: CGPoint(x: 19.18, y: 22.88), controlPoint1: CGPoint(x: 19.36, y: 22.46), controlPoint2: CGPoint(x: 19.26, y: 22.66))
        bezierPath.addCurve(to: CGPoint(x: 19.11, y: 23.27), controlPoint1: CGPoint(x: 19.13, y: 23), controlPoint2: CGPoint(x: 19.11, y: 23.13))
        bezierPath.addCurve(to: CGPoint(x: 19.19, y: 23.63), controlPoint1: CGPoint(x: 19.11, y: 23.39), controlPoint2: CGPoint(x: 19.14, y: 23.52))
        bezierPath.addCurve(to: CGPoint(x: 19.19, y: 23.64), controlPoint1: CGPoint(x: 19.19, y: 23.64), controlPoint2: CGPoint(x: 19.19, y: 23.64))
        bezierPath.addCurve(to: CGPoint(x: 19.4, y: 23.95), controlPoint1: CGPoint(x: 19.24, y: 23.76), controlPoint2: CGPoint(x: 19.32, y: 23.86))
        bezierPath.addCurve(to: CGPoint(x: 19.41, y: 23.96), controlPoint1: CGPoint(x: 19.41, y: 23.95), controlPoint2: CGPoint(x: 19.41, y: 23.96))
        bezierPath.addCurve(to: CGPoint(x: 19.73, y: 24.16), controlPoint1: CGPoint(x: 19.5, y: 24.05), controlPoint2: CGPoint(x: 19.61, y: 24.12))
        bezierPath.addCurve(to: CGPoint(x: 19.74, y: 24.17), controlPoint1: CGPoint(x: 19.73, y: 24.17), controlPoint2: CGPoint(x: 19.74, y: 24.17))
        bezierPath.addCurve(to: CGPoint(x: 19.76, y: 24.17), controlPoint1: CGPoint(x: 19.75, y: 24.18), controlPoint2: CGPoint(x: 19.75, y: 24.17))
        bezierPath.addCurve(to: CGPoint(x: 20.09, y: 24.24), controlPoint1: CGPoint(x: 19.87, y: 24.21), controlPoint2: CGPoint(x: 19.98, y: 24.24))
        bezierPath.addCurve(to: CGPoint(x: 20.11, y: 24.24), controlPoint1: CGPoint(x: 20.1, y: 24.24), controlPoint2: CGPoint(x: 20.1, y: 24.24))
        bezierPath.addCurve(to: CGPoint(x: 20.12, y: 24.24), controlPoint1: CGPoint(x: 20.11, y: 24.24), controlPoint2: CGPoint(x: 20.11, y: 24.24))
        bezierPath.addCurve(to: CGPoint(x: 20.39, y: 24.2), controlPoint1: CGPoint(x: 20.21, y: 24.24), controlPoint2: CGPoint(x: 20.3, y: 24.22))
        bezierPath.addCurve(to: CGPoint(x: 20.41, y: 24.19), controlPoint1: CGPoint(x: 20.39, y: 24.2), controlPoint2: CGPoint(x: 20.4, y: 24.2))
        bezierPath.addCurve(to: CGPoint(x: 20.66, y: 24.07), controlPoint1: CGPoint(x: 20.5, y: 24.16), controlPoint2: CGPoint(x: 20.59, y: 24.12))
        bezierPath.addLine(to: CGPoint(x: 20.67, y: 24.07))
        bezierPath.addCurve(to: CGPoint(x: 20.88, y: 23.88), controlPoint1: CGPoint(x: 20.75, y: 24.01), controlPoint2: CGPoint(x: 20.82, y: 23.95))
        bezierPath.addCurve(to: CGPoint(x: 20.89, y: 23.86), controlPoint1: CGPoint(x: 20.88, y: 23.87), controlPoint2: CGPoint(x: 20.89, y: 23.87))
        bezierPath.addCurve(to: CGPoint(x: 21.04, y: 23.61), controlPoint1: CGPoint(x: 20.95, y: 23.79), controlPoint2: CGPoint(x: 21, y: 23.7))
        bezierPath.addLine(to: CGPoint(x: 21.04, y: 23.61))
        bezierPath.addCurve(to: CGPoint(x: 21.2, y: 23.26), controlPoint1: CGPoint(x: 21.09, y: 23.48), controlPoint2: CGPoint(x: 21.14, y: 23.37))
        bezierPath.addCurve(to: CGPoint(x: 21.28, y: 23.14), controlPoint1: CGPoint(x: 21.23, y: 23.22), controlPoint2: CGPoint(x: 21.26, y: 23.18))
        bezierPath.addCurve(to: CGPoint(x: 21.5, y: 22.86), controlPoint1: CGPoint(x: 21.35, y: 23.04), controlPoint2: CGPoint(x: 21.42, y: 22.95))
        bezierPath.addCurve(to: CGPoint(x: 22.62, y: 22.12), controlPoint1: CGPoint(x: 21.8, y: 22.52), controlPoint2: CGPoint(x: 22.18, y: 22.25))
        bezierPath.addCurve(to: CGPoint(x: 22.98, y: 22.03), controlPoint1: CGPoint(x: 22.73, y: 22.08), controlPoint2: CGPoint(x: 22.86, y: 22.05))
        bezierPath.addCurve(to: CGPoint(x: 23.38, y: 22), controlPoint1: CGPoint(x: 23.11, y: 22.01), controlPoint2: CGPoint(x: 23.24, y: 22))
        bezierPath.addCurve(to: CGPoint(x: 24.34, y: 22.2), controlPoint1: CGPoint(x: 23.71, y: 22), controlPoint2: CGPoint(x: 24.04, y: 22.07))
        bezierPath.addCurve(to: CGPoint(x: 25.68, y: 23.54), controlPoint1: CGPoint(x: 24.93, y: 22.46), controlPoint2: CGPoint(x: 25.42, y: 22.94))
        bezierPath.addCurve(to: CGPoint(x: 25.88, y: 24.5), controlPoint1: CGPoint(x: 25.8, y: 23.84), controlPoint2: CGPoint(x: 25.88, y: 24.16))
        bezierPath.addCurve(to: CGPoint(x: 25.68, y: 25.46), controlPoint1: CGPoint(x: 25.88, y: 24.84), controlPoint2: CGPoint(x: 25.8, y: 25.16))
        bezierPath.addCurve(to: CGPoint(x: 24.34, y: 26.8), controlPoint1: CGPoint(x: 25.42, y: 26.06), controlPoint2: CGPoint(x: 24.93, y: 26.54))
        bezierPath.addCurve(to: CGPoint(x: 23.38, y: 27), controlPoint1: CGPoint(x: 24.04, y: 26.93), controlPoint2: CGPoint(x: 23.71, y: 27))
        bezierPath.addLine(to: CGPoint(x: 12, y: 27))
        bezierPath.addCurve(to: CGPoint(x: 11.12, y: 27.5), controlPoint1: CGPoint(x: 11.64, y: 27), controlPoint2: CGPoint(x: 11.3, y: 27.18))
        bezierPath.addCurve(to: CGPoint(x: 11.12, y: 28.5), controlPoint1: CGPoint(x: 10.94, y: 27.81), controlPoint2: CGPoint(x: 10.94, y: 28.19))
        bezierPath.addCurve(to: CGPoint(x: 12, y: 29), controlPoint1: CGPoint(x: 11.3, y: 28.82), controlPoint2: CGPoint(x: 11.64, y: 29))
        bezierPath.addLine(to: CGPoint(x: 23.38, y: 29))
        bezierPath.addCurve(to: CGPoint(x: 23.59, y: 28.98), controlPoint1: CGPoint(x: 23.45, y: 29), controlPoint2: CGPoint(x: 23.52, y: 28.99))
        bezierPath.addCurve(to: CGPoint(x: 24.28, y: 28.91), controlPoint1: CGPoint(x: 23.82, y: 28.97), controlPoint2: CGPoint(x: 24.06, y: 28.95))
        bezierPath.addCurve(to: CGPoint(x: 27.78, y: 25.4), controlPoint1: CGPoint(x: 26.04, y: 28.55), controlPoint2: CGPoint(x: 27.43, y: 27.16))
        bezierPath.addCurve(to: CGPoint(x: 27.88, y: 24.5), controlPoint1: CGPoint(x: 27.84, y: 25.11), controlPoint2: CGPoint(x: 27.88, y: 24.81))
        bezierPath.addCurve(to: CGPoint(x: 27.78, y: 23.59), controlPoint1: CGPoint(x: 27.88, y: 24.19), controlPoint2: CGPoint(x: 27.84, y: 23.89))
        bezierPath.addCurve(to: CGPoint(x: 24.28, y: 20.09), controlPoint1: CGPoint(x: 27.42, y: 21.84), controlPoint2: CGPoint(x: 26.04, y: 20.45))
        bezierPath.addCurve(to: CGPoint(x: 23.38, y: 20), controlPoint1: CGPoint(x: 23.98, y: 20.03), controlPoint2: CGPoint(x: 23.68, y: 20))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 10, y: 31))
        bezierPath.addCurve(to: CGPoint(x: 9.12, y: 31.5), controlPoint1: CGPoint(x: 9.64, y: 31), controlPoint2: CGPoint(x: 9.3, y: 31.18))
        bezierPath.addCurve(to: CGPoint(x: 9.12, y: 32.5), controlPoint1: CGPoint(x: 8.94, y: 31.81), controlPoint2: CGPoint(x: 8.94, y: 32.19))
        bezierPath.addCurve(to: CGPoint(x: 10, y: 33), controlPoint1: CGPoint(x: 9.3, y: 32.82), controlPoint2: CGPoint(x: 9.64, y: 33))
        bezierPath.addLine(to: CGPoint(x: 31, y: 33))
        bezierPath.addCurve(to: CGPoint(x: 35, y: 37), controlPoint1: CGPoint(x: 33.22, y: 33), controlPoint2: CGPoint(x: 35, y: 34.78))
        bezierPath.addCurve(to: CGPoint(x: 30.97, y: 41), controlPoint1: CGPoint(x: 35, y: 39.21), controlPoint2: CGPoint(x: 33.23, y: 40.91))
        bezierPath.addCurve(to: CGPoint(x: 27.31, y: 38.38), controlPoint1: CGPoint(x: 29.26, y: 41.04), controlPoint2: CGPoint(x: 27.91, y: 40.05))
        bezierPath.addCurve(to: CGPoint(x: 26.03, y: 37.77), controlPoint1: CGPoint(x: 27.12, y: 37.86), controlPoint2: CGPoint(x: 26.55, y: 37.59))
        bezierPath.addCurve(to: CGPoint(x: 25.42, y: 39.05), controlPoint1: CGPoint(x: 25.51, y: 37.96), controlPoint2: CGPoint(x: 25.24, y: 38.54))
        bezierPath.addCurve(to: CGPoint(x: 31.02, y: 43), controlPoint1: CGPoint(x: 26.28, y: 41.44), controlPoint2: CGPoint(x: 28.47, y: 43.06))
        bezierPath.addCurve(to: CGPoint(x: 31.04, y: 43), controlPoint1: CGPoint(x: 31.03, y: 43), controlPoint2: CGPoint(x: 31.03, y: 43))
        bezierPath.addCurve(to: CGPoint(x: 37, y: 37), controlPoint1: CGPoint(x: 34.29, y: 42.88), controlPoint2: CGPoint(x: 37, y: 40.3))
        bezierPath.addCurve(to: CGPoint(x: 32.75, y: 31.26), controlPoint1: CGPoint(x: 37, y: 34.3), controlPoint2: CGPoint(x: 35.2, y: 32.01))
        bezierPath.addLine(to: CGPoint(x: 32.74, y: 31.26))
        bezierPath.addCurve(to: CGPoint(x: 32.72, y: 31.25), controlPoint1: CGPoint(x: 32.73, y: 31.26), controlPoint2: CGPoint(x: 32.73, y: 31.26))
        bezierPath.addCurve(to: CGPoint(x: 32, y: 31.09), controlPoint1: CGPoint(x: 32.49, y: 31.19), controlPoint2: CGPoint(x: 32.25, y: 31.13))
        bezierPath.addCurve(to: CGPoint(x: 31.79, y: 31.06), controlPoint1: CGPoint(x: 31.93, y: 31.08), controlPoint2: CGPoint(x: 31.86, y: 31.07))
        bezierPath.addCurve(to: CGPoint(x: 31.11, y: 31), controlPoint1: CGPoint(x: 31.57, y: 31.03), controlPoint2: CGPoint(x: 31.34, y: 31.01))
        bezierPath.addCurve(to: CGPoint(x: 31, y: 31), controlPoint1: CGPoint(x: 31.07, y: 31), controlPoint2: CGPoint(x: 31.04, y: 31))
        bezierPath.addLine(to: CGPoint(x: 10, y: 31))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 8, y: 35))
        bezierPath.addCurve(to: CGPoint(x: 7.12, y: 35.5), controlPoint1: CGPoint(x: 7.64, y: 35), controlPoint2: CGPoint(x: 7.3, y: 35.18))
        bezierPath.addCurve(to: CGPoint(x: 7.12, y: 36.5), controlPoint1: CGPoint(x: 6.94, y: 35.81), controlPoint2: CGPoint(x: 6.94, y: 36.19))
        bezierPath.addCurve(to: CGPoint(x: 8, y: 37), controlPoint1: CGPoint(x: 7.3, y: 36.82), controlPoint2: CGPoint(x: 7.64, y: 37))
        bezierPath.addLine(to: CGPoint(x: 17, y: 37))
        bezierPath.addCurve(to: CGPoint(x: 19, y: 39), controlPoint1: CGPoint(x: 18.09, y: 37), controlPoint2: CGPoint(x: 19, y: 37.91))
        bezierPath.addCurve(to: CGPoint(x: 17, y: 41), controlPoint1: CGPoint(x: 19, y: 40.09), controlPoint2: CGPoint(x: 18.09, y: 41))
        bezierPath.addCurve(to: CGPoint(x: 15.25, y: 39.95), controlPoint1: CGPoint(x: 16.21, y: 41), controlPoint2: CGPoint(x: 15.57, y: 40.57))
        bezierPath.addCurve(to: CGPoint(x: 13.91, y: 39.5), controlPoint1: CGPoint(x: 15.01, y: 39.46), controlPoint2: CGPoint(x: 14.41, y: 39.26))
        bezierPath.addCurve(to: CGPoint(x: 13.46, y: 40.85), controlPoint1: CGPoint(x: 13.42, y: 39.75), controlPoint2: CGPoint(x: 13.22, y: 40.36))
        bezierPath.addCurve(to: CGPoint(x: 17, y: 43), controlPoint1: CGPoint(x: 14.11, y: 42.14), controlPoint2: CGPoint(x: 15.47, y: 43))
        bezierPath.addCurve(to: CGPoint(x: 21, y: 39), controlPoint1: CGPoint(x: 19.19, y: 43), controlPoint2: CGPoint(x: 21, y: 41.19))
        bezierPath.addCurve(to: CGPoint(x: 17.22, y: 35.02), controlPoint1: CGPoint(x: 21, y: 36.88), controlPoint2: CGPoint(x: 19.31, y: 35.14))
        bezierPath.addCurve(to: CGPoint(x: 17, y: 35), controlPoint1: CGPoint(x: 17.15, y: 35.01), controlPoint2: CGPoint(x: 17.07, y: 35))
        bezierPath.addLine(to: CGPoint(x: 8, y: 35))
        bezierPath.close()
        fillColor.setFill()
        bezierPath.fill()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawWeatherLightSnow(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 50, height: 50), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 50, height: 50), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 50, y: resizedFrame.height / 50)


        //// Color Declarations
        let fillColor = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1.000)

        //// surface1
        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 22.5, y: 6))
        bezierPath.addCurve(to: CGPoint(x: 12, y: 16.5), controlPoint1: CGPoint(x: 16.71, y: 6), controlPoint2: CGPoint(x: 12, y: 10.71))
        bezierPath.addCurve(to: CGPoint(x: 12, y: 17), controlPoint1: CGPoint(x: 12, y: 16.66), controlPoint2: CGPoint(x: 11.99, y: 16.83))
        bezierPath.addCurve(to: CGPoint(x: 4, y: 25), controlPoint1: CGPoint(x: 7.59, y: 17), controlPoint2: CGPoint(x: 4, y: 20.59))
        bezierPath.addCurve(to: CGPoint(x: 12, y: 33), controlPoint1: CGPoint(x: 4, y: 29.41), controlPoint2: CGPoint(x: 7.59, y: 33))
        bezierPath.addLine(to: CGPoint(x: 36, y: 33))
        bezierPath.addCurve(to: CGPoint(x: 46, y: 23), controlPoint1: CGPoint(x: 41.52, y: 33), controlPoint2: CGPoint(x: 46, y: 28.52))
        bezierPath.addCurve(to: CGPoint(x: 36, y: 13), controlPoint1: CGPoint(x: 46, y: 17.48), controlPoint2: CGPoint(x: 41.52, y: 13))
        bezierPath.addCurve(to: CGPoint(x: 32.59, y: 13.59), controlPoint1: CGPoint(x: 34.82, y: 13), controlPoint2: CGPoint(x: 33.69, y: 13.2))
        bezierPath.addCurve(to: CGPoint(x: 22.5, y: 6), controlPoint1: CGPoint(x: 31.33, y: 9.12), controlPoint2: CGPoint(x: 27.26, y: 6))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 13.19, y: 35))
        bezierPath.addCurve(to: CGPoint(x: 12.78, y: 35.06), controlPoint1: CGPoint(x: 13.06, y: 35), controlPoint2: CGPoint(x: 12.91, y: 35.01))
        bezierPath.addCurve(to: CGPoint(x: 12.25, y: 36.38), controlPoint1: CGPoint(x: 12.27, y: 35.27), controlPoint2: CGPoint(x: 12.04, y: 35.86))
        bezierPath.addLine(to: CGPoint(x: 12.69, y: 37.47))
        bezierPath.addLine(to: CGPoint(x: 11.62, y: 37.91))
        bezierPath.addCurve(to: CGPoint(x: 11.06, y: 39.22), controlPoint1: CGPoint(x: 11.11, y: 38.12), controlPoint2: CGPoint(x: 10.85, y: 38.71))
        bezierPath.addCurve(to: CGPoint(x: 12, y: 39.81), controlPoint1: CGPoint(x: 11.22, y: 39.61), controlPoint2: CGPoint(x: 11.61, y: 39.81))
        bezierPath.addCurve(to: CGPoint(x: 12.38, y: 39.75), controlPoint1: CGPoint(x: 12.13, y: 39.81), controlPoint2: CGPoint(x: 12.25, y: 39.8))
        bezierPath.addLine(to: CGPoint(x: 13.47, y: 39.31))
        bezierPath.addLine(to: CGPoint(x: 13.91, y: 40.38))
        bezierPath.addCurve(to: CGPoint(x: 14.84, y: 41), controlPoint1: CGPoint(x: 14.07, y: 40.76), controlPoint2: CGPoint(x: 14.45, y: 41))
        bezierPath.addCurve(to: CGPoint(x: 15.22, y: 40.94), controlPoint1: CGPoint(x: 14.97, y: 41), controlPoint2: CGPoint(x: 15.09, y: 40.99))
        bezierPath.addCurve(to: CGPoint(x: 15.75, y: 39.62), controlPoint1: CGPoint(x: 15.73, y: 40.73), controlPoint2: CGPoint(x: 15.96, y: 40.14))
        bezierPath.addLine(to: CGPoint(x: 15.31, y: 38.53))
        bezierPath.addLine(to: CGPoint(x: 16.38, y: 38.09))
        bezierPath.addCurve(to: CGPoint(x: 16.94, y: 36.78), controlPoint1: CGPoint(x: 16.89, y: 37.88), controlPoint2: CGPoint(x: 17.15, y: 37.29))
        bezierPath.addCurve(to: CGPoint(x: 15.62, y: 36.25), controlPoint1: CGPoint(x: 16.73, y: 36.27), controlPoint2: CGPoint(x: 16.13, y: 36.04))
        bezierPath.addLine(to: CGPoint(x: 14.53, y: 36.69))
        bezierPath.addLine(to: CGPoint(x: 14.09, y: 35.62))
        bezierPath.addCurve(to: CGPoint(x: 13.19, y: 35), controlPoint1: CGPoint(x: 13.93, y: 35.24), controlPoint2: CGPoint(x: 13.58, y: 35))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 32.19, y: 37))
        bezierPath.addCurve(to: CGPoint(x: 31.78, y: 37.06), controlPoint1: CGPoint(x: 32.06, y: 37), controlPoint2: CGPoint(x: 31.91, y: 37.01))
        bezierPath.addCurve(to: CGPoint(x: 31.25, y: 38.38), controlPoint1: CGPoint(x: 31.27, y: 37.27), controlPoint2: CGPoint(x: 31.04, y: 37.86))
        bezierPath.addLine(to: CGPoint(x: 31.69, y: 39.47))
        bezierPath.addLine(to: CGPoint(x: 30.62, y: 39.91))
        bezierPath.addCurve(to: CGPoint(x: 30.06, y: 41.22), controlPoint1: CGPoint(x: 30.11, y: 40.12), controlPoint2: CGPoint(x: 29.85, y: 40.71))
        bezierPath.addCurve(to: CGPoint(x: 31, y: 41.81), controlPoint1: CGPoint(x: 30.22, y: 41.61), controlPoint2: CGPoint(x: 30.61, y: 41.81))
        bezierPath.addCurve(to: CGPoint(x: 31.38, y: 41.75), controlPoint1: CGPoint(x: 31.13, y: 41.81), controlPoint2: CGPoint(x: 31.25, y: 41.8))
        bezierPath.addLine(to: CGPoint(x: 32.47, y: 41.31))
        bezierPath.addLine(to: CGPoint(x: 32.91, y: 42.38))
        bezierPath.addCurve(to: CGPoint(x: 33.81, y: 43), controlPoint1: CGPoint(x: 33.07, y: 42.76), controlPoint2: CGPoint(x: 33.42, y: 43))
        bezierPath.addCurve(to: CGPoint(x: 34.22, y: 42.94), controlPoint1: CGPoint(x: 33.94, y: 43), controlPoint2: CGPoint(x: 34.09, y: 42.99))
        bezierPath.addCurve(to: CGPoint(x: 34.75, y: 41.62), controlPoint1: CGPoint(x: 34.73, y: 42.73), controlPoint2: CGPoint(x: 34.96, y: 42.14))
        bezierPath.addLine(to: CGPoint(x: 34.31, y: 40.53))
        bezierPath.addLine(to: CGPoint(x: 35.38, y: 40.09))
        bezierPath.addCurve(to: CGPoint(x: 35.94, y: 38.78), controlPoint1: CGPoint(x: 35.89, y: 39.88), controlPoint2: CGPoint(x: 36.15, y: 39.29))
        bezierPath.addCurve(to: CGPoint(x: 34.62, y: 38.25), controlPoint1: CGPoint(x: 35.73, y: 38.27), controlPoint2: CGPoint(x: 35.14, y: 38.04))
        bezierPath.addLine(to: CGPoint(x: 33.53, y: 38.69))
        bezierPath.addLine(to: CGPoint(x: 33.09, y: 37.62))
        bezierPath.addCurve(to: CGPoint(x: 32.19, y: 37), controlPoint1: CGPoint(x: 32.93, y: 37.24), controlPoint2: CGPoint(x: 32.58, y: 37))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 22.19, y: 42))
        bezierPath.addCurve(to: CGPoint(x: 21.78, y: 42.06), controlPoint1: CGPoint(x: 22.06, y: 42), controlPoint2: CGPoint(x: 21.91, y: 42.01))
        bezierPath.addCurve(to: CGPoint(x: 21.25, y: 43.38), controlPoint1: CGPoint(x: 21.27, y: 42.27), controlPoint2: CGPoint(x: 21.04, y: 42.86))
        bezierPath.addLine(to: CGPoint(x: 21.69, y: 44.47))
        bezierPath.addLine(to: CGPoint(x: 20.62, y: 44.91))
        bezierPath.addCurve(to: CGPoint(x: 20.06, y: 46.22), controlPoint1: CGPoint(x: 20.11, y: 45.12), controlPoint2: CGPoint(x: 19.85, y: 45.71))
        bezierPath.addCurve(to: CGPoint(x: 21, y: 46.81), controlPoint1: CGPoint(x: 20.22, y: 46.61), controlPoint2: CGPoint(x: 20.61, y: 46.81))
        bezierPath.addCurve(to: CGPoint(x: 21.38, y: 46.75), controlPoint1: CGPoint(x: 21.13, y: 46.81), controlPoint2: CGPoint(x: 21.25, y: 46.8))
        bezierPath.addLine(to: CGPoint(x: 22.47, y: 46.31))
        bezierPath.addLine(to: CGPoint(x: 22.91, y: 47.38))
        bezierPath.addCurve(to: CGPoint(x: 23.84, y: 48), controlPoint1: CGPoint(x: 23.07, y: 47.76), controlPoint2: CGPoint(x: 23.45, y: 48))
        bezierPath.addCurve(to: CGPoint(x: 24.22, y: 47.94), controlPoint1: CGPoint(x: 23.97, y: 48), controlPoint2: CGPoint(x: 24.09, y: 47.99))
        bezierPath.addCurve(to: CGPoint(x: 24.75, y: 46.62), controlPoint1: CGPoint(x: 24.73, y: 47.73), controlPoint2: CGPoint(x: 24.96, y: 47.14))
        bezierPath.addLine(to: CGPoint(x: 24.31, y: 45.53))
        bezierPath.addLine(to: CGPoint(x: 25.38, y: 45.09))
        bezierPath.addCurve(to: CGPoint(x: 25.94, y: 43.78), controlPoint1: CGPoint(x: 25.89, y: 44.88), controlPoint2: CGPoint(x: 26.15, y: 44.29))
        bezierPath.addCurve(to: CGPoint(x: 24.62, y: 43.25), controlPoint1: CGPoint(x: 25.73, y: 43.27), controlPoint2: CGPoint(x: 25.13, y: 43.04))
        bezierPath.addLine(to: CGPoint(x: 23.53, y: 43.69))
        bezierPath.addLine(to: CGPoint(x: 23.09, y: 42.62))
        bezierPath.addCurve(to: CGPoint(x: 22.19, y: 42), controlPoint1: CGPoint(x: 22.93, y: 42.24), controlPoint2: CGPoint(x: 22.58, y: 42))
        bezierPath.close()
        fillColor.setFill()
        bezierPath.fill()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawWeatherTornado(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 50, height: 50), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 50, height: 50), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 50, y: resizedFrame.height / 50)


        //// Color Declarations
        let fillColor = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1.000)

        //// surface1
        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 43.8, y: 17.5))
        bezierPath.addCurve(to: CGPoint(x: 41.2, y: 18.6), controlPoint1: CGPoint(x: 42.8, y: 17.1), controlPoint2: CGPoint(x: 41.6, y: 17.6))
        bezierPath.addCurve(to: CGPoint(x: 23.8, y: 25.1), controlPoint1: CGPoint(x: 40.2, y: 21), controlPoint2: CGPoint(x: 35.5, y: 25.1))
        bezierPath.addCurve(to: CGPoint(x: 15.5, y: 24), controlPoint1: CGPoint(x: 20.7, y: 25.1), controlPoint2: CGPoint(x: 18, y: 24.7))
        bezierPath.addCurve(to: CGPoint(x: 17.3, y: 24), controlPoint1: CGPoint(x: 16.1, y: 24), controlPoint2: CGPoint(x: 16.7, y: 24))
        bezierPath.addCurve(to: CGPoint(x: 26.3, y: 23), controlPoint1: CGPoint(x: 20.2, y: 24), controlPoint2: CGPoint(x: 23.3, y: 23.7))
        bezierPath.addCurve(to: CGPoint(x: 44.7, y: 12.8), controlPoint1: CGPoint(x: 34.8, y: 21.2), controlPoint2: CGPoint(x: 41.9, y: 17.3))
        bezierPath.addCurve(to: CGPoint(x: 45.8, y: 7.2), controlPoint1: CGPoint(x: 45.9, y: 10.9), controlPoint2: CGPoint(x: 46.3, y: 9))
        bezierPath.addCurve(to: CGPoint(x: 30.4, y: 0), controlPoint1: CGPoint(x: 44.7, y: 2.8), controlPoint2: CGPoint(x: 38.8, y: 0))
        bezierPath.addCurve(to: CGPoint(x: 21.8, y: 0.9), controlPoint1: CGPoint(x: 27.6, y: 0), controlPoint2: CGPoint(x: 24.7, y: 0.3))
        bezierPath.addCurve(to: CGPoint(x: 2, y: 16.2), controlPoint1: CGPoint(x: 10.3, y: 3.3), controlPoint2: CGPoint(x: 2, y: 9.7))
        bezierPath.addCurve(to: CGPoint(x: 2, y: 16.4), controlPoint1: CGPoint(x: 2, y: 16.3), controlPoint2: CGPoint(x: 2, y: 16.3))
        bezierPath.addCurve(to: CGPoint(x: 11.7, y: 27.1), controlPoint1: CGPoint(x: 2.1, y: 20.9), controlPoint2: CGPoint(x: 5.9, y: 24.8))
        bezierPath.addCurve(to: CGPoint(x: 13.2, y: 28.8), controlPoint1: CGPoint(x: 12.2, y: 27.7), controlPoint2: CGPoint(x: 12.8, y: 28.4))
        bezierPath.addCurve(to: CGPoint(x: 17.1, y: 31.9), controlPoint1: CGPoint(x: 14.4, y: 30), controlPoint2: CGPoint(x: 15.7, y: 31))
        bezierPath.addCurve(to: CGPoint(x: 16.8, y: 33.8), controlPoint1: CGPoint(x: 16.7, y: 32.4), controlPoint2: CGPoint(x: 16.6, y: 33.2))
        bezierPath.addCurve(to: CGPoint(x: 19.6, y: 38.2), controlPoint1: CGPoint(x: 17.5, y: 35.5), controlPoint2: CGPoint(x: 18.4, y: 37))
        bezierPath.addCurve(to: CGPoint(x: 18.7, y: 38.4), controlPoint1: CGPoint(x: 19.3, y: 38.2), controlPoint2: CGPoint(x: 19, y: 38.2))
        bezierPath.addCurve(to: CGPoint(x: 17.7, y: 41), controlPoint1: CGPoint(x: 17.7, y: 38.8), controlPoint2: CGPoint(x: 17.2, y: 40))
        bezierPath.addCurve(to: CGPoint(x: 25.5, y: 46.1), controlPoint1: CGPoint(x: 17.8, y: 41.2), controlPoint2: CGPoint(x: 20, y: 46.1))
        bezierPath.addCurve(to: CGPoint(x: 27.5, y: 44.1), controlPoint1: CGPoint(x: 26.6, y: 46.1), controlPoint2: CGPoint(x: 27.5, y: 45.2))
        bezierPath.addCurve(to: CGPoint(x: 25.5, y: 42.1), controlPoint1: CGPoint(x: 27.5, y: 43), controlPoint2: CGPoint(x: 26.6, y: 42.1))
        bezierPath.addCurve(to: CGPoint(x: 21.7, y: 39.9), controlPoint1: CGPoint(x: 23.4, y: 42.1), controlPoint2: CGPoint(x: 22.2, y: 40.7))
        bezierPath.addCurve(to: CGPoint(x: 29, y: 41.9), controlPoint1: CGPoint(x: 23.7, y: 41.2), controlPoint2: CGPoint(x: 26.2, y: 41.9))
        bezierPath.addCurve(to: CGPoint(x: 35.9, y: 40.2), controlPoint1: CGPoint(x: 31.3, y: 41.9), controlPoint2: CGPoint(x: 33.6, y: 41.4))
        bezierPath.addCurve(to: CGPoint(x: 36.8, y: 37.5), controlPoint1: CGPoint(x: 36.9, y: 39.7), controlPoint2: CGPoint(x: 37.3, y: 38.5))
        bezierPath.addCurve(to: CGPoint(x: 34.1, y: 36.6), controlPoint1: CGPoint(x: 36.3, y: 36.5), controlPoint2: CGPoint(x: 35.1, y: 36.1))
        bezierPath.addCurve(to: CGPoint(x: 28.9, y: 37.9), controlPoint1: CGPoint(x: 32.3, y: 37.5), controlPoint2: CGPoint(x: 30.7, y: 37.9))
        bezierPath.addCurve(to: CGPoint(x: 21.4, y: 34.1), controlPoint1: CGPoint(x: 25.5, y: 37.9), controlPoint2: CGPoint(x: 23, y: 36.6))
        bezierPath.addCurve(to: CGPoint(x: 28.6, y: 35.4), controlPoint1: CGPoint(x: 23.7, y: 35), controlPoint2: CGPoint(x: 26.1, y: 35.4))
        bezierPath.addCurve(to: CGPoint(x: 40.5, y: 31.4), controlPoint1: CGPoint(x: 33.9, y: 35.4), controlPoint2: CGPoint(x: 37.9, y: 34.1))
        bezierPath.addCurve(to: CGPoint(x: 40.5, y: 28.6), controlPoint1: CGPoint(x: 41.3, y: 30.6), controlPoint2: CGPoint(x: 41.3, y: 29.3))
        bezierPath.addCurve(to: CGPoint(x: 37.7, y: 28.6), controlPoint1: CGPoint(x: 39.7, y: 27.8), controlPoint2: CGPoint(x: 38.4, y: 27.8))
        bezierPath.addCurve(to: CGPoint(x: 28.6, y: 31.4), controlPoint1: CGPoint(x: 35.9, y: 30.5), controlPoint2: CGPoint(x: 32.8, y: 31.4))
        bezierPath.addCurve(to: CGPoint(x: 19.9, y: 29), controlPoint1: CGPoint(x: 25.5, y: 31.4), controlPoint2: CGPoint(x: 22.6, y: 30.6))
        bezierPath.addCurve(to: CGPoint(x: 23.7, y: 29.2), controlPoint1: CGPoint(x: 21.1, y: 29.1), controlPoint2: CGPoint(x: 22.4, y: 29.2))
        bezierPath.addCurve(to: CGPoint(x: 44.8, y: 20.1), controlPoint1: CGPoint(x: 36.6, y: 29.2), controlPoint2: CGPoint(x: 43.1, y: 24.5))
        bezierPath.addCurve(to: CGPoint(x: 43.8, y: 17.5), controlPoint1: CGPoint(x: 45.3, y: 19.1), controlPoint2: CGPoint(x: 44.8, y: 18))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 6, y: 16.2))
        bezierPath.addCurve(to: CGPoint(x: 22.6, y: 4.8), controlPoint1: CGPoint(x: 6, y: 13), controlPoint2: CGPoint(x: 11.2, y: 7.2))
        bezierPath.addCurve(to: CGPoint(x: 30.4, y: 4), controlPoint1: CGPoint(x: 25.3, y: 4.3), controlPoint2: CGPoint(x: 27.9, y: 4))
        bezierPath.addCurve(to: CGPoint(x: 41.9, y: 8.3), controlPoint1: CGPoint(x: 37.3, y: 4), controlPoint2: CGPoint(x: 41.4, y: 6.2))
        bezierPath.addCurve(to: CGPoint(x: 41.3, y: 10.8), controlPoint1: CGPoint(x: 42.1, y: 9.2), controlPoint2: CGPoint(x: 41.7, y: 10.1))
        bezierPath.addCurve(to: CGPoint(x: 25.5, y: 19.2), controlPoint1: CGPoint(x: 39.4, y: 13.8), controlPoint2: CGPoint(x: 33.8, y: 17.5))
        bezierPath.addCurve(to: CGPoint(x: 17.3, y: 20.1), controlPoint1: CGPoint(x: 22.7, y: 19.8), controlPoint2: CGPoint(x: 20, y: 20.1))
        bezierPath.addCurve(to: CGPoint(x: 6, y: 16.2), controlPoint1: CGPoint(x: 10, y: 20.2), controlPoint2: CGPoint(x: 6, y: 17.9))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 24.1, y: 10.6))
        bezierPath.addCurve(to: CGPoint(x: 12.6, y: 16.6), controlPoint1: CGPoint(x: 19, y: 11.7), controlPoint2: CGPoint(x: 14.6, y: 14))
        bezierPath.addCurve(to: CGPoint(x: 11, y: 17.4), controlPoint1: CGPoint(x: 12.2, y: 17.1), controlPoint2: CGPoint(x: 11.6, y: 17.4))
        bezierPath.addCurve(to: CGPoint(x: 9.8, y: 17), controlPoint1: CGPoint(x: 10.6, y: 17.4), controlPoint2: CGPoint(x: 10.1, y: 17.3))
        bezierPath.addCurve(to: CGPoint(x: 9.5, y: 14.2), controlPoint1: CGPoint(x: 8.9, y: 16.3), controlPoint2: CGPoint(x: 8.8, y: 15.1))
        bezierPath.addCurve(to: CGPoint(x: 23.4, y: 6.7), controlPoint1: CGPoint(x: 12.2, y: 10.8), controlPoint2: CGPoint(x: 17.3, y: 8))
        bezierPath.addCurve(to: CGPoint(x: 36.8, y: 6.8), controlPoint1: CGPoint(x: 28.2, y: 5.7), controlPoint2: CGPoint(x: 32.7, y: 5.8))
        bezierPath.addCurve(to: CGPoint(x: 38.3, y: 9.2), controlPoint1: CGPoint(x: 37.9, y: 7.1), controlPoint2: CGPoint(x: 38.5, y: 8.2))
        bezierPath.addCurve(to: CGPoint(x: 35.9, y: 10.7), controlPoint1: CGPoint(x: 38, y: 10.3), controlPoint2: CGPoint(x: 36.9, y: 10.9))
        bezierPath.addCurve(to: CGPoint(x: 24.1, y: 10.6), controlPoint1: CGPoint(x: 32.2, y: 9.7), controlPoint2: CGPoint(x: 28.4, y: 9.7))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 19.7, y: 45.2))
        bezierPath.addCurve(to: CGPoint(x: 19.7, y: 48), controlPoint1: CGPoint(x: 20.5, y: 46), controlPoint2: CGPoint(x: 20.5, y: 47.2))
        bezierPath.addCurve(to: CGPoint(x: 15.1, y: 49.9), controlPoint1: CGPoint(x: 18.4, y: 49.3), controlPoint2: CGPoint(x: 17, y: 49.9))
        bezierPath.addCurve(to: CGPoint(x: 13.1, y: 47.9), controlPoint1: CGPoint(x: 14, y: 49.9), controlPoint2: CGPoint(x: 13.1, y: 49))
        bezierPath.addCurve(to: CGPoint(x: 15.1, y: 45.9), controlPoint1: CGPoint(x: 13.1, y: 46.8), controlPoint2: CGPoint(x: 14, y: 45.9))
        bezierPath.addCurve(to: CGPoint(x: 16.8, y: 45.2), controlPoint1: CGPoint(x: 15.9, y: 45.9), controlPoint2: CGPoint(x: 16.3, y: 45.7))
        bezierPath.addCurve(to: CGPoint(x: 19.7, y: 45.2), controlPoint1: CGPoint(x: 17.6, y: 44.5), controlPoint2: CGPoint(x: 18.9, y: 44.4))
        bezierPath.close()
        fillColor.setFill()
        bezierPath.fill()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawWeatherSleet(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 50, height: 50), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 50, height: 50), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 50, y: resizedFrame.height / 50)


        //// Color Declarations
        let fillColor = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1.000)

        //// surface1
        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 22.5, y: 6))
        bezierPath.addCurve(to: CGPoint(x: 12, y: 16.5), controlPoint1: CGPoint(x: 16.71, y: 6), controlPoint2: CGPoint(x: 12, y: 10.71))
        bezierPath.addCurve(to: CGPoint(x: 12, y: 17), controlPoint1: CGPoint(x: 12, y: 16.66), controlPoint2: CGPoint(x: 11.99, y: 16.83))
        bezierPath.addCurve(to: CGPoint(x: 4, y: 25), controlPoint1: CGPoint(x: 7.59, y: 17), controlPoint2: CGPoint(x: 4, y: 20.59))
        bezierPath.addCurve(to: CGPoint(x: 12, y: 33), controlPoint1: CGPoint(x: 4, y: 29.41), controlPoint2: CGPoint(x: 7.59, y: 33))
        bezierPath.addLine(to: CGPoint(x: 36, y: 33))
        bezierPath.addCurve(to: CGPoint(x: 46, y: 23), controlPoint1: CGPoint(x: 41.52, y: 33), controlPoint2: CGPoint(x: 46, y: 28.52))
        bezierPath.addCurve(to: CGPoint(x: 36, y: 13), controlPoint1: CGPoint(x: 46, y: 17.48), controlPoint2: CGPoint(x: 41.52, y: 13))
        bezierPath.addCurve(to: CGPoint(x: 32.59, y: 13.59), controlPoint1: CGPoint(x: 34.82, y: 13), controlPoint2: CGPoint(x: 33.69, y: 13.2))
        bezierPath.addCurve(to: CGPoint(x: 22.5, y: 6), controlPoint1: CGPoint(x: 31.33, y: 9.12), controlPoint2: CGPoint(x: 27.26, y: 6))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 10, y: 36))
        bezierPath.addCurve(to: CGPoint(x: 9.28, y: 36.28), controlPoint1: CGPoint(x: 9.75, y: 36), controlPoint2: CGPoint(x: 9.48, y: 36.09))
        bezierPath.addLine(to: CGPoint(x: 5.28, y: 40.28))
        bezierPath.addCurve(to: CGPoint(x: 5.28, y: 41.72), controlPoint1: CGPoint(x: 4.89, y: 40.67), controlPoint2: CGPoint(x: 4.89, y: 41.33))
        bezierPath.addCurve(to: CGPoint(x: 6, y: 42), controlPoint1: CGPoint(x: 5.48, y: 41.91), controlPoint2: CGPoint(x: 5.74, y: 42))
        bezierPath.addCurve(to: CGPoint(x: 6.72, y: 41.72), controlPoint1: CGPoint(x: 6.26, y: 42), controlPoint2: CGPoint(x: 6.52, y: 41.91))
        bezierPath.addLine(to: CGPoint(x: 10.72, y: 37.72))
        bezierPath.addCurve(to: CGPoint(x: 10.72, y: 36.28), controlPoint1: CGPoint(x: 11.11, y: 37.33), controlPoint2: CGPoint(x: 11.11, y: 36.67))
        bezierPath.addCurve(to: CGPoint(x: 10, y: 36), controlPoint1: CGPoint(x: 10.52, y: 36.09), controlPoint2: CGPoint(x: 10.25, y: 36))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 22, y: 37))
        bezierPath.addCurve(to: CGPoint(x: 21, y: 38), controlPoint1: CGPoint(x: 21.45, y: 37), controlPoint2: CGPoint(x: 21, y: 37.45))
        bezierPath.addLine(to: CGPoint(x: 21, y: 41.28))
        bezierPath.addLine(to: CGPoint(x: 18.31, y: 39.72))
        bezierPath.addCurve(to: CGPoint(x: 16.94, y: 40.09), controlPoint1: CGPoint(x: 17.83, y: 39.44), controlPoint2: CGPoint(x: 17.21, y: 39.62))
        bezierPath.addCurve(to: CGPoint(x: 17.31, y: 41.44), controlPoint1: CGPoint(x: 16.66, y: 40.57), controlPoint2: CGPoint(x: 16.84, y: 41.16))
        bezierPath.addLine(to: CGPoint(x: 20.03, y: 43))
        bezierPath.addLine(to: CGPoint(x: 17.31, y: 44.56))
        bezierPath.addCurve(to: CGPoint(x: 16.94, y: 45.91), controlPoint1: CGPoint(x: 16.84, y: 44.84), controlPoint2: CGPoint(x: 16.66, y: 45.43))
        bezierPath.addCurve(to: CGPoint(x: 17.81, y: 46.41), controlPoint1: CGPoint(x: 17.12, y: 46.23), controlPoint2: CGPoint(x: 17.46, y: 46.41))
        bezierPath.addCurve(to: CGPoint(x: 18.31, y: 46.28), controlPoint1: CGPoint(x: 17.98, y: 46.41), controlPoint2: CGPoint(x: 18.16, y: 46.37))
        bezierPath.addLine(to: CGPoint(x: 21, y: 44.72))
        bezierPath.addLine(to: CGPoint(x: 21, y: 48))
        bezierPath.addCurve(to: CGPoint(x: 22, y: 49), controlPoint1: CGPoint(x: 21, y: 48.55), controlPoint2: CGPoint(x: 21.45, y: 49))
        bezierPath.addCurve(to: CGPoint(x: 23, y: 48), controlPoint1: CGPoint(x: 22.55, y: 49), controlPoint2: CGPoint(x: 23, y: 48.55))
        bezierPath.addLine(to: CGPoint(x: 23, y: 44.72))
        bezierPath.addLine(to: CGPoint(x: 25.69, y: 46.28))
        bezierPath.addCurve(to: CGPoint(x: 26.19, y: 46.41), controlPoint1: CGPoint(x: 25.84, y: 46.37), controlPoint2: CGPoint(x: 26.02, y: 46.41))
        bezierPath.addCurve(to: CGPoint(x: 27.06, y: 45.91), controlPoint1: CGPoint(x: 26.53, y: 46.41), controlPoint2: CGPoint(x: 26.88, y: 46.23))
        bezierPath.addCurve(to: CGPoint(x: 26.69, y: 44.56), controlPoint1: CGPoint(x: 27.34, y: 45.43), controlPoint2: CGPoint(x: 27.17, y: 44.84))
        bezierPath.addLine(to: CGPoint(x: 23.97, y: 43))
        bezierPath.addLine(to: CGPoint(x: 26.69, y: 41.44))
        bezierPath.addCurve(to: CGPoint(x: 27.06, y: 40.09), controlPoint1: CGPoint(x: 27.16, y: 41.16), controlPoint2: CGPoint(x: 27.34, y: 40.57))
        bezierPath.addCurve(to: CGPoint(x: 25.69, y: 39.72), controlPoint1: CGPoint(x: 26.79, y: 39.62), controlPoint2: CGPoint(x: 26.16, y: 39.45))
        bezierPath.addLine(to: CGPoint(x: 23, y: 41.28))
        bezierPath.addLine(to: CGPoint(x: 23, y: 38))
        bezierPath.addCurve(to: CGPoint(x: 22, y: 37), controlPoint1: CGPoint(x: 23, y: 37.45), controlPoint2: CGPoint(x: 22.55, y: 37))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 39, y: 37))
        bezierPath.addCurve(to: CGPoint(x: 38.28, y: 37.28), controlPoint1: CGPoint(x: 38.75, y: 37), controlPoint2: CGPoint(x: 38.48, y: 37.09))
        bezierPath.addLine(to: CGPoint(x: 34.28, y: 41.28))
        bezierPath.addCurve(to: CGPoint(x: 34.28, y: 42.72), controlPoint1: CGPoint(x: 33.89, y: 41.67), controlPoint2: CGPoint(x: 33.89, y: 42.33))
        bezierPath.addCurve(to: CGPoint(x: 35, y: 43), controlPoint1: CGPoint(x: 34.48, y: 42.91), controlPoint2: CGPoint(x: 34.74, y: 43))
        bezierPath.addCurve(to: CGPoint(x: 35.72, y: 42.72), controlPoint1: CGPoint(x: 35.26, y: 43), controlPoint2: CGPoint(x: 35.52, y: 42.91))
        bezierPath.addLine(to: CGPoint(x: 39.72, y: 38.72))
        bezierPath.addCurve(to: CGPoint(x: 39.72, y: 37.28), controlPoint1: CGPoint(x: 40.11, y: 38.33), controlPoint2: CGPoint(x: 40.11, y: 37.67))
        bezierPath.addCurve(to: CGPoint(x: 39, y: 37), controlPoint1: CGPoint(x: 39.52, y: 37.09), controlPoint2: CGPoint(x: 39.25, y: 37))
        bezierPath.close()
        fillColor.setFill()
        bezierPath.fill()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawWeatherSnow(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 50, height: 50), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 50, height: 50), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 50, y: resizedFrame.height / 50)


        //// Color Declarations
        let fillColor = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1.000)

        //// surface1
        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 22.5, y: 5))
        bezierPath.addCurve(to: CGPoint(x: 12, y: 15.5), controlPoint1: CGPoint(x: 16.71, y: 5), controlPoint2: CGPoint(x: 12, y: 9.71))
        bezierPath.addCurve(to: CGPoint(x: 12, y: 16), controlPoint1: CGPoint(x: 12, y: 15.66), controlPoint2: CGPoint(x: 11.99, y: 15.83))
        bezierPath.addCurve(to: CGPoint(x: 4, y: 24), controlPoint1: CGPoint(x: 7.59, y: 16), controlPoint2: CGPoint(x: 4, y: 19.59))
        bezierPath.addCurve(to: CGPoint(x: 12, y: 32), controlPoint1: CGPoint(x: 4, y: 28.41), controlPoint2: CGPoint(x: 7.59, y: 32))
        bezierPath.addLine(to: CGPoint(x: 22.5, y: 32))
        bezierPath.addCurve(to: CGPoint(x: 21.5, y: 31), controlPoint1: CGPoint(x: 21.95, y: 32), controlPoint2: CGPoint(x: 21.5, y: 31.55))
        bezierPath.addCurve(to: CGPoint(x: 22.5, y: 30), controlPoint1: CGPoint(x: 21.5, y: 30.45), controlPoint2: CGPoint(x: 21.95, y: 30))
        bezierPath.addLine(to: CGPoint(x: 23, y: 30))
        bezierPath.addLine(to: CGPoint(x: 23, y: 26.72))
        bezierPath.addLine(to: CGPoint(x: 20.16, y: 28.38))
        bezierPath.addLine(to: CGPoint(x: 20.41, y: 28.81))
        bezierPath.addCurve(to: CGPoint(x: 20.06, y: 30.16), controlPoint1: CGPoint(x: 20.68, y: 29.29), controlPoint2: CGPoint(x: 20.54, y: 29.88))
        bezierPath.addCurve(to: CGPoint(x: 19.56, y: 30.31), controlPoint1: CGPoint(x: 19.91, y: 30.25), controlPoint2: CGPoint(x: 19.73, y: 30.31))
        bezierPath.addCurve(to: CGPoint(x: 18.69, y: 29.81), controlPoint1: CGPoint(x: 19.21, y: 30.31), controlPoint2: CGPoint(x: 18.87, y: 30.13))
        bezierPath.addLine(to: CGPoint(x: 18.44, y: 29.38))
        bezierPath.addLine(to: CGPoint(x: 17.56, y: 29.88))
        bezierPath.addCurve(to: CGPoint(x: 17.06, y: 30), controlPoint1: CGPoint(x: 17.41, y: 29.96), controlPoint2: CGPoint(x: 17.23, y: 30))
        bezierPath.addCurve(to: CGPoint(x: 16.22, y: 29.5), controlPoint1: CGPoint(x: 16.71, y: 30), controlPoint2: CGPoint(x: 16.4, y: 29.82))
        bezierPath.addCurve(to: CGPoint(x: 16.56, y: 28.12), controlPoint1: CGPoint(x: 15.94, y: 29.02), controlPoint2: CGPoint(x: 16.09, y: 28.4))
        bezierPath.addLine(to: CGPoint(x: 17.44, y: 27.62))
        bezierPath.addLine(to: CGPoint(x: 17.19, y: 27.19))
        bezierPath.addCurve(to: CGPoint(x: 17.56, y: 25.84), controlPoint1: CGPoint(x: 16.91, y: 26.71), controlPoint2: CGPoint(x: 17.09, y: 26.12))
        bezierPath.addCurve(to: CGPoint(x: 18.91, y: 26.19), controlPoint1: CGPoint(x: 18.04, y: 25.57), controlPoint2: CGPoint(x: 18.63, y: 25.71))
        bezierPath.addLine(to: CGPoint(x: 19.16, y: 26.62))
        bezierPath.addLine(to: CGPoint(x: 22, y: 25))
        bezierPath.addLine(to: CGPoint(x: 19.16, y: 23.38))
        bezierPath.addLine(to: CGPoint(x: 18.91, y: 23.81))
        bezierPath.addCurve(to: CGPoint(x: 18.06, y: 24.31), controlPoint1: CGPoint(x: 18.72, y: 24.13), controlPoint2: CGPoint(x: 18.41, y: 24.31))
        bezierPath.addCurve(to: CGPoint(x: 17.56, y: 24.16), controlPoint1: CGPoint(x: 17.89, y: 24.31), controlPoint2: CGPoint(x: 17.72, y: 24.25))
        bezierPath.addCurve(to: CGPoint(x: 17.19, y: 22.81), controlPoint1: CGPoint(x: 17.08, y: 23.88), controlPoint2: CGPoint(x: 16.91, y: 23.29))
        bezierPath.addLine(to: CGPoint(x: 17.44, y: 22.38))
        bezierPath.addLine(to: CGPoint(x: 16.56, y: 21.88))
        bezierPath.addCurve(to: CGPoint(x: 16.22, y: 20.5), controlPoint1: CGPoint(x: 16.09, y: 21.6), controlPoint2: CGPoint(x: 15.94, y: 20.98))
        bezierPath.addCurve(to: CGPoint(x: 17.56, y: 20.12), controlPoint1: CGPoint(x: 16.5, y: 20.02), controlPoint2: CGPoint(x: 17.08, y: 19.85))
        bezierPath.addLine(to: CGPoint(x: 18.44, y: 20.62))
        bezierPath.addLine(to: CGPoint(x: 18.69, y: 20.19))
        bezierPath.addCurve(to: CGPoint(x: 20.06, y: 19.84), controlPoint1: CGPoint(x: 18.96, y: 19.71), controlPoint2: CGPoint(x: 19.59, y: 19.57))
        bezierPath.addCurve(to: CGPoint(x: 20.41, y: 21.19), controlPoint1: CGPoint(x: 20.54, y: 20.12), controlPoint2: CGPoint(x: 20.68, y: 20.71))
        bezierPath.addLine(to: CGPoint(x: 20.16, y: 21.62))
        bezierPath.addLine(to: CGPoint(x: 23, y: 23.28))
        bezierPath.addLine(to: CGPoint(x: 23, y: 20))
        bezierPath.addLine(to: CGPoint(x: 22.5, y: 20))
        bezierPath.addCurve(to: CGPoint(x: 21.5, y: 19), controlPoint1: CGPoint(x: 21.95, y: 20), controlPoint2: CGPoint(x: 21.5, y: 19.55))
        bezierPath.addCurve(to: CGPoint(x: 22.5, y: 18), controlPoint1: CGPoint(x: 21.5, y: 18.45), controlPoint2: CGPoint(x: 21.95, y: 18))
        bezierPath.addLine(to: CGPoint(x: 23, y: 18))
        bezierPath.addLine(to: CGPoint(x: 23, y: 17))
        bezierPath.addCurve(to: CGPoint(x: 24, y: 16), controlPoint1: CGPoint(x: 23, y: 16.45), controlPoint2: CGPoint(x: 23.45, y: 16))
        bezierPath.addCurve(to: CGPoint(x: 25, y: 17), controlPoint1: CGPoint(x: 24.55, y: 16), controlPoint2: CGPoint(x: 25, y: 16.45))
        bezierPath.addLine(to: CGPoint(x: 25, y: 18))
        bezierPath.addLine(to: CGPoint(x: 25.5, y: 18))
        bezierPath.addCurve(to: CGPoint(x: 26.5, y: 19), controlPoint1: CGPoint(x: 26.05, y: 18), controlPoint2: CGPoint(x: 26.5, y: 18.45))
        bezierPath.addCurve(to: CGPoint(x: 25.5, y: 20), controlPoint1: CGPoint(x: 26.5, y: 19.55), controlPoint2: CGPoint(x: 26.05, y: 20))
        bezierPath.addLine(to: CGPoint(x: 25, y: 20))
        bezierPath.addLine(to: CGPoint(x: 25, y: 23.28))
        bezierPath.addLine(to: CGPoint(x: 27.84, y: 21.62))
        bezierPath.addLine(to: CGPoint(x: 27.59, y: 21.19))
        bezierPath.addCurve(to: CGPoint(x: 27.94, y: 19.84), controlPoint1: CGPoint(x: 27.32, y: 20.71), controlPoint2: CGPoint(x: 27.46, y: 20.12))
        bezierPath.addCurve(to: CGPoint(x: 29.31, y: 20.19), controlPoint1: CGPoint(x: 28.41, y: 19.57), controlPoint2: CGPoint(x: 29.04, y: 19.71))
        bezierPath.addLine(to: CGPoint(x: 29.56, y: 20.62))
        bezierPath.addLine(to: CGPoint(x: 30.44, y: 20.12))
        bezierPath.addCurve(to: CGPoint(x: 31.78, y: 20.5), controlPoint1: CGPoint(x: 30.91, y: 19.85), controlPoint2: CGPoint(x: 31.5, y: 20.02))
        bezierPath.addCurve(to: CGPoint(x: 31.44, y: 21.88), controlPoint1: CGPoint(x: 32.06, y: 20.98), controlPoint2: CGPoint(x: 31.91, y: 21.6))
        bezierPath.addLine(to: CGPoint(x: 30.56, y: 22.38))
        bezierPath.addLine(to: CGPoint(x: 30.81, y: 22.81))
        bezierPath.addCurve(to: CGPoint(x: 30.44, y: 24.16), controlPoint1: CGPoint(x: 31.09, y: 23.29), controlPoint2: CGPoint(x: 30.91, y: 23.88))
        bezierPath.addCurve(to: CGPoint(x: 29.94, y: 24.31), controlPoint1: CGPoint(x: 30.28, y: 24.25), controlPoint2: CGPoint(x: 30.11, y: 24.31))
        bezierPath.addCurve(to: CGPoint(x: 29.09, y: 23.81), controlPoint1: CGPoint(x: 29.59, y: 24.31), controlPoint2: CGPoint(x: 29.28, y: 24.13))
        bezierPath.addLine(to: CGPoint(x: 28.84, y: 23.38))
        bezierPath.addLine(to: CGPoint(x: 26, y: 25))
        bezierPath.addLine(to: CGPoint(x: 28.84, y: 26.62))
        bezierPath.addLine(to: CGPoint(x: 29.09, y: 26.19))
        bezierPath.addCurve(to: CGPoint(x: 30.44, y: 25.84), controlPoint1: CGPoint(x: 29.37, y: 25.71), controlPoint2: CGPoint(x: 29.96, y: 25.57))
        bezierPath.addCurve(to: CGPoint(x: 30.81, y: 27.19), controlPoint1: CGPoint(x: 30.91, y: 26.12), controlPoint2: CGPoint(x: 31.09, y: 26.71))
        bezierPath.addLine(to: CGPoint(x: 30.56, y: 27.62))
        bezierPath.addLine(to: CGPoint(x: 31.44, y: 28.12))
        bezierPath.addCurve(to: CGPoint(x: 31.78, y: 29.5), controlPoint1: CGPoint(x: 31.92, y: 28.4), controlPoint2: CGPoint(x: 32.06, y: 29.02))
        bezierPath.addCurve(to: CGPoint(x: 30.94, y: 30), controlPoint1: CGPoint(x: 31.59, y: 29.82), controlPoint2: CGPoint(x: 31.29, y: 30))
        bezierPath.addCurve(to: CGPoint(x: 30.44, y: 29.88), controlPoint1: CGPoint(x: 30.77, y: 30), controlPoint2: CGPoint(x: 30.59, y: 29.96))
        bezierPath.addLine(to: CGPoint(x: 29.56, y: 29.38))
        bezierPath.addLine(to: CGPoint(x: 29.31, y: 29.81))
        bezierPath.addCurve(to: CGPoint(x: 28.44, y: 30.31), controlPoint1: CGPoint(x: 29.12, y: 30.13), controlPoint2: CGPoint(x: 28.79, y: 30.31))
        bezierPath.addCurve(to: CGPoint(x: 27.94, y: 30.16), controlPoint1: CGPoint(x: 28.27, y: 30.31), controlPoint2: CGPoint(x: 28.09, y: 30.25))
        bezierPath.addCurve(to: CGPoint(x: 27.59, y: 28.81), controlPoint1: CGPoint(x: 27.46, y: 29.88), controlPoint2: CGPoint(x: 27.32, y: 29.29))
        bezierPath.addLine(to: CGPoint(x: 27.84, y: 28.38))
        bezierPath.addLine(to: CGPoint(x: 25, y: 26.72))
        bezierPath.addLine(to: CGPoint(x: 25, y: 30))
        bezierPath.addLine(to: CGPoint(x: 25.5, y: 30))
        bezierPath.addCurve(to: CGPoint(x: 26.5, y: 31), controlPoint1: CGPoint(x: 26.05, y: 30), controlPoint2: CGPoint(x: 26.5, y: 30.45))
        bezierPath.addCurve(to: CGPoint(x: 25.5, y: 32), controlPoint1: CGPoint(x: 26.5, y: 31.55), controlPoint2: CGPoint(x: 26.05, y: 32))
        bezierPath.addLine(to: CGPoint(x: 36, y: 32))
        bezierPath.addCurve(to: CGPoint(x: 46, y: 22), controlPoint1: CGPoint(x: 41.52, y: 32), controlPoint2: CGPoint(x: 46, y: 27.52))
        bezierPath.addCurve(to: CGPoint(x: 36, y: 12), controlPoint1: CGPoint(x: 46, y: 16.48), controlPoint2: CGPoint(x: 41.52, y: 12))
        bezierPath.addCurve(to: CGPoint(x: 32.59, y: 12.59), controlPoint1: CGPoint(x: 34.82, y: 12), controlPoint2: CGPoint(x: 33.69, y: 12.2))
        bezierPath.addCurve(to: CGPoint(x: 22.5, y: 5), controlPoint1: CGPoint(x: 31.33, y: 8.12), controlPoint2: CGPoint(x: 27.26, y: 5))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 23, y: 32))
        bezierPath.addLine(to: CGPoint(x: 23, y: 33))
        bezierPath.addCurve(to: CGPoint(x: 24, y: 34), controlPoint1: CGPoint(x: 23, y: 33.55), controlPoint2: CGPoint(x: 23.45, y: 34))
        bezierPath.addCurve(to: CGPoint(x: 25, y: 33), controlPoint1: CGPoint(x: 24.55, y: 34), controlPoint2: CGPoint(x: 25, y: 33.55))
        bezierPath.addLine(to: CGPoint(x: 25, y: 32))
        bezierPath.addLine(to: CGPoint(x: 23, y: 32))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 40.19, y: 34))
        bezierPath.addCurve(to: CGPoint(x: 39.78, y: 34.06), controlPoint1: CGPoint(x: 40.06, y: 34), controlPoint2: CGPoint(x: 39.91, y: 34.01))
        bezierPath.addCurve(to: CGPoint(x: 39.25, y: 35.38), controlPoint1: CGPoint(x: 39.27, y: 34.27), controlPoint2: CGPoint(x: 39.04, y: 34.86))
        bezierPath.addLine(to: CGPoint(x: 39.69, y: 36.47))
        bezierPath.addLine(to: CGPoint(x: 38.62, y: 36.91))
        bezierPath.addCurve(to: CGPoint(x: 38.06, y: 38.22), controlPoint1: CGPoint(x: 38.11, y: 37.12), controlPoint2: CGPoint(x: 37.85, y: 37.71))
        bezierPath.addCurve(to: CGPoint(x: 39, y: 38.81), controlPoint1: CGPoint(x: 38.22, y: 38.61), controlPoint2: CGPoint(x: 38.61, y: 38.81))
        bezierPath.addCurve(to: CGPoint(x: 39.38, y: 38.75), controlPoint1: CGPoint(x: 39.13, y: 38.81), controlPoint2: CGPoint(x: 39.25, y: 38.8))
        bezierPath.addLine(to: CGPoint(x: 40.47, y: 38.31))
        bezierPath.addLine(to: CGPoint(x: 40.91, y: 39.38))
        bezierPath.addCurve(to: CGPoint(x: 41.81, y: 40), controlPoint1: CGPoint(x: 41.07, y: 39.76), controlPoint2: CGPoint(x: 41.42, y: 40))
        bezierPath.addCurve(to: CGPoint(x: 42.22, y: 39.94), controlPoint1: CGPoint(x: 41.94, y: 40), controlPoint2: CGPoint(x: 42.09, y: 39.99))
        bezierPath.addCurve(to: CGPoint(x: 42.75, y: 38.62), controlPoint1: CGPoint(x: 42.73, y: 39.73), controlPoint2: CGPoint(x: 42.96, y: 39.14))
        bezierPath.addLine(to: CGPoint(x: 42.31, y: 37.53))
        bezierPath.addLine(to: CGPoint(x: 43.38, y: 37.09))
        bezierPath.addCurve(to: CGPoint(x: 43.94, y: 35.78), controlPoint1: CGPoint(x: 43.89, y: 36.88), controlPoint2: CGPoint(x: 44.15, y: 36.29))
        bezierPath.addCurve(to: CGPoint(x: 42.62, y: 35.25), controlPoint1: CGPoint(x: 43.73, y: 35.27), controlPoint2: CGPoint(x: 43.13, y: 35.04))
        bezierPath.addLine(to: CGPoint(x: 41.53, y: 35.69))
        bezierPath.addLine(to: CGPoint(x: 41.09, y: 34.62))
        bezierPath.addCurve(to: CGPoint(x: 40.19, y: 34), controlPoint1: CGPoint(x: 40.93, y: 34.24), controlPoint2: CGPoint(x: 40.58, y: 34))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 8.19, y: 35))
        bezierPath.addCurve(to: CGPoint(x: 7.78, y: 35.06), controlPoint1: CGPoint(x: 8.06, y: 35), controlPoint2: CGPoint(x: 7.91, y: 35.01))
        bezierPath.addCurve(to: CGPoint(x: 7.25, y: 36.38), controlPoint1: CGPoint(x: 7.27, y: 35.27), controlPoint2: CGPoint(x: 7.04, y: 35.86))
        bezierPath.addLine(to: CGPoint(x: 7.69, y: 37.47))
        bezierPath.addLine(to: CGPoint(x: 6.62, y: 37.91))
        bezierPath.addCurve(to: CGPoint(x: 6.06, y: 39.22), controlPoint1: CGPoint(x: 6.11, y: 38.12), controlPoint2: CGPoint(x: 5.85, y: 38.71))
        bezierPath.addCurve(to: CGPoint(x: 7, y: 39.81), controlPoint1: CGPoint(x: 6.22, y: 39.61), controlPoint2: CGPoint(x: 6.61, y: 39.81))
        bezierPath.addCurve(to: CGPoint(x: 7.38, y: 39.75), controlPoint1: CGPoint(x: 7.13, y: 39.81), controlPoint2: CGPoint(x: 7.25, y: 39.8))
        bezierPath.addLine(to: CGPoint(x: 8.47, y: 39.31))
        bezierPath.addLine(to: CGPoint(x: 8.91, y: 40.38))
        bezierPath.addCurve(to: CGPoint(x: 9.84, y: 41), controlPoint1: CGPoint(x: 9.07, y: 40.76), controlPoint2: CGPoint(x: 9.45, y: 41))
        bezierPath.addCurve(to: CGPoint(x: 10.22, y: 40.94), controlPoint1: CGPoint(x: 9.97, y: 41), controlPoint2: CGPoint(x: 10.09, y: 40.99))
        bezierPath.addCurve(to: CGPoint(x: 10.75, y: 39.62), controlPoint1: CGPoint(x: 10.73, y: 40.73), controlPoint2: CGPoint(x: 10.96, y: 40.14))
        bezierPath.addLine(to: CGPoint(x: 10.31, y: 38.53))
        bezierPath.addLine(to: CGPoint(x: 11.38, y: 38.09))
        bezierPath.addCurve(to: CGPoint(x: 11.94, y: 36.78), controlPoint1: CGPoint(x: 11.89, y: 37.88), controlPoint2: CGPoint(x: 12.15, y: 37.29))
        bezierPath.addCurve(to: CGPoint(x: 10.62, y: 36.25), controlPoint1: CGPoint(x: 11.73, y: 36.27), controlPoint2: CGPoint(x: 11.14, y: 36.04))
        bezierPath.addLine(to: CGPoint(x: 9.53, y: 36.69))
        bezierPath.addLine(to: CGPoint(x: 9.09, y: 35.62))
        bezierPath.addCurve(to: CGPoint(x: 8.19, y: 35), controlPoint1: CGPoint(x: 8.93, y: 35.24), controlPoint2: CGPoint(x: 8.58, y: 35))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 25.19, y: 39))
        bezierPath.addCurve(to: CGPoint(x: 24.78, y: 39.06), controlPoint1: CGPoint(x: 25.06, y: 39), controlPoint2: CGPoint(x: 24.91, y: 39.01))
        bezierPath.addCurve(to: CGPoint(x: 24.25, y: 40.38), controlPoint1: CGPoint(x: 24.27, y: 39.27), controlPoint2: CGPoint(x: 24.04, y: 39.86))
        bezierPath.addLine(to: CGPoint(x: 24.69, y: 41.47))
        bezierPath.addLine(to: CGPoint(x: 23.62, y: 41.91))
        bezierPath.addCurve(to: CGPoint(x: 23.06, y: 43.22), controlPoint1: CGPoint(x: 23.11, y: 42.12), controlPoint2: CGPoint(x: 22.85, y: 42.71))
        bezierPath.addCurve(to: CGPoint(x: 24, y: 43.81), controlPoint1: CGPoint(x: 23.22, y: 43.61), controlPoint2: CGPoint(x: 23.61, y: 43.81))
        bezierPath.addCurve(to: CGPoint(x: 24.38, y: 43.75), controlPoint1: CGPoint(x: 24.13, y: 43.81), controlPoint2: CGPoint(x: 24.25, y: 43.8))
        bezierPath.addLine(to: CGPoint(x: 25.47, y: 43.31))
        bezierPath.addLine(to: CGPoint(x: 25.91, y: 44.38))
        bezierPath.addCurve(to: CGPoint(x: 26.81, y: 45), controlPoint1: CGPoint(x: 26.07, y: 44.76), controlPoint2: CGPoint(x: 26.42, y: 45))
        bezierPath.addCurve(to: CGPoint(x: 27.22, y: 44.94), controlPoint1: CGPoint(x: 26.94, y: 45), controlPoint2: CGPoint(x: 27.09, y: 44.99))
        bezierPath.addCurve(to: CGPoint(x: 27.75, y: 43.62), controlPoint1: CGPoint(x: 27.73, y: 44.73), controlPoint2: CGPoint(x: 27.96, y: 44.14))
        bezierPath.addLine(to: CGPoint(x: 27.31, y: 42.53))
        bezierPath.addLine(to: CGPoint(x: 28.38, y: 42.09))
        bezierPath.addCurve(to: CGPoint(x: 28.94, y: 40.78), controlPoint1: CGPoint(x: 28.89, y: 41.88), controlPoint2: CGPoint(x: 29.15, y: 41.29))
        bezierPath.addCurve(to: CGPoint(x: 27.62, y: 40.25), controlPoint1: CGPoint(x: 28.73, y: 40.27), controlPoint2: CGPoint(x: 28.13, y: 40.04))
        bezierPath.addLine(to: CGPoint(x: 26.53, y: 40.69))
        bezierPath.addLine(to: CGPoint(x: 26.09, y: 39.62))
        bezierPath.addCurve(to: CGPoint(x: 25.19, y: 39), controlPoint1: CGPoint(x: 25.93, y: 39.24), controlPoint2: CGPoint(x: 25.58, y: 39))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 15.19, y: 43))
        bezierPath.addCurve(to: CGPoint(x: 14.78, y: 43.06), controlPoint1: CGPoint(x: 15.06, y: 43), controlPoint2: CGPoint(x: 14.91, y: 43.01))
        bezierPath.addCurve(to: CGPoint(x: 14.25, y: 44.38), controlPoint1: CGPoint(x: 14.27, y: 43.27), controlPoint2: CGPoint(x: 14.04, y: 43.86))
        bezierPath.addLine(to: CGPoint(x: 14.69, y: 45.47))
        bezierPath.addLine(to: CGPoint(x: 13.62, y: 45.91))
        bezierPath.addCurve(to: CGPoint(x: 13.06, y: 47.22), controlPoint1: CGPoint(x: 13.11, y: 46.12), controlPoint2: CGPoint(x: 12.85, y: 46.71))
        bezierPath.addCurve(to: CGPoint(x: 14, y: 47.81), controlPoint1: CGPoint(x: 13.22, y: 47.61), controlPoint2: CGPoint(x: 13.61, y: 47.81))
        bezierPath.addCurve(to: CGPoint(x: 14.38, y: 47.75), controlPoint1: CGPoint(x: 14.13, y: 47.81), controlPoint2: CGPoint(x: 14.25, y: 47.8))
        bezierPath.addLine(to: CGPoint(x: 15.47, y: 47.31))
        bezierPath.addLine(to: CGPoint(x: 15.91, y: 48.38))
        bezierPath.addCurve(to: CGPoint(x: 16.84, y: 49), controlPoint1: CGPoint(x: 16.07, y: 48.76), controlPoint2: CGPoint(x: 16.45, y: 49))
        bezierPath.addCurve(to: CGPoint(x: 17.22, y: 48.94), controlPoint1: CGPoint(x: 16.97, y: 49), controlPoint2: CGPoint(x: 17.09, y: 48.99))
        bezierPath.addCurve(to: CGPoint(x: 17.75, y: 47.62), controlPoint1: CGPoint(x: 17.73, y: 48.73), controlPoint2: CGPoint(x: 17.96, y: 48.14))
        bezierPath.addLine(to: CGPoint(x: 17.31, y: 46.53))
        bezierPath.addLine(to: CGPoint(x: 18.38, y: 46.09))
        bezierPath.addCurve(to: CGPoint(x: 18.94, y: 44.78), controlPoint1: CGPoint(x: 18.89, y: 45.88), controlPoint2: CGPoint(x: 19.15, y: 45.29))
        bezierPath.addCurve(to: CGPoint(x: 17.62, y: 44.25), controlPoint1: CGPoint(x: 18.73, y: 44.27), controlPoint2: CGPoint(x: 18.13, y: 44.04))
        bezierPath.addLine(to: CGPoint(x: 16.53, y: 44.69))
        bezierPath.addLine(to: CGPoint(x: 16.09, y: 43.62))
        bezierPath.addCurve(to: CGPoint(x: 15.19, y: 43), controlPoint1: CGPoint(x: 15.93, y: 43.24), controlPoint2: CGPoint(x: 15.58, y: 43))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 35.19, y: 43))
        bezierPath.addCurve(to: CGPoint(x: 34.78, y: 43.06), controlPoint1: CGPoint(x: 35.06, y: 43), controlPoint2: CGPoint(x: 34.91, y: 43.01))
        bezierPath.addCurve(to: CGPoint(x: 34.25, y: 44.38), controlPoint1: CGPoint(x: 34.27, y: 43.27), controlPoint2: CGPoint(x: 34.04, y: 43.86))
        bezierPath.addLine(to: CGPoint(x: 34.69, y: 45.47))
        bezierPath.addLine(to: CGPoint(x: 33.62, y: 45.91))
        bezierPath.addCurve(to: CGPoint(x: 33.06, y: 47.22), controlPoint1: CGPoint(x: 33.11, y: 46.12), controlPoint2: CGPoint(x: 32.85, y: 46.71))
        bezierPath.addCurve(to: CGPoint(x: 34, y: 47.81), controlPoint1: CGPoint(x: 33.22, y: 47.61), controlPoint2: CGPoint(x: 33.61, y: 47.81))
        bezierPath.addCurve(to: CGPoint(x: 34.38, y: 47.75), controlPoint1: CGPoint(x: 34.13, y: 47.81), controlPoint2: CGPoint(x: 34.25, y: 47.8))
        bezierPath.addLine(to: CGPoint(x: 35.47, y: 47.31))
        bezierPath.addLine(to: CGPoint(x: 35.91, y: 48.38))
        bezierPath.addCurve(to: CGPoint(x: 36.81, y: 49), controlPoint1: CGPoint(x: 36.07, y: 48.76), controlPoint2: CGPoint(x: 36.42, y: 49))
        bezierPath.addCurve(to: CGPoint(x: 37.22, y: 48.94), controlPoint1: CGPoint(x: 36.94, y: 49), controlPoint2: CGPoint(x: 37.09, y: 48.99))
        bezierPath.addCurve(to: CGPoint(x: 37.75, y: 47.62), controlPoint1: CGPoint(x: 37.73, y: 48.73), controlPoint2: CGPoint(x: 37.96, y: 48.14))
        bezierPath.addLine(to: CGPoint(x: 37.31, y: 46.53))
        bezierPath.addLine(to: CGPoint(x: 38.38, y: 46.09))
        bezierPath.addCurve(to: CGPoint(x: 38.94, y: 44.78), controlPoint1: CGPoint(x: 38.89, y: 45.88), controlPoint2: CGPoint(x: 39.15, y: 45.29))
        bezierPath.addCurve(to: CGPoint(x: 37.62, y: 44.25), controlPoint1: CGPoint(x: 38.73, y: 44.27), controlPoint2: CGPoint(x: 38.14, y: 44.04))
        bezierPath.addLine(to: CGPoint(x: 36.53, y: 44.69))
        bezierPath.addLine(to: CGPoint(x: 36.09, y: 43.62))
        bezierPath.addCurve(to: CGPoint(x: 35.19, y: 43), controlPoint1: CGPoint(x: 35.93, y: 43.24), controlPoint2: CGPoint(x: 35.58, y: 43))
        bezierPath.close()
        fillColor.setFill()
        bezierPath.fill()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawWeatherStorm(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 50, height: 50), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 50, height: 50), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 50, y: resizedFrame.height / 50)


        //// Color Declarations
        let fillColor = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1.000)

        //// surface1
        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 22.5, y: 4))
        bezierPath.addCurve(to: CGPoint(x: 12, y: 14.5), controlPoint1: CGPoint(x: 16.71, y: 4), controlPoint2: CGPoint(x: 12, y: 8.71))
        bezierPath.addCurve(to: CGPoint(x: 12, y: 15), controlPoint1: CGPoint(x: 12, y: 14.66), controlPoint2: CGPoint(x: 11.99, y: 14.83))
        bezierPath.addCurve(to: CGPoint(x: 4, y: 23), controlPoint1: CGPoint(x: 7.59, y: 15), controlPoint2: CGPoint(x: 4, y: 18.59))
        bezierPath.addCurve(to: CGPoint(x: 12, y: 31), controlPoint1: CGPoint(x: 4, y: 27.41), controlPoint2: CGPoint(x: 7.59, y: 31))
        bezierPath.addLine(to: CGPoint(x: 21.12, y: 31))
        bezierPath.addLine(to: CGPoint(x: 25, y: 26))
        bezierPath.addLine(to: CGPoint(x: 31, y: 26))
        bezierPath.addLine(to: CGPoint(x: 26, y: 31))
        bezierPath.addLine(to: CGPoint(x: 36, y: 31))
        bezierPath.addCurve(to: CGPoint(x: 46, y: 21), controlPoint1: CGPoint(x: 41.52, y: 31), controlPoint2: CGPoint(x: 46, y: 26.52))
        bezierPath.addCurve(to: CGPoint(x: 36, y: 11), controlPoint1: CGPoint(x: 46, y: 15.48), controlPoint2: CGPoint(x: 41.52, y: 11))
        bezierPath.addCurve(to: CGPoint(x: 32.59, y: 11.59), controlPoint1: CGPoint(x: 34.82, y: 11), controlPoint2: CGPoint(x: 33.69, y: 11.2))
        bezierPath.addCurve(to: CGPoint(x: 22.5, y: 4), controlPoint1: CGPoint(x: 31.33, y: 7.12), controlPoint2: CGPoint(x: 27.26, y: 4))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 26, y: 31))
        bezierPath.addLine(to: CGPoint(x: 21.12, y: 31))
        bezierPath.addLine(to: CGPoint(x: 18, y: 35))
        bezierPath.addLine(to: CGPoint(x: 23, y: 35))
        bezierPath.addLine(to: CGPoint(x: 17.94, y: 43))
        bezierPath.addLine(to: CGPoint(x: 29, y: 33))
        bezierPath.addLine(to: CGPoint(x: 24, y: 33))
        bezierPath.addLine(to: CGPoint(x: 26, y: 31))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 12, y: 34))
        bezierPath.addCurve(to: CGPoint(x: 11.28, y: 34.28), controlPoint1: CGPoint(x: 11.75, y: 34), controlPoint2: CGPoint(x: 11.48, y: 34.09))
        bezierPath.addLine(to: CGPoint(x: 7.28, y: 38.28))
        bezierPath.addCurve(to: CGPoint(x: 7.28, y: 39.72), controlPoint1: CGPoint(x: 6.89, y: 38.67), controlPoint2: CGPoint(x: 6.89, y: 39.33))
        bezierPath.addCurve(to: CGPoint(x: 8, y: 40), controlPoint1: CGPoint(x: 7.48, y: 39.91), controlPoint2: CGPoint(x: 7.74, y: 40))
        bezierPath.addCurve(to: CGPoint(x: 8.72, y: 39.72), controlPoint1: CGPoint(x: 8.26, y: 40), controlPoint2: CGPoint(x: 8.52, y: 39.91))
        bezierPath.addLine(to: CGPoint(x: 12.72, y: 35.72))
        bezierPath.addCurve(to: CGPoint(x: 12.72, y: 34.28), controlPoint1: CGPoint(x: 13.11, y: 35.33), controlPoint2: CGPoint(x: 13.11, y: 34.67))
        bezierPath.addCurve(to: CGPoint(x: 12, y: 34), controlPoint1: CGPoint(x: 12.52, y: 34.09), controlPoint2: CGPoint(x: 12.25, y: 34))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 36, y: 35))
        bezierPath.addCurve(to: CGPoint(x: 35.28, y: 35.28), controlPoint1: CGPoint(x: 35.75, y: 35), controlPoint2: CGPoint(x: 35.48, y: 35.09))
        bezierPath.addLine(to: CGPoint(x: 31.28, y: 39.28))
        bezierPath.addCurve(to: CGPoint(x: 31.28, y: 40.72), controlPoint1: CGPoint(x: 30.89, y: 39.67), controlPoint2: CGPoint(x: 30.89, y: 40.33))
        bezierPath.addCurve(to: CGPoint(x: 32, y: 41), controlPoint1: CGPoint(x: 31.48, y: 40.91), controlPoint2: CGPoint(x: 31.74, y: 41))
        bezierPath.addCurve(to: CGPoint(x: 32.72, y: 40.72), controlPoint1: CGPoint(x: 32.26, y: 41), controlPoint2: CGPoint(x: 32.52, y: 40.91))
        bezierPath.addLine(to: CGPoint(x: 36.72, y: 36.72))
        bezierPath.addCurve(to: CGPoint(x: 36.72, y: 35.28), controlPoint1: CGPoint(x: 37.11, y: 36.33), controlPoint2: CGPoint(x: 37.11, y: 35.67))
        bezierPath.addCurve(to: CGPoint(x: 36, y: 35), controlPoint1: CGPoint(x: 36.52, y: 35.09), controlPoint2: CGPoint(x: 36.25, y: 35))
        bezierPath.close()
        fillColor.setFill()
        bezierPath.fill()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawWeatherHail(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 50, height: 50), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 50, height: 50), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 50, y: resizedFrame.height / 50)


        //// Color Declarations
        let fillColor = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1.000)

        //// surface1
        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 22.5, y: 6))
        bezierPath.addCurve(to: CGPoint(x: 12, y: 16.5), controlPoint1: CGPoint(x: 16.71, y: 6), controlPoint2: CGPoint(x: 12, y: 10.71))
        bezierPath.addCurve(to: CGPoint(x: 12, y: 17), controlPoint1: CGPoint(x: 12, y: 16.66), controlPoint2: CGPoint(x: 11.99, y: 16.83))
        bezierPath.addCurve(to: CGPoint(x: 4, y: 25), controlPoint1: CGPoint(x: 7.59, y: 17), controlPoint2: CGPoint(x: 4, y: 20.59))
        bezierPath.addCurve(to: CGPoint(x: 12, y: 33), controlPoint1: CGPoint(x: 4, y: 29.41), controlPoint2: CGPoint(x: 7.59, y: 33))
        bezierPath.addLine(to: CGPoint(x: 36, y: 33))
        bezierPath.addCurve(to: CGPoint(x: 46, y: 23), controlPoint1: CGPoint(x: 41.52, y: 33), controlPoint2: CGPoint(x: 46, y: 28.52))
        bezierPath.addCurve(to: CGPoint(x: 36, y: 13), controlPoint1: CGPoint(x: 46, y: 17.48), controlPoint2: CGPoint(x: 41.52, y: 13))
        bezierPath.addCurve(to: CGPoint(x: 32.59, y: 13.59), controlPoint1: CGPoint(x: 34.82, y: 13), controlPoint2: CGPoint(x: 33.69, y: 13.2))
        bezierPath.addCurve(to: CGPoint(x: 22.5, y: 6), controlPoint1: CGPoint(x: 31.33, y: 9.12), controlPoint2: CGPoint(x: 27.26, y: 6))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 27, y: 33))
        bezierPath.addLine(to: CGPoint(x: 21, y: 37.5))
        bezierPath.addLine(to: CGPoint(x: 21, y: 45))
        bezierPath.addLine(to: CGPoint(x: 27, y: 40.5))
        bezierPath.addLine(to: CGPoint(x: 27, y: 33))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 14, y: 38))
        bezierPath.addLine(to: CGPoint(x: 8, y: 42.5))
        bezierPath.addLine(to: CGPoint(x: 8, y: 50))
        bezierPath.addLine(to: CGPoint(x: 14, y: 45.5))
        bezierPath.addLine(to: CGPoint(x: 14, y: 38))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 37, y: 38))
        bezierPath.addLine(to: CGPoint(x: 31, y: 42.5))
        bezierPath.addLine(to: CGPoint(x: 31, y: 50))
        bezierPath.addLine(to: CGPoint(x: 37, y: 45.5))
        bezierPath.addLine(to: CGPoint(x: 37, y: 38))
        bezierPath.close()
        fillColor.setFill()
        bezierPath.fill()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawWeatherTorrentialRain(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 50, height: 50), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 50, height: 50), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 50, y: resizedFrame.height / 50)


        //// Color Declarations
        let fillColor = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1.000)

        //// surface1
        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 22.5, y: 5))
        bezierPath.addCurve(to: CGPoint(x: 12, y: 15.5), controlPoint1: CGPoint(x: 16.71, y: 5), controlPoint2: CGPoint(x: 12, y: 9.71))
        bezierPath.addCurve(to: CGPoint(x: 12, y: 16), controlPoint1: CGPoint(x: 12, y: 15.66), controlPoint2: CGPoint(x: 11.99, y: 15.83))
        bezierPath.addCurve(to: CGPoint(x: 4, y: 24), controlPoint1: CGPoint(x: 7.59, y: 16), controlPoint2: CGPoint(x: 4, y: 19.59))
        bezierPath.addCurve(to: CGPoint(x: 7.19, y: 30.37), controlPoint1: CGPoint(x: 4, y: 26.61), controlPoint2: CGPoint(x: 5.25, y: 28.91))
        bezierPath.addCurve(to: CGPoint(x: 7.03, y: 30.72), controlPoint1: CGPoint(x: 7.11, y: 30.48), controlPoint2: CGPoint(x: 7.06, y: 30.59))
        bezierPath.addLine(to: CGPoint(x: 6.75, y: 31.66))
        bezierPath.addCurve(to: CGPoint(x: 6.94, y: 32.68), controlPoint1: CGPoint(x: 6.62, y: 32), controlPoint2: CGPoint(x: 6.69, y: 32.39))
        bezierPath.addCurve(to: CGPoint(x: 7.93, y: 32.98), controlPoint1: CGPoint(x: 7.18, y: 32.95), controlPoint2: CGPoint(x: 7.56, y: 33.07))
        bezierPath.addCurve(to: CGPoint(x: 8.66, y: 32.25), controlPoint1: CGPoint(x: 8.29, y: 32.89), controlPoint2: CGPoint(x: 8.57, y: 32.61))
        bezierPath.addLine(to: CGPoint(x: 8.94, y: 31.41))
        bezierPath.addCurve(to: CGPoint(x: 10.69, y: 31.91), controlPoint1: CGPoint(x: 9.49, y: 31.63), controlPoint2: CGPoint(x: 10.08, y: 31.8))
        bezierPath.addCurve(to: CGPoint(x: 11.51, y: 33.02), controlPoint1: CGPoint(x: 10.62, y: 32.44), controlPoint2: CGPoint(x: 10.98, y: 32.93))
        bezierPath.addCurve(to: CGPoint(x: 12.66, y: 32.25), controlPoint1: CGPoint(x: 12.04, y: 33.12), controlPoint2: CGPoint(x: 12.54, y: 32.77))
        bezierPath.addLine(to: CGPoint(x: 12.75, y: 32))
        bezierPath.addLine(to: CGPoint(x: 14.69, y: 32))
        bezierPath.addCurve(to: CGPoint(x: 15.56, y: 32.99), controlPoint1: CGPoint(x: 14.69, y: 32.5), controlPoint2: CGPoint(x: 15.06, y: 32.93))
        bezierPath.addCurve(to: CGPoint(x: 16.66, y: 32.25), controlPoint1: CGPoint(x: 16.06, y: 33.06), controlPoint2: CGPoint(x: 16.53, y: 32.74))
        bezierPath.addLine(to: CGPoint(x: 16.75, y: 32))
        bezierPath.addLine(to: CGPoint(x: 18.69, y: 32))
        bezierPath.addCurve(to: CGPoint(x: 19.56, y: 32.99), controlPoint1: CGPoint(x: 18.69, y: 32.5), controlPoint2: CGPoint(x: 19.06, y: 32.93))
        bezierPath.addCurve(to: CGPoint(x: 20.66, y: 32.25), controlPoint1: CGPoint(x: 20.06, y: 33.06), controlPoint2: CGPoint(x: 20.53, y: 32.74))
        bezierPath.addLine(to: CGPoint(x: 20.75, y: 32))
        bezierPath.addLine(to: CGPoint(x: 22.69, y: 32))
        bezierPath.addCurve(to: CGPoint(x: 23.56, y: 32.99), controlPoint1: CGPoint(x: 22.69, y: 32.5), controlPoint2: CGPoint(x: 23.06, y: 32.93))
        bezierPath.addCurve(to: CGPoint(x: 24.66, y: 32.25), controlPoint1: CGPoint(x: 24.06, y: 33.06), controlPoint2: CGPoint(x: 24.53, y: 32.74))
        bezierPath.addLine(to: CGPoint(x: 24.75, y: 32))
        bezierPath.addLine(to: CGPoint(x: 26.69, y: 32))
        bezierPath.addCurve(to: CGPoint(x: 27.56, y: 32.99), controlPoint1: CGPoint(x: 26.69, y: 32.5), controlPoint2: CGPoint(x: 27.06, y: 32.93))
        bezierPath.addCurve(to: CGPoint(x: 28.66, y: 32.25), controlPoint1: CGPoint(x: 28.06, y: 33.06), controlPoint2: CGPoint(x: 28.53, y: 32.74))
        bezierPath.addLine(to: CGPoint(x: 28.75, y: 32))
        bezierPath.addLine(to: CGPoint(x: 30.69, y: 32))
        bezierPath.addCurve(to: CGPoint(x: 31.56, y: 32.99), controlPoint1: CGPoint(x: 30.69, y: 32.5), controlPoint2: CGPoint(x: 31.06, y: 32.93))
        bezierPath.addCurve(to: CGPoint(x: 32.66, y: 32.25), controlPoint1: CGPoint(x: 32.06, y: 33.06), controlPoint2: CGPoint(x: 32.53, y: 32.74))
        bezierPath.addLine(to: CGPoint(x: 32.75, y: 32))
        bezierPath.addLine(to: CGPoint(x: 34.69, y: 32))
        bezierPath.addCurve(to: CGPoint(x: 35.56, y: 32.99), controlPoint1: CGPoint(x: 34.69, y: 32.5), controlPoint2: CGPoint(x: 35.06, y: 32.93))
        bezierPath.addCurve(to: CGPoint(x: 36.66, y: 32.25), controlPoint1: CGPoint(x: 36.06, y: 33.06), controlPoint2: CGPoint(x: 36.53, y: 32.74))
        bezierPath.addLine(to: CGPoint(x: 36.75, y: 31.97))
        bezierPath.addCurve(to: CGPoint(x: 38.75, y: 31.59), controlPoint1: CGPoint(x: 37.45, y: 31.92), controlPoint2: CGPoint(x: 38.1, y: 31.78))
        bezierPath.addLine(to: CGPoint(x: 38.75, y: 31.66))
        bezierPath.addCurve(to: CGPoint(x: 38.94, y: 32.68), controlPoint1: CGPoint(x: 38.62, y: 32), controlPoint2: CGPoint(x: 38.69, y: 32.39))
        bezierPath.addCurve(to: CGPoint(x: 39.93, y: 32.98), controlPoint1: CGPoint(x: 39.18, y: 32.95), controlPoint2: CGPoint(x: 39.56, y: 33.07))
        bezierPath.addCurve(to: CGPoint(x: 40.66, y: 32.25), controlPoint1: CGPoint(x: 40.29, y: 32.89), controlPoint2: CGPoint(x: 40.57, y: 32.61))
        bezierPath.addLine(to: CGPoint(x: 40.97, y: 31.28))
        bezierPath.addCurve(to: CGPoint(x: 40.97, y: 30.66), controlPoint1: CGPoint(x: 41.04, y: 31.08), controlPoint2: CGPoint(x: 41.04, y: 30.86))
        bezierPath.addCurve(to: CGPoint(x: 46, y: 22), controlPoint1: CGPoint(x: 43.97, y: 28.93), controlPoint2: CGPoint(x: 46, y: 25.7))
        bezierPath.addCurve(to: CGPoint(x: 36, y: 12), controlPoint1: CGPoint(x: 46, y: 16.48), controlPoint2: CGPoint(x: 41.52, y: 12))
        bezierPath.addCurve(to: CGPoint(x: 32.59, y: 12.59), controlPoint1: CGPoint(x: 34.82, y: 12), controlPoint2: CGPoint(x: 33.69, y: 12.19))
        bezierPath.addCurve(to: CGPoint(x: 22.5, y: 5), controlPoint1: CGPoint(x: 31.32, y: 8.12), controlPoint2: CGPoint(x: 27.26, y: 5))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 10.81, y: 33.91))
        bezierPath.addLine(to: CGPoint(x: 10, y: 34.28))
        bezierPath.addLine(to: CGPoint(x: 9.84, y: 34.59))
        bezierPath.addLine(to: CGPoint(x: 9.41, y: 36.06))
        bezierPath.addLine(to: CGPoint(x: 9.53, y: 36.97))
        bezierPath.addLine(to: CGPoint(x: 10.34, y: 37.37))
        bezierPath.addLine(to: CGPoint(x: 11.16, y: 36.97))
        bezierPath.addLine(to: CGPoint(x: 11.31, y: 36.66))
        bezierPath.addLine(to: CGPoint(x: 11.75, y: 35.19))
        bezierPath.addLine(to: CGPoint(x: 11.59, y: 34.31))
        bezierPath.addLine(to: CGPoint(x: 10.81, y: 33.91))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 18.81, y: 33.91))
        bezierPath.addLine(to: CGPoint(x: 18, y: 34.28))
        bezierPath.addLine(to: CGPoint(x: 17.84, y: 34.59))
        bezierPath.addLine(to: CGPoint(x: 17.41, y: 36.06))
        bezierPath.addLine(to: CGPoint(x: 17.53, y: 36.97))
        bezierPath.addLine(to: CGPoint(x: 18.34, y: 37.37))
        bezierPath.addLine(to: CGPoint(x: 19.16, y: 36.97))
        bezierPath.addLine(to: CGPoint(x: 19.31, y: 36.66))
        bezierPath.addLine(to: CGPoint(x: 19.75, y: 35.19))
        bezierPath.addLine(to: CGPoint(x: 19.59, y: 34.31))
        bezierPath.addLine(to: CGPoint(x: 18.81, y: 33.91))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 26.81, y: 33.91))
        bezierPath.addLine(to: CGPoint(x: 26, y: 34.28))
        bezierPath.addLine(to: CGPoint(x: 25.84, y: 34.59))
        bezierPath.addLine(to: CGPoint(x: 25.41, y: 36.06))
        bezierPath.addLine(to: CGPoint(x: 25.53, y: 36.97))
        bezierPath.addLine(to: CGPoint(x: 26.34, y: 37.37))
        bezierPath.addLine(to: CGPoint(x: 27.16, y: 36.97))
        bezierPath.addLine(to: CGPoint(x: 27.31, y: 36.66))
        bezierPath.addLine(to: CGPoint(x: 27.75, y: 35.19))
        bezierPath.addLine(to: CGPoint(x: 27.59, y: 34.31))
        bezierPath.addLine(to: CGPoint(x: 26.81, y: 33.91))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 34.81, y: 33.91))
        bezierPath.addLine(to: CGPoint(x: 34, y: 34.28))
        bezierPath.addLine(to: CGPoint(x: 33.84, y: 34.59))
        bezierPath.addLine(to: CGPoint(x: 33.41, y: 36.06))
        bezierPath.addLine(to: CGPoint(x: 33.53, y: 36.97))
        bezierPath.addLine(to: CGPoint(x: 34.34, y: 37.37))
        bezierPath.addLine(to: CGPoint(x: 35.16, y: 36.97))
        bezierPath.addLine(to: CGPoint(x: 35.31, y: 36.66))
        bezierPath.addLine(to: CGPoint(x: 35.75, y: 35.19))
        bezierPath.addLine(to: CGPoint(x: 35.59, y: 34.31))
        bezierPath.addLine(to: CGPoint(x: 34.81, y: 33.91))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 6.34, y: 35.41))
        bezierPath.addLine(to: CGPoint(x: 5.53, y: 35.78))
        bezierPath.addLine(to: CGPoint(x: 5.38, y: 36.09))
        bezierPath.addLine(to: CGPoint(x: 4.69, y: 38.31))
        bezierPath.addLine(to: CGPoint(x: 4.84, y: 39.19))
        bezierPath.addLine(to: CGPoint(x: 5.66, y: 39.59))
        bezierPath.addLine(to: CGPoint(x: 6.44, y: 39.22))
        bezierPath.addLine(to: CGPoint(x: 6.62, y: 38.91))
        bezierPath.addLine(to: CGPoint(x: 7.28, y: 36.69))
        bezierPath.addLine(to: CGPoint(x: 7.16, y: 35.81))
        bezierPath.addLine(to: CGPoint(x: 6.34, y: 35.41))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 14.34, y: 35.41))
        bezierPath.addLine(to: CGPoint(x: 13.53, y: 35.78))
        bezierPath.addLine(to: CGPoint(x: 13.38, y: 36.09))
        bezierPath.addLine(to: CGPoint(x: 12.69, y: 38.31))
        bezierPath.addLine(to: CGPoint(x: 12.84, y: 39.19))
        bezierPath.addLine(to: CGPoint(x: 13.66, y: 39.59))
        bezierPath.addLine(to: CGPoint(x: 14.44, y: 39.22))
        bezierPath.addLine(to: CGPoint(x: 14.62, y: 38.91))
        bezierPath.addLine(to: CGPoint(x: 15.28, y: 36.69))
        bezierPath.addLine(to: CGPoint(x: 15.16, y: 35.81))
        bezierPath.addLine(to: CGPoint(x: 14.34, y: 35.41))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 22.34, y: 35.41))
        bezierPath.addLine(to: CGPoint(x: 21.53, y: 35.78))
        bezierPath.addLine(to: CGPoint(x: 21.38, y: 36.09))
        bezierPath.addLine(to: CGPoint(x: 20.69, y: 38.31))
        bezierPath.addLine(to: CGPoint(x: 20.84, y: 39.19))
        bezierPath.addLine(to: CGPoint(x: 21.66, y: 39.59))
        bezierPath.addLine(to: CGPoint(x: 22.44, y: 39.22))
        bezierPath.addLine(to: CGPoint(x: 22.62, y: 38.91))
        bezierPath.addLine(to: CGPoint(x: 23.28, y: 36.69))
        bezierPath.addLine(to: CGPoint(x: 23.16, y: 35.81))
        bezierPath.addLine(to: CGPoint(x: 22.34, y: 35.41))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 30.34, y: 35.41))
        bezierPath.addLine(to: CGPoint(x: 29.53, y: 35.78))
        bezierPath.addLine(to: CGPoint(x: 29.38, y: 36.09))
        bezierPath.addLine(to: CGPoint(x: 28.72, y: 38.31))
        bezierPath.addLine(to: CGPoint(x: 28.84, y: 39.19))
        bezierPath.addLine(to: CGPoint(x: 29.66, y: 39.59))
        bezierPath.addLine(to: CGPoint(x: 30.47, y: 39.22))
        bezierPath.addLine(to: CGPoint(x: 30.62, y: 38.91))
        bezierPath.addLine(to: CGPoint(x: 31.28, y: 36.69))
        bezierPath.addLine(to: CGPoint(x: 31.16, y: 35.81))
        bezierPath.addLine(to: CGPoint(x: 30.34, y: 35.41))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 38.34, y: 35.41))
        bezierPath.addLine(to: CGPoint(x: 37.53, y: 35.78))
        bezierPath.addLine(to: CGPoint(x: 37.38, y: 36.09))
        bezierPath.addLine(to: CGPoint(x: 36.72, y: 38.31))
        bezierPath.addLine(to: CGPoint(x: 36.84, y: 39.19))
        bezierPath.addLine(to: CGPoint(x: 37.66, y: 39.59))
        bezierPath.addLine(to: CGPoint(x: 38.47, y: 39.22))
        bezierPath.addLine(to: CGPoint(x: 38.62, y: 38.91))
        bezierPath.addLine(to: CGPoint(x: 39.28, y: 36.69))
        bezierPath.addLine(to: CGPoint(x: 39.16, y: 35.81))
        bezierPath.addLine(to: CGPoint(x: 38.34, y: 35.41))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 9.34, y: 38.28))
        bezierPath.addCurve(to: CGPoint(x: 9.22, y: 38.31), controlPoint1: CGPoint(x: 9.3, y: 38.29), controlPoint2: CGPoint(x: 9.26, y: 38.3))
        bezierPath.addCurve(to: CGPoint(x: 8.5, y: 39.03), controlPoint1: CGPoint(x: 8.87, y: 38.4), controlPoint2: CGPoint(x: 8.59, y: 38.68))
        bezierPath.addLine(to: CGPoint(x: 8.19, y: 39.97))
        bezierPath.addCurve(to: CGPoint(x: 8.38, y: 40.99), controlPoint1: CGPoint(x: 8.05, y: 40.32), controlPoint2: CGPoint(x: 8.13, y: 40.71))
        bezierPath.addCurve(to: CGPoint(x: 9.36, y: 41.29), controlPoint1: CGPoint(x: 8.62, y: 41.27), controlPoint2: CGPoint(x: 9, y: 41.38))
        bezierPath.addCurve(to: CGPoint(x: 10.09, y: 40.56), controlPoint1: CGPoint(x: 9.72, y: 41.21), controlPoint2: CGPoint(x: 10, y: 40.92))
        bezierPath.addLine(to: CGPoint(x: 10.41, y: 39.59))
        bezierPath.addCurve(to: CGPoint(x: 10.23, y: 38.64), controlPoint1: CGPoint(x: 10.52, y: 39.27), controlPoint2: CGPoint(x: 10.45, y: 38.91))
        bezierPath.addCurve(to: CGPoint(x: 9.34, y: 38.28), controlPoint1: CGPoint(x: 10.02, y: 38.38), controlPoint2: CGPoint(x: 9.68, y: 38.24))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 17.34, y: 38.28))
        bezierPath.addCurve(to: CGPoint(x: 17.22, y: 38.31), controlPoint1: CGPoint(x: 17.3, y: 38.29), controlPoint2: CGPoint(x: 17.26, y: 38.3))
        bezierPath.addCurve(to: CGPoint(x: 16.5, y: 39.03), controlPoint1: CGPoint(x: 16.87, y: 38.4), controlPoint2: CGPoint(x: 16.59, y: 38.68))
        bezierPath.addLine(to: CGPoint(x: 16.19, y: 39.97))
        bezierPath.addCurve(to: CGPoint(x: 16.38, y: 40.99), controlPoint1: CGPoint(x: 16.05, y: 40.32), controlPoint2: CGPoint(x: 16.13, y: 40.71))
        bezierPath.addCurve(to: CGPoint(x: 17.36, y: 41.29), controlPoint1: CGPoint(x: 16.62, y: 41.27), controlPoint2: CGPoint(x: 17, y: 41.38))
        bezierPath.addCurve(to: CGPoint(x: 18.09, y: 40.56), controlPoint1: CGPoint(x: 17.72, y: 41.21), controlPoint2: CGPoint(x: 18, y: 40.92))
        bezierPath.addLine(to: CGPoint(x: 18.41, y: 39.59))
        bezierPath.addCurve(to: CGPoint(x: 18.23, y: 38.64), controlPoint1: CGPoint(x: 18.52, y: 39.27), controlPoint2: CGPoint(x: 18.45, y: 38.91))
        bezierPath.addCurve(to: CGPoint(x: 17.34, y: 38.28), controlPoint1: CGPoint(x: 18.02, y: 38.38), controlPoint2: CGPoint(x: 17.68, y: 38.24))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 25.34, y: 38.28))
        bezierPath.addCurve(to: CGPoint(x: 25.22, y: 38.31), controlPoint1: CGPoint(x: 25.3, y: 38.29), controlPoint2: CGPoint(x: 25.26, y: 38.3))
        bezierPath.addCurve(to: CGPoint(x: 24.5, y: 39.03), controlPoint1: CGPoint(x: 24.87, y: 38.4), controlPoint2: CGPoint(x: 24.59, y: 38.68))
        bezierPath.addLine(to: CGPoint(x: 24.19, y: 39.97))
        bezierPath.addCurve(to: CGPoint(x: 24.38, y: 40.99), controlPoint1: CGPoint(x: 24.05, y: 40.32), controlPoint2: CGPoint(x: 24.13, y: 40.71))
        bezierPath.addCurve(to: CGPoint(x: 25.36, y: 41.29), controlPoint1: CGPoint(x: 24.62, y: 41.27), controlPoint2: CGPoint(x: 25, y: 41.38))
        bezierPath.addCurve(to: CGPoint(x: 26.09, y: 40.56), controlPoint1: CGPoint(x: 25.72, y: 41.21), controlPoint2: CGPoint(x: 26, y: 40.92))
        bezierPath.addLine(to: CGPoint(x: 26.41, y: 39.59))
        bezierPath.addCurve(to: CGPoint(x: 26.23, y: 38.64), controlPoint1: CGPoint(x: 26.52, y: 39.27), controlPoint2: CGPoint(x: 26.45, y: 38.91))
        bezierPath.addCurve(to: CGPoint(x: 25.34, y: 38.28), controlPoint1: CGPoint(x: 26.02, y: 38.38), controlPoint2: CGPoint(x: 25.68, y: 38.24))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 33.34, y: 38.28))
        bezierPath.addCurve(to: CGPoint(x: 33.22, y: 38.31), controlPoint1: CGPoint(x: 33.3, y: 38.29), controlPoint2: CGPoint(x: 33.26, y: 38.3))
        bezierPath.addCurve(to: CGPoint(x: 32.5, y: 39.03), controlPoint1: CGPoint(x: 32.87, y: 38.4), controlPoint2: CGPoint(x: 32.59, y: 38.68))
        bezierPath.addLine(to: CGPoint(x: 32.19, y: 39.97))
        bezierPath.addCurve(to: CGPoint(x: 32.38, y: 40.99), controlPoint1: CGPoint(x: 32.05, y: 40.32), controlPoint2: CGPoint(x: 32.13, y: 40.71))
        bezierPath.addCurve(to: CGPoint(x: 33.36, y: 41.29), controlPoint1: CGPoint(x: 32.62, y: 41.27), controlPoint2: CGPoint(x: 33, y: 41.38))
        bezierPath.addCurve(to: CGPoint(x: 34.09, y: 40.56), controlPoint1: CGPoint(x: 33.72, y: 41.21), controlPoint2: CGPoint(x: 34, y: 40.92))
        bezierPath.addLine(to: CGPoint(x: 34.41, y: 39.59))
        bezierPath.addCurve(to: CGPoint(x: 34.23, y: 38.64), controlPoint1: CGPoint(x: 34.52, y: 39.27), controlPoint2: CGPoint(x: 34.45, y: 38.91))
        bezierPath.addCurve(to: CGPoint(x: 33.34, y: 38.28), controlPoint1: CGPoint(x: 34.02, y: 38.38), controlPoint2: CGPoint(x: 33.68, y: 38.24))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 4.19, y: 42.03))
        bezierPath.addCurve(to: CGPoint(x: 3.34, y: 42.75), controlPoint1: CGPoint(x: 3.79, y: 42.08), controlPoint2: CGPoint(x: 3.45, y: 42.36))
        bezierPath.addLine(to: CGPoint(x: 3.03, y: 43.72))
        bezierPath.addCurve(to: CGPoint(x: 3.72, y: 44.97), controlPoint1: CGPoint(x: 2.88, y: 44.25), controlPoint2: CGPoint(x: 3.18, y: 44.81))
        bezierPath.addCurve(to: CGPoint(x: 4.97, y: 44.28), controlPoint1: CGPoint(x: 4.25, y: 45.12), controlPoint2: CGPoint(x: 4.81, y: 44.82))
        bezierPath.addLine(to: CGPoint(x: 5.25, y: 43.34))
        bezierPath.addCurve(to: CGPoint(x: 5.08, y: 42.39), controlPoint1: CGPoint(x: 5.36, y: 43.02), controlPoint2: CGPoint(x: 5.29, y: 42.66))
        bezierPath.addCurve(to: CGPoint(x: 4.19, y: 42.03), controlPoint1: CGPoint(x: 4.86, y: 42.13), controlPoint2: CGPoint(x: 4.53, y: 41.99))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 12.19, y: 42.03))
        bezierPath.addCurve(to: CGPoint(x: 11.34, y: 42.75), controlPoint1: CGPoint(x: 11.79, y: 42.08), controlPoint2: CGPoint(x: 11.45, y: 42.36))
        bezierPath.addLine(to: CGPoint(x: 11.03, y: 43.72))
        bezierPath.addCurve(to: CGPoint(x: 11.72, y: 44.97), controlPoint1: CGPoint(x: 10.88, y: 44.25), controlPoint2: CGPoint(x: 11.18, y: 44.81))
        bezierPath.addCurve(to: CGPoint(x: 12.97, y: 44.28), controlPoint1: CGPoint(x: 12.25, y: 45.12), controlPoint2: CGPoint(x: 12.81, y: 44.82))
        bezierPath.addLine(to: CGPoint(x: 13.25, y: 43.34))
        bezierPath.addCurve(to: CGPoint(x: 13.08, y: 42.39), controlPoint1: CGPoint(x: 13.36, y: 43.02), controlPoint2: CGPoint(x: 13.29, y: 42.66))
        bezierPath.addCurve(to: CGPoint(x: 12.19, y: 42.03), controlPoint1: CGPoint(x: 12.86, y: 42.13), controlPoint2: CGPoint(x: 12.53, y: 41.99))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 20.19, y: 42.03))
        bezierPath.addCurve(to: CGPoint(x: 19.34, y: 42.75), controlPoint1: CGPoint(x: 19.79, y: 42.08), controlPoint2: CGPoint(x: 19.45, y: 42.36))
        bezierPath.addLine(to: CGPoint(x: 19.03, y: 43.72))
        bezierPath.addCurve(to: CGPoint(x: 19.72, y: 44.97), controlPoint1: CGPoint(x: 18.88, y: 44.25), controlPoint2: CGPoint(x: 19.18, y: 44.81))
        bezierPath.addCurve(to: CGPoint(x: 20.97, y: 44.28), controlPoint1: CGPoint(x: 20.25, y: 45.12), controlPoint2: CGPoint(x: 20.81, y: 44.82))
        bezierPath.addLine(to: CGPoint(x: 21.25, y: 43.34))
        bezierPath.addCurve(to: CGPoint(x: 21.08, y: 42.39), controlPoint1: CGPoint(x: 21.36, y: 43.02), controlPoint2: CGPoint(x: 21.29, y: 42.66))
        bezierPath.addCurve(to: CGPoint(x: 20.19, y: 42.03), controlPoint1: CGPoint(x: 20.86, y: 42.13), controlPoint2: CGPoint(x: 20.53, y: 41.99))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 28.19, y: 42.03))
        bezierPath.addCurve(to: CGPoint(x: 27.34, y: 42.75), controlPoint1: CGPoint(x: 27.79, y: 42.08), controlPoint2: CGPoint(x: 27.45, y: 42.36))
        bezierPath.addLine(to: CGPoint(x: 27.03, y: 43.72))
        bezierPath.addCurve(to: CGPoint(x: 27.72, y: 44.97), controlPoint1: CGPoint(x: 26.88, y: 44.25), controlPoint2: CGPoint(x: 27.18, y: 44.81))
        bezierPath.addCurve(to: CGPoint(x: 28.97, y: 44.28), controlPoint1: CGPoint(x: 28.25, y: 45.12), controlPoint2: CGPoint(x: 28.81, y: 44.82))
        bezierPath.addLine(to: CGPoint(x: 29.25, y: 43.34))
        bezierPath.addCurve(to: CGPoint(x: 29.08, y: 42.39), controlPoint1: CGPoint(x: 29.36, y: 43.02), controlPoint2: CGPoint(x: 29.29, y: 42.66))
        bezierPath.addCurve(to: CGPoint(x: 28.19, y: 42.03), controlPoint1: CGPoint(x: 28.86, y: 42.13), controlPoint2: CGPoint(x: 28.53, y: 41.99))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 36.19, y: 42.03))
        bezierPath.addCurve(to: CGPoint(x: 35.34, y: 42.75), controlPoint1: CGPoint(x: 35.79, y: 42.08), controlPoint2: CGPoint(x: 35.45, y: 42.36))
        bezierPath.addLine(to: CGPoint(x: 35.03, y: 43.72))
        bezierPath.addCurve(to: CGPoint(x: 35.72, y: 44.97), controlPoint1: CGPoint(x: 34.88, y: 44.25), controlPoint2: CGPoint(x: 35.18, y: 44.81))
        bezierPath.addCurve(to: CGPoint(x: 36.97, y: 44.28), controlPoint1: CGPoint(x: 36.25, y: 45.12), controlPoint2: CGPoint(x: 36.81, y: 44.82))
        bezierPath.addLine(to: CGPoint(x: 37.25, y: 43.34))
        bezierPath.addCurve(to: CGPoint(x: 37.08, y: 42.39), controlPoint1: CGPoint(x: 37.36, y: 43.02), controlPoint2: CGPoint(x: 37.29, y: 42.66))
        bezierPath.addCurve(to: CGPoint(x: 36.19, y: 42.03), controlPoint1: CGPoint(x: 36.86, y: 42.13), controlPoint2: CGPoint(x: 36.53, y: 41.99))
        bezierPath.close()
        fillColor.setFill()
        bezierPath.fill()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawWeatherLightRain(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 50, height: 50), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 50, height: 50), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 50, y: resizedFrame.height / 50)


        //// Color Declarations
        let fillColor = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1.000)

        //// surface1
        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 22.5, y: 5))
        bezierPath.addCurve(to: CGPoint(x: 12, y: 15.5), controlPoint1: CGPoint(x: 16.71, y: 5), controlPoint2: CGPoint(x: 12, y: 9.71))
        bezierPath.addCurve(to: CGPoint(x: 12, y: 16), controlPoint1: CGPoint(x: 12, y: 15.66), controlPoint2: CGPoint(x: 11.99, y: 15.83))
        bezierPath.addCurve(to: CGPoint(x: 4, y: 24), controlPoint1: CGPoint(x: 7.59, y: 16), controlPoint2: CGPoint(x: 4, y: 19.59))
        bezierPath.addCurve(to: CGPoint(x: 12, y: 32), controlPoint1: CGPoint(x: 4, y: 28.41), controlPoint2: CGPoint(x: 7.59, y: 32))
        bezierPath.addLine(to: CGPoint(x: 18.62, y: 32))
        bezierPath.addLine(to: CGPoint(x: 18.59, y: 32.13))
        bezierPath.addCurve(to: CGPoint(x: 18.78, y: 33.14), controlPoint1: CGPoint(x: 18.46, y: 32.47), controlPoint2: CGPoint(x: 18.54, y: 32.86))
        bezierPath.addCurve(to: CGPoint(x: 19.77, y: 33.45), controlPoint1: CGPoint(x: 19.03, y: 33.42), controlPoint2: CGPoint(x: 19.41, y: 33.54))
        bezierPath.addCurve(to: CGPoint(x: 20.5, y: 32.72), controlPoint1: CGPoint(x: 20.13, y: 33.36), controlPoint2: CGPoint(x: 20.41, y: 33.08))
        bezierPath.addLine(to: CGPoint(x: 20.75, y: 32))
        bezierPath.addLine(to: CGPoint(x: 24.69, y: 32))
        bezierPath.addCurve(to: CGPoint(x: 25.56, y: 32.99), controlPoint1: CGPoint(x: 24.69, y: 32.5), controlPoint2: CGPoint(x: 25.06, y: 32.93))
        bezierPath.addCurve(to: CGPoint(x: 26.66, y: 32.25), controlPoint1: CGPoint(x: 26.06, y: 33.06), controlPoint2: CGPoint(x: 26.53, y: 32.74))
        bezierPath.addLine(to: CGPoint(x: 26.75, y: 32))
        bezierPath.addLine(to: CGPoint(x: 36, y: 32))
        bezierPath.addCurve(to: CGPoint(x: 46, y: 22), controlPoint1: CGPoint(x: 41.52, y: 32), controlPoint2: CGPoint(x: 46, y: 27.52))
        bezierPath.addCurve(to: CGPoint(x: 36, y: 12), controlPoint1: CGPoint(x: 46, y: 16.48), controlPoint2: CGPoint(x: 41.52, y: 12))
        bezierPath.addCurve(to: CGPoint(x: 32.59, y: 12.59), controlPoint1: CGPoint(x: 34.82, y: 12), controlPoint2: CGPoint(x: 33.69, y: 12.2))
        bezierPath.addCurve(to: CGPoint(x: 22.5, y: 5), controlPoint1: CGPoint(x: 31.33, y: 8.12), controlPoint2: CGPoint(x: 27.26, y: 5))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 24.59, y: 34.59))
        bezierPath.addLine(to: CGPoint(x: 23.78, y: 35))
        bezierPath.addLine(to: CGPoint(x: 23.62, y: 35.31))
        bezierPath.addLine(to: CGPoint(x: 23.06, y: 37.13))
        bezierPath.addLine(to: CGPoint(x: 23.22, y: 38))
        bezierPath.addLine(to: CGPoint(x: 24, y: 38.41))
        bezierPath.addLine(to: CGPoint(x: 24.81, y: 38.03))
        bezierPath.addLine(to: CGPoint(x: 24.97, y: 37.72))
        bezierPath.addLine(to: CGPoint(x: 25.53, y: 35.91))
        bezierPath.addLine(to: CGPoint(x: 25.41, y: 35))
        bezierPath.addLine(to: CGPoint(x: 24.59, y: 34.59))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 18.06, y: 36.03))
        bezierPath.addCurve(to: CGPoint(x: 17.94, y: 36.06), controlPoint1: CGPoint(x: 18.02, y: 36.04), controlPoint2: CGPoint(x: 17.98, y: 36.05))
        bezierPath.addCurve(to: CGPoint(x: 17.19, y: 36.78), controlPoint1: CGPoint(x: 17.57, y: 36.14), controlPoint2: CGPoint(x: 17.29, y: 36.42))
        bezierPath.addLine(to: CGPoint(x: 16.75, y: 38.22))
        bezierPath.addCurve(to: CGPoint(x: 16.92, y: 39.27), controlPoint1: CGPoint(x: 16.6, y: 38.57), controlPoint2: CGPoint(x: 16.67, y: 38.98))
        bezierPath.addCurve(to: CGPoint(x: 17.94, y: 39.57), controlPoint1: CGPoint(x: 17.18, y: 39.56), controlPoint2: CGPoint(x: 17.57, y: 39.68))
        bezierPath.addCurve(to: CGPoint(x: 18.66, y: 38.78), controlPoint1: CGPoint(x: 18.31, y: 39.46), controlPoint2: CGPoint(x: 18.59, y: 39.16))
        bezierPath.addLine(to: CGPoint(x: 19.09, y: 37.38))
        bezierPath.addCurve(to: CGPoint(x: 18.95, y: 36.42), controlPoint1: CGPoint(x: 19.21, y: 37.05), controlPoint2: CGPoint(x: 19.16, y: 36.69))
        bezierPath.addCurve(to: CGPoint(x: 18.06, y: 36.03), controlPoint1: CGPoint(x: 18.74, y: 36.14), controlPoint2: CGPoint(x: 18.41, y: 36))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 22.81, y: 40.03))
        bezierPath.addCurve(to: CGPoint(x: 22.69, y: 40.06), controlPoint1: CGPoint(x: 22.77, y: 40.04), controlPoint2: CGPoint(x: 22.73, y: 40.05))
        bezierPath.addCurve(to: CGPoint(x: 21.94, y: 40.78), controlPoint1: CGPoint(x: 22.32, y: 40.14), controlPoint2: CGPoint(x: 22.04, y: 40.42))
        bezierPath.addLine(to: CGPoint(x: 21.66, y: 41.72))
        bezierPath.addCurve(to: CGPoint(x: 21.84, y: 42.74), controlPoint1: CGPoint(x: 21.52, y: 42.07), controlPoint2: CGPoint(x: 21.6, y: 42.46))
        bezierPath.addCurve(to: CGPoint(x: 22.83, y: 43.04), controlPoint1: CGPoint(x: 22.09, y: 43.02), controlPoint2: CGPoint(x: 22.47, y: 43.13))
        bezierPath.addCurve(to: CGPoint(x: 23.56, y: 42.31), controlPoint1: CGPoint(x: 23.19, y: 42.96), controlPoint2: CGPoint(x: 23.47, y: 42.67))
        bezierPath.addLine(to: CGPoint(x: 23.88, y: 41.34))
        bezierPath.addCurve(to: CGPoint(x: 23.7, y: 40.39), controlPoint1: CGPoint(x: 23.98, y: 41.02), controlPoint2: CGPoint(x: 23.92, y: 40.66))
        bezierPath.addCurve(to: CGPoint(x: 22.81, y: 40.03), controlPoint1: CGPoint(x: 23.49, y: 40.13), controlPoint2: CGPoint(x: 23.15, y: 39.99))
        bezierPath.close()
        fillColor.setFill()
        bezierPath.fill()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawWeatherModerateRain(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 50, height: 50), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 50, height: 50), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 50, y: resizedFrame.height / 50)


        //// Color Declarations
        let fillColor = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1.000)

        //// surface1
        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 22.5, y: 5))
        bezierPath.addCurve(to: CGPoint(x: 12, y: 15.5), controlPoint1: CGPoint(x: 16.71, y: 5), controlPoint2: CGPoint(x: 12, y: 9.71))
        bezierPath.addCurve(to: CGPoint(x: 12, y: 16), controlPoint1: CGPoint(x: 12, y: 15.66), controlPoint2: CGPoint(x: 11.99, y: 15.83))
        bezierPath.addCurve(to: CGPoint(x: 4, y: 24), controlPoint1: CGPoint(x: 7.59, y: 16), controlPoint2: CGPoint(x: 4, y: 19.59))
        bezierPath.addCurve(to: CGPoint(x: 12, y: 32), controlPoint1: CGPoint(x: 4, y: 28.41), controlPoint2: CGPoint(x: 7.59, y: 32))
        bezierPath.addLine(to: CGPoint(x: 16.62, y: 32))
        bezierPath.addLine(to: CGPoint(x: 16.59, y: 32.13))
        bezierPath.addCurve(to: CGPoint(x: 16.78, y: 33.14), controlPoint1: CGPoint(x: 16.46, y: 32.47), controlPoint2: CGPoint(x: 16.54, y: 32.86))
        bezierPath.addCurve(to: CGPoint(x: 17.77, y: 33.45), controlPoint1: CGPoint(x: 17.03, y: 33.42), controlPoint2: CGPoint(x: 17.41, y: 33.54))
        bezierPath.addCurve(to: CGPoint(x: 18.5, y: 32.72), controlPoint1: CGPoint(x: 18.13, y: 33.36), controlPoint2: CGPoint(x: 18.41, y: 33.08))
        bezierPath.addLine(to: CGPoint(x: 18.75, y: 32))
        bezierPath.addLine(to: CGPoint(x: 23.69, y: 32))
        bezierPath.addCurve(to: CGPoint(x: 24.56, y: 32.99), controlPoint1: CGPoint(x: 23.69, y: 32.5), controlPoint2: CGPoint(x: 24.06, y: 32.93))
        bezierPath.addCurve(to: CGPoint(x: 25.66, y: 32.25), controlPoint1: CGPoint(x: 25.06, y: 33.06), controlPoint2: CGPoint(x: 25.53, y: 32.74))
        bezierPath.addLine(to: CGPoint(x: 25.75, y: 32))
        bezierPath.addLine(to: CGPoint(x: 30.62, y: 32))
        bezierPath.addLine(to: CGPoint(x: 30.59, y: 32.13))
        bezierPath.addCurve(to: CGPoint(x: 30.78, y: 33.14), controlPoint1: CGPoint(x: 30.46, y: 32.47), controlPoint2: CGPoint(x: 30.54, y: 32.86))
        bezierPath.addCurve(to: CGPoint(x: 31.77, y: 33.45), controlPoint1: CGPoint(x: 31.03, y: 33.42), controlPoint2: CGPoint(x: 31.41, y: 33.54))
        bezierPath.addCurve(to: CGPoint(x: 32.5, y: 32.72), controlPoint1: CGPoint(x: 32.13, y: 33.36), controlPoint2: CGPoint(x: 32.41, y: 33.08))
        bezierPath.addLine(to: CGPoint(x: 32.75, y: 32))
        bezierPath.addLine(to: CGPoint(x: 36, y: 32))
        bezierPath.addCurve(to: CGPoint(x: 46, y: 22), controlPoint1: CGPoint(x: 41.52, y: 32), controlPoint2: CGPoint(x: 46, y: 27.52))
        bezierPath.addCurve(to: CGPoint(x: 36, y: 12), controlPoint1: CGPoint(x: 46, y: 16.48), controlPoint2: CGPoint(x: 41.52, y: 12))
        bezierPath.addCurve(to: CGPoint(x: 32.59, y: 12.59), controlPoint1: CGPoint(x: 34.82, y: 12), controlPoint2: CGPoint(x: 33.69, y: 12.19))
        bezierPath.addCurve(to: CGPoint(x: 22.5, y: 5), controlPoint1: CGPoint(x: 31.32, y: 8.12), controlPoint2: CGPoint(x: 27.26, y: 5))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 23.59, y: 34.59))
        bezierPath.addLine(to: CGPoint(x: 22.78, y: 35))
        bezierPath.addLine(to: CGPoint(x: 22.62, y: 35.31))
        bezierPath.addLine(to: CGPoint(x: 22.06, y: 37.13))
        bezierPath.addLine(to: CGPoint(x: 22.22, y: 38))
        bezierPath.addLine(to: CGPoint(x: 23, y: 38.41))
        bezierPath.addLine(to: CGPoint(x: 23.81, y: 38.03))
        bezierPath.addLine(to: CGPoint(x: 23.97, y: 37.72))
        bezierPath.addLine(to: CGPoint(x: 24.53, y: 35.91))
        bezierPath.addLine(to: CGPoint(x: 24.41, y: 35))
        bezierPath.addLine(to: CGPoint(x: 23.59, y: 34.59))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 16.06, y: 36.03))
        bezierPath.addCurve(to: CGPoint(x: 15.94, y: 36.06), controlPoint1: CGPoint(x: 16.02, y: 36.04), controlPoint2: CGPoint(x: 15.98, y: 36.05))
        bezierPath.addCurve(to: CGPoint(x: 15.19, y: 36.78), controlPoint1: CGPoint(x: 15.57, y: 36.14), controlPoint2: CGPoint(x: 15.29, y: 36.42))
        bezierPath.addLine(to: CGPoint(x: 14.75, y: 38.22))
        bezierPath.addCurve(to: CGPoint(x: 14.92, y: 39.27), controlPoint1: CGPoint(x: 14.6, y: 38.57), controlPoint2: CGPoint(x: 14.67, y: 38.98))
        bezierPath.addCurve(to: CGPoint(x: 15.94, y: 39.57), controlPoint1: CGPoint(x: 15.18, y: 39.56), controlPoint2: CGPoint(x: 15.57, y: 39.68))
        bezierPath.addCurve(to: CGPoint(x: 16.66, y: 38.78), controlPoint1: CGPoint(x: 16.31, y: 39.46), controlPoint2: CGPoint(x: 16.59, y: 39.16))
        bezierPath.addLine(to: CGPoint(x: 17.09, y: 37.38))
        bezierPath.addCurve(to: CGPoint(x: 16.95, y: 36.42), controlPoint1: CGPoint(x: 17.21, y: 37.05), controlPoint2: CGPoint(x: 17.16, y: 36.69))
        bezierPath.addCurve(to: CGPoint(x: 16.06, y: 36.03), controlPoint1: CGPoint(x: 16.74, y: 36.14), controlPoint2: CGPoint(x: 16.41, y: 36))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 30.06, y: 36.03))
        bezierPath.addCurve(to: CGPoint(x: 29.94, y: 36.06), controlPoint1: CGPoint(x: 30.02, y: 36.04), controlPoint2: CGPoint(x: 29.98, y: 36.05))
        bezierPath.addCurve(to: CGPoint(x: 29.19, y: 36.78), controlPoint1: CGPoint(x: 29.57, y: 36.14), controlPoint2: CGPoint(x: 29.29, y: 36.42))
        bezierPath.addLine(to: CGPoint(x: 28.75, y: 38.22))
        bezierPath.addCurve(to: CGPoint(x: 28.92, y: 39.27), controlPoint1: CGPoint(x: 28.6, y: 38.57), controlPoint2: CGPoint(x: 28.67, y: 38.98))
        bezierPath.addCurve(to: CGPoint(x: 29.94, y: 39.57), controlPoint1: CGPoint(x: 29.18, y: 39.56), controlPoint2: CGPoint(x: 29.57, y: 39.68))
        bezierPath.addCurve(to: CGPoint(x: 30.66, y: 38.78), controlPoint1: CGPoint(x: 30.31, y: 39.46), controlPoint2: CGPoint(x: 30.59, y: 39.16))
        bezierPath.addLine(to: CGPoint(x: 31.09, y: 37.38))
        bezierPath.addCurve(to: CGPoint(x: 30.95, y: 36.42), controlPoint1: CGPoint(x: 31.21, y: 37.05), controlPoint2: CGPoint(x: 31.16, y: 36.69))
        bezierPath.addCurve(to: CGPoint(x: 30.06, y: 36.03), controlPoint1: CGPoint(x: 30.74, y: 36.14), controlPoint2: CGPoint(x: 30.41, y: 36))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: 21.81, y: 40.03))
        bezierPath.addCurve(to: CGPoint(x: 21.69, y: 40.06), controlPoint1: CGPoint(x: 21.77, y: 40.04), controlPoint2: CGPoint(x: 21.73, y: 40.05))
        bezierPath.addCurve(to: CGPoint(x: 20.94, y: 40.78), controlPoint1: CGPoint(x: 21.32, y: 40.14), controlPoint2: CGPoint(x: 21.04, y: 40.42))
        bezierPath.addLine(to: CGPoint(x: 20.66, y: 41.72))
        bezierPath.addCurve(to: CGPoint(x: 20.84, y: 42.74), controlPoint1: CGPoint(x: 20.52, y: 42.07), controlPoint2: CGPoint(x: 20.6, y: 42.46))
        bezierPath.addCurve(to: CGPoint(x: 21.83, y: 43.04), controlPoint1: CGPoint(x: 21.09, y: 43.02), controlPoint2: CGPoint(x: 21.47, y: 43.13))
        bezierPath.addCurve(to: CGPoint(x: 22.56, y: 42.31), controlPoint1: CGPoint(x: 22.19, y: 42.96), controlPoint2: CGPoint(x: 22.47, y: 42.67))
        bezierPath.addLine(to: CGPoint(x: 22.88, y: 41.34))
        bezierPath.addCurve(to: CGPoint(x: 22.7, y: 40.39), controlPoint1: CGPoint(x: 22.98, y: 41.02), controlPoint2: CGPoint(x: 22.92, y: 40.66))
        bezierPath.addCurve(to: CGPoint(x: 21.81, y: 40.03), controlPoint1: CGPoint(x: 22.49, y: 40.13), controlPoint2: CGPoint(x: 22.15, y: 39.99))
        bezierPath.close()
        fillColor.setFill()
        bezierPath.fill()
        
        context.restoreGState()

    }

    @objc dynamic public class func drawSadSun(frame: CGRect = CGRect(x: 0, y: 0, width: 200, height: 200)) {
        //// General Declarations
        // This non-generic function dramatically improves compilation times of complex expressions.
        func fastFloor(_ x: CGFloat) -> CGFloat { return floor(x) }

        //// Color Declarations
        let fillColor = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1.000)


        //// Subframes
        let group: CGRect = CGRect(x: frame.minX + 10, y: frame.minY + 11, width: fastFloor((frame.width - 10) * 0.94211 + 0.5), height: fastFloor((frame.height - 11) * 0.94709 + 0.5))


        //// Group
        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: group.minX + 0.49940 * group.width, y: group.minY + 0.00011 * group.height))
        bezier2Path.addCurve(to: CGPoint(x: group.minX + 0.49644 * group.width, y: group.minY + 0.00085 * group.height), controlPoint1: CGPoint(x: group.minX + 0.49838 * group.width, y: group.minY + 0.00029 * group.height), controlPoint2: CGPoint(x: group.minX + 0.49736 * group.width, y: group.minY + 0.00057 * group.height))
        bezier2Path.addCurve(to: CGPoint(x: group.minX + 0.47791 * group.width, y: group.minY + 0.02463 * group.height), controlPoint1: CGPoint(x: group.minX + 0.48541 * group.width, y: group.minY + 0.00336 * group.height), controlPoint2: CGPoint(x: group.minX + 0.47763 * group.width, y: group.minY + 0.01330 * group.height))
        bezier2Path.addLine(to: CGPoint(x: group.minX + 0.47791 * group.width, y: group.minY + 0.16732 * group.height))
        bezier2Path.addCurve(to: CGPoint(x: group.minX + 0.48967 * group.width, y: group.minY + 0.18822 * group.height), controlPoint1: CGPoint(x: group.minX + 0.47782 * group.width, y: group.minY + 0.17587 * group.height), controlPoint2: CGPoint(x: group.minX + 0.48226 * group.width, y: group.minY + 0.18386 * group.height))
        bezier2Path.addCurve(to: CGPoint(x: group.minX + 0.51358 * group.width, y: group.minY + 0.18822 * group.height), controlPoint1: CGPoint(x: group.minX + 0.49708 * group.width, y: group.minY + 0.19250 * group.height), controlPoint2: CGPoint(x: group.minX + 0.50616 * group.width, y: group.minY + 0.19250 * group.height))
        bezier2Path.addCurve(to: CGPoint(x: group.minX + 0.52534 * group.width, y: group.minY + 0.16732 * group.height), controlPoint1: CGPoint(x: group.minX + 0.52099 * group.width, y: group.minY + 0.18386 * group.height), controlPoint2: CGPoint(x: group.minX + 0.52543 * group.width, y: group.minY + 0.17587 * group.height))
        bezier2Path.addLine(to: CGPoint(x: group.minX + 0.52534 * group.width, y: group.minY + 0.02463 * group.height))
        bezier2Path.addCurve(to: CGPoint(x: group.minX + 0.51793 * group.width, y: group.minY + 0.00652 * group.height), controlPoint1: CGPoint(x: group.minX + 0.52562 * group.width, y: group.minY + 0.01776 * group.height), controlPoint2: CGPoint(x: group.minX + 0.52284 * group.width, y: group.minY + 0.01116 * group.height))
        bezier2Path.addCurve(to: CGPoint(x: group.minX + 0.49940 * group.width, y: group.minY + 0.00011 * group.height), controlPoint1: CGPoint(x: group.minX + 0.51293 * group.width, y: group.minY + 0.00178 * group.height), controlPoint2: CGPoint(x: group.minX + 0.50616 * group.width, y: group.minY + -0.00054 * group.height))
        bezier2Path.close()
        bezier2Path.move(to: CGPoint(x: group.minX + 0.16144 * group.width, y: group.minY + 0.13982 * group.height))
        bezier2Path.addCurve(to: CGPoint(x: group.minX + 0.14291 * group.width, y: group.minY + 0.15655 * group.height), controlPoint1: CGPoint(x: group.minX + 0.15254 * group.width, y: group.minY + 0.14140 * group.height), controlPoint2: CGPoint(x: group.minX + 0.14541 * group.width, y: group.minY + 0.14791 * group.height))
        bezier2Path.addCurve(to: CGPoint(x: group.minX + 0.14958 * group.width, y: group.minY + 0.18070 * group.height), controlPoint1: CGPoint(x: group.minX + 0.14041 * group.width, y: group.minY + 0.16528 * group.height), controlPoint2: CGPoint(x: group.minX + 0.14300 * group.width, y: group.minY + 0.17457 * group.height))
        bezier2Path.addLine(to: CGPoint(x: group.minX + 0.25038 * group.width, y: group.minY + 0.28177 * group.height))
        bezier2Path.addCurve(to: CGPoint(x: group.minX + 0.27418 * group.width, y: group.minY + 0.29004 * group.height), controlPoint1: CGPoint(x: group.minX + 0.25612 * group.width, y: group.minY + 0.28883 * group.height), controlPoint2: CGPoint(x: group.minX + 0.26529 * group.width, y: group.minY + 0.29208 * group.height))
        bezier2Path.addCurve(to: CGPoint(x: group.minX + 0.29197 * group.width, y: group.minY + 0.27220 * group.height), controlPoint1: CGPoint(x: group.minX + 0.28299 * group.width, y: group.minY + 0.28799 * group.height), controlPoint2: CGPoint(x: group.minX + 0.28993 * group.width, y: group.minY + 0.28103 * group.height))
        bezier2Path.addCurve(to: CGPoint(x: group.minX + 0.28373 * group.width, y: group.minY + 0.24833 * group.height), controlPoint1: CGPoint(x: group.minX + 0.29401 * group.width, y: group.minY + 0.26328 * group.height), controlPoint2: CGPoint(x: group.minX + 0.29077 * group.width, y: group.minY + 0.25409 * group.height))
        bezier2Path.addLine(to: CGPoint(x: group.minX + 0.18293 * group.width, y: group.minY + 0.14726 * group.height))
        bezier2Path.addCurve(to: CGPoint(x: group.minX + 0.16366 * group.width, y: group.minY + 0.13982 * group.height), controlPoint1: CGPoint(x: group.minX + 0.17802 * group.width, y: group.minY + 0.14196 * group.height), controlPoint2: CGPoint(x: group.minX + 0.17089 * group.width, y: group.minY + 0.13927 * group.height))
        bezier2Path.addCurve(to: CGPoint(x: group.minX + 0.16144 * group.width, y: group.minY + 0.13982 * group.height), controlPoint1: CGPoint(x: group.minX + 0.16292 * group.width, y: group.minY + 0.13982 * group.height), controlPoint2: CGPoint(x: group.minX + 0.16218 * group.width, y: group.minY + 0.13982 * group.height))
        bezier2Path.close()
        bezier2Path.move(to: CGPoint(x: group.minX + 0.83440 * group.width, y: group.minY + 0.13982 * group.height))
        bezier2Path.addCurve(to: CGPoint(x: group.minX + 0.82032 * group.width, y: group.minY + 0.14726 * group.height), controlPoint1: CGPoint(x: group.minX + 0.82903 * group.width, y: group.minY + 0.14057 * group.height), controlPoint2: CGPoint(x: group.minX + 0.82402 * group.width, y: group.minY + 0.14326 * group.height))
        bezier2Path.addLine(to: CGPoint(x: group.minX + 0.71952 * group.width, y: group.minY + 0.24833 * group.height))
        bezier2Path.addCurve(to: CGPoint(x: group.minX + 0.71128 * group.width, y: group.minY + 0.27220 * group.height), controlPoint1: CGPoint(x: group.minX + 0.71248 * group.width, y: group.minY + 0.25409 * group.height), controlPoint2: CGPoint(x: group.minX + 0.70924 * group.width, y: group.minY + 0.26328 * group.height))
        bezier2Path.addCurve(to: CGPoint(x: group.minX + 0.72906 * group.width, y: group.minY + 0.29004 * group.height), controlPoint1: CGPoint(x: group.minX + 0.71331 * group.width, y: group.minY + 0.28103 * group.height), controlPoint2: CGPoint(x: group.minX + 0.72026 * group.width, y: group.minY + 0.28799 * group.height))
        bezier2Path.addCurve(to: CGPoint(x: group.minX + 0.75287 * group.width, y: group.minY + 0.28177 * group.height), controlPoint1: CGPoint(x: group.minX + 0.73796 * group.width, y: group.minY + 0.29208 * group.height), controlPoint2: CGPoint(x: group.minX + 0.74713 * group.width, y: group.minY + 0.28883 * group.height))
        bezier2Path.addLine(to: CGPoint(x: group.minX + 0.85367 * group.width, y: group.minY + 0.18070 * group.height))
        bezier2Path.addCurve(to: CGPoint(x: group.minX + 0.85886 * group.width, y: group.minY + 0.15329 * group.height), controlPoint1: CGPoint(x: group.minX + 0.86108 * group.width, y: group.minY + 0.17364 * group.height), controlPoint2: CGPoint(x: group.minX + 0.86321 * group.width, y: group.minY + 0.16258 * group.height))
        bezier2Path.addCurve(to: CGPoint(x: group.minX + 0.83440 * group.width, y: group.minY + 0.13982 * group.height), controlPoint1: CGPoint(x: group.minX + 0.85441 * group.width, y: group.minY + 0.14391 * group.height), controlPoint2: CGPoint(x: group.minX + 0.84459 * group.width, y: group.minY + 0.13852 * group.height))
        bezier2Path.close()
        bezier2Path.move(to: CGPoint(x: group.minX + 0.02062 * group.width, y: group.minY + 0.47648 * group.height))
        bezier2Path.addCurve(to: CGPoint(x: group.minX + 0.00024 * group.width, y: group.minY + 0.50361 * group.height), controlPoint1: CGPoint(x: group.minX + 0.00756 * group.width, y: group.minY + 0.47834 * group.height), controlPoint2: CGPoint(x: group.minX + -0.00161 * group.width, y: group.minY + 0.49051 * group.height))
        bezier2Path.addCurve(to: CGPoint(x: group.minX + 0.02729 * group.width, y: group.minY + 0.52404 * group.height), controlPoint1: CGPoint(x: group.minX + 0.00209 * group.width, y: group.minY + 0.51671 * group.height), controlPoint2: CGPoint(x: group.minX + 0.01423 * group.width, y: group.minY + 0.52590 * group.height))
        bezier2Path.addLine(to: CGPoint(x: group.minX + 0.16959 * group.width, y: group.minY + 0.52404 * group.height))
        bezier2Path.addCurve(to: CGPoint(x: group.minX + 0.19044 * group.width, y: group.minY + 0.51225 * group.height), controlPoint1: CGPoint(x: group.minX + 0.17811 * group.width, y: group.minY + 0.52414 * group.height), controlPoint2: CGPoint(x: group.minX + 0.18608 * group.width, y: group.minY + 0.51968 * group.height))
        bezier2Path.addCurve(to: CGPoint(x: group.minX + 0.19044 * group.width, y: group.minY + 0.48828 * group.height), controlPoint1: CGPoint(x: group.minX + 0.19470 * group.width, y: group.minY + 0.50481 * group.height), controlPoint2: CGPoint(x: group.minX + 0.19470 * group.width, y: group.minY + 0.49571 * group.height))
        bezier2Path.addCurve(to: CGPoint(x: group.minX + 0.16959 * group.width, y: group.minY + 0.47648 * group.height), controlPoint1: CGPoint(x: group.minX + 0.18608 * group.width, y: group.minY + 0.48085 * group.height), controlPoint2: CGPoint(x: group.minX + 0.17811 * group.width, y: group.minY + 0.47639 * group.height))
        bezier2Path.addLine(to: CGPoint(x: group.minX + 0.02729 * group.width, y: group.minY + 0.47648 * group.height))
        bezier2Path.addCurve(to: CGPoint(x: group.minX + 0.02507 * group.width, y: group.minY + 0.47648 * group.height), controlPoint1: CGPoint(x: group.minX + 0.02655 * group.width, y: group.minY + 0.47648 * group.height), controlPoint2: CGPoint(x: group.minX + 0.02581 * group.width, y: group.minY + 0.47648 * group.height))
        bezier2Path.addCurve(to: CGPoint(x: group.minX + 0.02284 * group.width, y: group.minY + 0.47648 * group.height), controlPoint1: CGPoint(x: group.minX + 0.02433 * group.width, y: group.minY + 0.47648 * group.height), controlPoint2: CGPoint(x: group.minX + 0.02358 * group.width, y: group.minY + 0.47648 * group.height))
        bezier2Path.addCurve(to: CGPoint(x: group.minX + 0.02062 * group.width, y: group.minY + 0.47648 * group.height), controlPoint1: CGPoint(x: group.minX + 0.02210 * group.width, y: group.minY + 0.47648 * group.height), controlPoint2: CGPoint(x: group.minX + 0.02136 * group.width, y: group.minY + 0.47648 * group.height))
        bezier2Path.close()
        bezier2Path.move(to: CGPoint(x: group.minX + 0.82699 * group.width, y: group.minY + 0.47648 * group.height))
        bezier2Path.addCurve(to: CGPoint(x: group.minX + 0.80661 * group.width, y: group.minY + 0.50361 * group.height), controlPoint1: CGPoint(x: group.minX + 0.81393 * group.width, y: group.minY + 0.47834 * group.height), controlPoint2: CGPoint(x: group.minX + 0.80475 * group.width, y: group.minY + 0.49051 * group.height))
        bezier2Path.addCurve(to: CGPoint(x: group.minX + 0.83366 * group.width, y: group.minY + 0.52404 * group.height), controlPoint1: CGPoint(x: group.minX + 0.80846 * group.width, y: group.minY + 0.51671 * group.height), controlPoint2: CGPoint(x: group.minX + 0.82060 * group.width, y: group.minY + 0.52590 * group.height))
        bezier2Path.addLine(to: CGPoint(x: group.minX + 0.97596 * group.width, y: group.minY + 0.52404 * group.height))
        bezier2Path.addCurve(to: CGPoint(x: group.minX + 0.99680 * group.width, y: group.minY + 0.51225 * group.height), controlPoint1: CGPoint(x: group.minX + 0.98448 * group.width, y: group.minY + 0.52414 * group.height), controlPoint2: CGPoint(x: group.minX + 0.99245 * group.width, y: group.minY + 0.51968 * group.height))
        bezier2Path.addCurve(to: CGPoint(x: group.minX + 0.99680 * group.width, y: group.minY + 0.48828 * group.height), controlPoint1: CGPoint(x: group.minX + 1.00107 * group.width, y: group.minY + 0.50481 * group.height), controlPoint2: CGPoint(x: group.minX + 1.00107 * group.width, y: group.minY + 0.49571 * group.height))
        bezier2Path.addCurve(to: CGPoint(x: group.minX + 0.97596 * group.width, y: group.minY + 0.47648 * group.height), controlPoint1: CGPoint(x: group.minX + 0.99245 * group.width, y: group.minY + 0.48085 * group.height), controlPoint2: CGPoint(x: group.minX + 0.98448 * group.width, y: group.minY + 0.47639 * group.height))
        bezier2Path.addLine(to: CGPoint(x: group.minX + 0.83366 * group.width, y: group.minY + 0.47648 * group.height))
        bezier2Path.addCurve(to: CGPoint(x: group.minX + 0.83144 * group.width, y: group.minY + 0.47648 * group.height), controlPoint1: CGPoint(x: group.minX + 0.83292 * group.width, y: group.minY + 0.47648 * group.height), controlPoint2: CGPoint(x: group.minX + 0.83218 * group.width, y: group.minY + 0.47648 * group.height))
        bezier2Path.addCurve(to: CGPoint(x: group.minX + 0.82921 * group.width, y: group.minY + 0.47648 * group.height), controlPoint1: CGPoint(x: group.minX + 0.83069 * group.width, y: group.minY + 0.47648 * group.height), controlPoint2: CGPoint(x: group.minX + 0.82995 * group.width, y: group.minY + 0.47648 * group.height))
        bezier2Path.addCurve(to: CGPoint(x: group.minX + 0.82699 * group.width, y: group.minY + 0.47648 * group.height), controlPoint1: CGPoint(x: group.minX + 0.82847 * group.width, y: group.minY + 0.47648 * group.height), controlPoint2: CGPoint(x: group.minX + 0.82773 * group.width, y: group.minY + 0.47648 * group.height))
        bezier2Path.close()
        bezier2Path.move(to: CGPoint(x: group.minX + 0.26446 * group.width, y: group.minY + 0.71132 * group.height))
        bezier2Path.addCurve(to: CGPoint(x: group.minX + 0.25038 * group.width, y: group.minY + 0.71876 * group.height), controlPoint1: CGPoint(x: group.minX + 0.25908 * group.width, y: group.minY + 0.71207 * group.height), controlPoint2: CGPoint(x: group.minX + 0.25408 * group.width, y: group.minY + 0.71476 * group.height))
        bezier2Path.addLine(to: CGPoint(x: group.minX + 0.14958 * group.width, y: group.minY + 0.81983 * group.height))
        bezier2Path.addCurve(to: CGPoint(x: group.minX + 0.14133 * group.width, y: group.minY + 0.84370 * group.height), controlPoint1: CGPoint(x: group.minX + 0.14254 * group.width, y: group.minY + 0.82559 * group.height), controlPoint2: CGPoint(x: group.minX + 0.13930 * group.width, y: group.minY + 0.83478 * group.height))
        bezier2Path.addCurve(to: CGPoint(x: group.minX + 0.15912 * group.width, y: group.minY + 0.86154 * group.height), controlPoint1: CGPoint(x: group.minX + 0.14337 * group.width, y: group.minY + 0.85253 * group.height), controlPoint2: CGPoint(x: group.minX + 0.15032 * group.width, y: group.minY + 0.85949 * group.height))
        bezier2Path.addCurve(to: CGPoint(x: group.minX + 0.18293 * group.width, y: group.minY + 0.85327 * group.height), controlPoint1: CGPoint(x: group.minX + 0.16802 * group.width, y: group.minY + 0.86358 * group.height), controlPoint2: CGPoint(x: group.minX + 0.17719 * group.width, y: group.minY + 0.86033 * group.height))
        bezier2Path.addLine(to: CGPoint(x: group.minX + 0.28373 * group.width, y: group.minY + 0.75220 * group.height))
        bezier2Path.addCurve(to: CGPoint(x: group.minX + 0.28910 * group.width, y: group.minY + 0.72591 * group.height), controlPoint1: CGPoint(x: group.minX + 0.29077 * group.width, y: group.minY + 0.74542 * group.height), controlPoint2: CGPoint(x: group.minX + 0.29290 * group.width, y: group.minY + 0.73492 * group.height))
        bezier2Path.addCurve(to: CGPoint(x: group.minX + 0.26668 * group.width, y: group.minY + 0.71132 * group.height), controlPoint1: CGPoint(x: group.minX + 0.28539 * group.width, y: group.minY + 0.71690 * group.height), controlPoint2: CGPoint(x: group.minX + 0.27641 * group.width, y: group.minY + 0.71114 * group.height))
        bezier2Path.addCurve(to: CGPoint(x: group.minX + 0.26446 * group.width, y: group.minY + 0.71132 * group.height), controlPoint1: CGPoint(x: group.minX + 0.26594 * group.width, y: group.minY + 0.71132 * group.height), controlPoint2: CGPoint(x: group.minX + 0.26520 * group.width, y: group.minY + 0.71132 * group.height))
        bezier2Path.close()
        bezier2Path.move(to: CGPoint(x: group.minX + 0.73138 * group.width, y: group.minY + 0.71132 * group.height))
        bezier2Path.addCurve(to: CGPoint(x: group.minX + 0.71285 * group.width, y: group.minY + 0.72805 * group.height), controlPoint1: CGPoint(x: group.minX + 0.72249 * group.width, y: group.minY + 0.71290 * group.height), controlPoint2: CGPoint(x: group.minX + 0.71535 * group.width, y: group.minY + 0.71941 * group.height))
        bezier2Path.addCurve(to: CGPoint(x: group.minX + 0.71952 * group.width, y: group.minY + 0.75220 * group.height), controlPoint1: CGPoint(x: group.minX + 0.71035 * group.width, y: group.minY + 0.73678 * group.height), controlPoint2: CGPoint(x: group.minX + 0.71294 * group.width, y: group.minY + 0.74607 * group.height))
        bezier2Path.addLine(to: CGPoint(x: group.minX + 0.82032 * group.width, y: group.minY + 0.85327 * group.height))
        bezier2Path.addCurve(to: CGPoint(x: group.minX + 0.84413 * group.width, y: group.minY + 0.86154 * group.height), controlPoint1: CGPoint(x: group.minX + 0.82606 * group.width, y: group.minY + 0.86033 * group.height), controlPoint2: CGPoint(x: group.minX + 0.83523 * group.width, y: group.minY + 0.86358 * group.height))
        bezier2Path.addCurve(to: CGPoint(x: group.minX + 0.86191 * group.width, y: group.minY + 0.84370 * group.height), controlPoint1: CGPoint(x: group.minX + 0.85293 * group.width, y: group.minY + 0.85949 * group.height), controlPoint2: CGPoint(x: group.minX + 0.85988 * group.width, y: group.minY + 0.85253 * group.height))
        bezier2Path.addCurve(to: CGPoint(x: group.minX + 0.85367 * group.width, y: group.minY + 0.81983 * group.height), controlPoint1: CGPoint(x: group.minX + 0.86395 * group.width, y: group.minY + 0.83478 * group.height), controlPoint2: CGPoint(x: group.minX + 0.86071 * group.width, y: group.minY + 0.82559 * group.height))
        bezier2Path.addLine(to: CGPoint(x: group.minX + 0.75287 * group.width, y: group.minY + 0.71876 * group.height))
        bezier2Path.addCurve(to: CGPoint(x: group.minX + 0.73583 * group.width, y: group.minY + 0.71132 * group.height), controlPoint1: CGPoint(x: group.minX + 0.74843 * group.width, y: group.minY + 0.71402 * group.height), controlPoint2: CGPoint(x: group.minX + 0.74231 * group.width, y: group.minY + 0.71142 * group.height))
        bezier2Path.addCurve(to: CGPoint(x: group.minX + 0.73360 * group.width, y: group.minY + 0.71132 * group.height), controlPoint1: CGPoint(x: group.minX + 0.73509 * group.width, y: group.minY + 0.71132 * group.height), controlPoint2: CGPoint(x: group.minX + 0.73434 * group.width, y: group.minY + 0.71132 * group.height))
        bezier2Path.addCurve(to: CGPoint(x: group.minX + 0.73138 * group.width, y: group.minY + 0.71132 * group.height), controlPoint1: CGPoint(x: group.minX + 0.73286 * group.width, y: group.minY + 0.71132 * group.height), controlPoint2: CGPoint(x: group.minX + 0.73212 * group.width, y: group.minY + 0.71132 * group.height))
        bezier2Path.close()
        bezier2Path.move(to: CGPoint(x: group.minX + 0.49940 * group.width, y: group.minY + 0.80868 * group.height))
        bezier2Path.addCurve(to: CGPoint(x: group.minX + 0.49644 * group.width, y: group.minY + 0.80942 * group.height), controlPoint1: CGPoint(x: group.minX + 0.49838 * group.width, y: group.minY + 0.80887 * group.height), controlPoint2: CGPoint(x: group.minX + 0.49736 * group.width, y: group.minY + 0.80914 * group.height))
        bezier2Path.addCurve(to: CGPoint(x: group.minX + 0.47791 * group.width, y: group.minY + 0.83320 * group.height), controlPoint1: CGPoint(x: group.minX + 0.48541 * group.width, y: group.minY + 0.81193 * group.height), controlPoint2: CGPoint(x: group.minX + 0.47763 * group.width, y: group.minY + 0.82187 * group.height))
        bezier2Path.addLine(to: CGPoint(x: group.minX + 0.47791 * group.width, y: group.minY + 0.97589 * group.height))
        bezier2Path.addCurve(to: CGPoint(x: group.minX + 0.48967 * group.width, y: group.minY + 0.99680 * group.height), controlPoint1: CGPoint(x: group.minX + 0.47782 * group.width, y: group.minY + 0.98444 * group.height), controlPoint2: CGPoint(x: group.minX + 0.48226 * group.width, y: group.minY + 0.99243 * group.height))
        bezier2Path.addCurve(to: CGPoint(x: group.minX + 0.51358 * group.width, y: group.minY + 0.99680 * group.height), controlPoint1: CGPoint(x: group.minX + 0.49708 * group.width, y: group.minY + 1.00107 * group.height), controlPoint2: CGPoint(x: group.minX + 0.50616 * group.width, y: group.minY + 1.00107 * group.height))
        bezier2Path.addCurve(to: CGPoint(x: group.minX + 0.52534 * group.width, y: group.minY + 0.97589 * group.height), controlPoint1: CGPoint(x: group.minX + 0.52099 * group.width, y: group.minY + 0.99243 * group.height), controlPoint2: CGPoint(x: group.minX + 0.52543 * group.width, y: group.minY + 0.98444 * group.height))
        bezier2Path.addLine(to: CGPoint(x: group.minX + 0.52534 * group.width, y: group.minY + 0.83320 * group.height))
        bezier2Path.addCurve(to: CGPoint(x: group.minX + 0.51793 * group.width, y: group.minY + 0.81509 * group.height), controlPoint1: CGPoint(x: group.minX + 0.52562 * group.width, y: group.minY + 0.82633 * group.height), controlPoint2: CGPoint(x: group.minX + 0.52284 * group.width, y: group.minY + 0.81973 * group.height))
        bezier2Path.addCurve(to: CGPoint(x: group.minX + 0.49940 * group.width, y: group.minY + 0.80868 * group.height), controlPoint1: CGPoint(x: group.minX + 0.51293 * group.width, y: group.minY + 0.81035 * group.height), controlPoint2: CGPoint(x: group.minX + 0.50616 * group.width, y: group.minY + 0.80803 * group.height))
        bezier2Path.close()
        fillColor.setFill()
        bezier2Path.fill()


        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: group.minX + 0.50000 * group.width, y: group.minY + 0.26190 * group.height))
        bezierPath.addCurve(to: CGPoint(x: group.minX + 0.26190 * group.width, y: group.minY + 0.50000 * group.height), controlPoint1: CGPoint(x: group.minX + 0.36871 * group.width, y: group.minY + 0.26190 * group.height), controlPoint2: CGPoint(x: group.minX + 0.26190 * group.width, y: group.minY + 0.36871 * group.height))
        bezierPath.addCurve(to: CGPoint(x: group.minX + 0.50000 * group.width, y: group.minY + 0.73810 * group.height), controlPoint1: CGPoint(x: group.minX + 0.26190 * group.width, y: group.minY + 0.63129 * group.height), controlPoint2: CGPoint(x: group.minX + 0.36871 * group.width, y: group.minY + 0.73810 * group.height))
        bezierPath.addCurve(to: CGPoint(x: group.minX + 0.73810 * group.width, y: group.minY + 0.50000 * group.height), controlPoint1: CGPoint(x: group.minX + 0.63129 * group.width, y: group.minY + 0.73810 * group.height), controlPoint2: CGPoint(x: group.minX + 0.73810 * group.width, y: group.minY + 0.63129 * group.height))
        bezierPath.addCurve(to: CGPoint(x: group.minX + 0.50000 * group.width, y: group.minY + 0.26190 * group.height), controlPoint1: CGPoint(x: group.minX + 0.73810 * group.width, y: group.minY + 0.36871 * group.height), controlPoint2: CGPoint(x: group.minX + 0.63129 * group.width, y: group.minY + 0.26190 * group.height))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: group.minX + 0.41718 * group.width, y: group.minY + 0.42754 * group.height))
        bezierPath.addCurve(to: CGPoint(x: group.minX + 0.44824 * group.width, y: group.minY + 0.45859 * group.height), controlPoint1: CGPoint(x: group.minX + 0.43434 * group.width, y: group.minY + 0.42754 * group.height), controlPoint2: CGPoint(x: group.minX + 0.44824 * group.width, y: group.minY + 0.44144 * group.height))
        bezierPath.addCurve(to: CGPoint(x: group.minX + 0.41718 * group.width, y: group.minY + 0.48965 * group.height), controlPoint1: CGPoint(x: group.minX + 0.44824 * group.width, y: group.minY + 0.47575 * group.height), controlPoint2: CGPoint(x: group.minX + 0.43434 * group.width, y: group.minY + 0.48965 * group.height))
        bezierPath.addCurve(to: CGPoint(x: group.minX + 0.38613 * group.width, y: group.minY + 0.45859 * group.height), controlPoint1: CGPoint(x: group.minX + 0.40003 * group.width, y: group.minY + 0.48965 * group.height), controlPoint2: CGPoint(x: group.minX + 0.38613 * group.width, y: group.minY + 0.47575 * group.height))
        bezierPath.addCurve(to: CGPoint(x: group.minX + 0.41718 * group.width, y: group.minY + 0.42754 * group.height), controlPoint1: CGPoint(x: group.minX + 0.38613 * group.width, y: group.minY + 0.44144 * group.height), controlPoint2: CGPoint(x: group.minX + 0.40003 * group.width, y: group.minY + 0.42754 * group.height))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: group.minX + 0.61084 * group.width, y: group.minY + 0.60049 * group.height))
        bezierPath.addCurve(to: CGPoint(x: group.minX + 0.60352 * group.width, y: group.minY + 0.60352 * group.height), controlPoint1: CGPoint(x: group.minX + 0.60882 * group.width, y: group.minY + 0.60251 * group.height), controlPoint2: CGPoint(x: group.minX + 0.60617 * group.width, y: group.minY + 0.60352 * group.height))
        bezierPath.addCurve(to: CGPoint(x: group.minX + 0.59620 * group.width, y: group.minY + 0.60049 * group.height), controlPoint1: CGPoint(x: group.minX + 0.60087 * group.width, y: group.minY + 0.60352 * group.height), controlPoint2: CGPoint(x: group.minX + 0.59822 * group.width, y: group.minY + 0.60251 * group.height))
        bezierPath.addCurve(to: CGPoint(x: group.minX + 0.50000 * group.width, y: group.minY + 0.56211 * group.height), controlPoint1: CGPoint(x: group.minX + 0.59583 * group.width, y: group.minY + 0.60012 * group.height), controlPoint2: CGPoint(x: group.minX + 0.55683 * group.width, y: group.minY + 0.56211 * group.height))
        bezierPath.addCurve(to: CGPoint(x: group.minX + 0.40380 * group.width, y: group.minY + 0.60049 * group.height), controlPoint1: CGPoint(x: group.minX + 0.44285 * group.width, y: group.minY + 0.56211 * group.height), controlPoint2: CGPoint(x: group.minX + 0.40418 * group.width, y: group.minY + 0.60010 * group.height))
        bezierPath.addCurve(to: CGPoint(x: group.minX + 0.38916 * group.width, y: group.minY + 0.60049 * group.height), controlPoint1: CGPoint(x: group.minX + 0.39975 * group.width, y: group.minY + 0.60453 * group.height), controlPoint2: CGPoint(x: group.minX + 0.39321 * group.width, y: group.minY + 0.60453 * group.height))
        bezierPath.addCurve(to: CGPoint(x: group.minX + 0.38916 * group.width, y: group.minY + 0.58585 * group.height), controlPoint1: CGPoint(x: group.minX + 0.38511 * group.width, y: group.minY + 0.59644 * group.height), controlPoint2: CGPoint(x: group.minX + 0.38511 * group.width, y: group.minY + 0.58990 * group.height))
        bezierPath.addCurve(to: CGPoint(x: group.minX + 0.50000 * group.width, y: group.minY + 0.54141 * group.height), controlPoint1: CGPoint(x: group.minX + 0.39097 * group.width, y: group.minY + 0.58403 * group.height), controlPoint2: CGPoint(x: group.minX + 0.43436 * group.width, y: group.minY + 0.54141 * group.height))
        bezierPath.addCurve(to: CGPoint(x: group.minX + 0.61084 * group.width, y: group.minY + 0.58585 * group.height), controlPoint1: CGPoint(x: group.minX + 0.56564 * group.width, y: group.minY + 0.54141 * group.height), controlPoint2: CGPoint(x: group.minX + 0.60903 * group.width, y: group.minY + 0.58403 * group.height))
        bezierPath.addCurve(to: CGPoint(x: group.minX + 0.61084 * group.width, y: group.minY + 0.60049 * group.height), controlPoint1: CGPoint(x: group.minX + 0.61489 * group.width, y: group.minY + 0.58990 * group.height), controlPoint2: CGPoint(x: group.minX + 0.61489 * group.width, y: group.minY + 0.59644 * group.height))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: group.minX + 0.58282 * group.width, y: group.minY + 0.48965 * group.height))
        bezierPath.addCurve(to: CGPoint(x: group.minX + 0.55176 * group.width, y: group.minY + 0.45859 * group.height), controlPoint1: CGPoint(x: group.minX + 0.56566 * group.width, y: group.minY + 0.48965 * group.height), controlPoint2: CGPoint(x: group.minX + 0.55176 * group.width, y: group.minY + 0.47575 * group.height))
        bezierPath.addCurve(to: CGPoint(x: group.minX + 0.58282 * group.width, y: group.minY + 0.42754 * group.height), controlPoint1: CGPoint(x: group.minX + 0.55176 * group.width, y: group.minY + 0.44144 * group.height), controlPoint2: CGPoint(x: group.minX + 0.56566 * group.width, y: group.minY + 0.42754 * group.height))
        bezierPath.addCurve(to: CGPoint(x: group.minX + 0.61387 * group.width, y: group.minY + 0.45859 * group.height), controlPoint1: CGPoint(x: group.minX + 0.59997 * group.width, y: group.minY + 0.42754 * group.height), controlPoint2: CGPoint(x: group.minX + 0.61387 * group.width, y: group.minY + 0.44144 * group.height))
        bezierPath.addCurve(to: CGPoint(x: group.minX + 0.58282 * group.width, y: group.minY + 0.48965 * group.height), controlPoint1: CGPoint(x: group.minX + 0.61387 * group.width, y: group.minY + 0.47575 * group.height), controlPoint2: CGPoint(x: group.minX + 0.59997 * group.width, y: group.minY + 0.48965 * group.height))
        bezierPath.close()
        fillColor.setFill()
        bezierPath.fill()
    }

    @objc dynamic public class func drawHappySun(frame: CGRect = CGRect(x: 0, y: 0, width: 200, height: 200), sunRays: CGFloat = 90) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!

        //// Color Declarations
        let fillColor = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1.000)

        //// Group
        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: frame.minX + 99.5, y: frame.minY + 57.88))
        bezierPath.addCurve(to: CGPoint(x: frame.minX + 56.88, y: frame.minY + 100.5), controlPoint1: CGPoint(x: frame.minX + 76, y: frame.minY + 57.88), controlPoint2: CGPoint(x: frame.minX + 56.88, y: frame.minY + 77))
        bezierPath.addCurve(to: CGPoint(x: frame.minX + 99.5, y: frame.minY + 143.12), controlPoint1: CGPoint(x: frame.minX + 56.88, y: frame.minY + 124), controlPoint2: CGPoint(x: frame.minX + 76, y: frame.minY + 143.12))
        bezierPath.addCurve(to: CGPoint(x: frame.minX + 142.12, y: frame.minY + 100.5), controlPoint1: CGPoint(x: frame.minX + 123, y: frame.minY + 143.12), controlPoint2: CGPoint(x: frame.minX + 142.12, y: frame.minY + 124))
        bezierPath.addCurve(to: CGPoint(x: frame.minX + 99.5, y: frame.minY + 57.88), controlPoint1: CGPoint(x: frame.minX + 142.12, y: frame.minY + 77), controlPoint2: CGPoint(x: frame.minX + 123, y: frame.minY + 57.88))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: frame.minX + 114.32, y: frame.minY + 87.53))
        bezierPath.addCurve(to: CGPoint(x: frame.minX + 119.88, y: frame.minY + 93.09), controlPoint1: CGPoint(x: frame.minX + 117.39, y: frame.minY + 87.53), controlPoint2: CGPoint(x: frame.minX + 119.88, y: frame.minY + 90.02))
        bezierPath.addCurve(to: CGPoint(x: frame.minX + 114.32, y: frame.minY + 98.65), controlPoint1: CGPoint(x: frame.minX + 119.88, y: frame.minY + 96.16), controlPoint2: CGPoint(x: frame.minX + 117.39, y: frame.minY + 98.65))
        bezierPath.addCurve(to: CGPoint(x: frame.minX + 108.77, y: frame.minY + 93.09), controlPoint1: CGPoint(x: frame.minX + 111.25, y: frame.minY + 98.65), controlPoint2: CGPoint(x: frame.minX + 108.77, y: frame.minY + 96.16))
        bezierPath.addCurve(to: CGPoint(x: frame.minX + 114.32, y: frame.minY + 87.53), controlPoint1: CGPoint(x: frame.minX + 108.77, y: frame.minY + 90.02), controlPoint2: CGPoint(x: frame.minX + 111.25, y: frame.minY + 87.53))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: frame.minX + 84.68, y: frame.minY + 87.53))
        bezierPath.addCurve(to: CGPoint(x: frame.minX + 90.23, y: frame.minY + 93.09), controlPoint1: CGPoint(x: frame.minX + 87.75, y: frame.minY + 87.53), controlPoint2: CGPoint(x: frame.minX + 90.23, y: frame.minY + 90.02))
        bezierPath.addCurve(to: CGPoint(x: frame.minX + 84.68, y: frame.minY + 98.65), controlPoint1: CGPoint(x: frame.minX + 90.23, y: frame.minY + 96.16), controlPoint2: CGPoint(x: frame.minX + 87.75, y: frame.minY + 98.65))
        bezierPath.addCurve(to: CGPoint(x: frame.minX + 79.12, y: frame.minY + 93.09), controlPoint1: CGPoint(x: frame.minX + 81.61, y: frame.minY + 98.65), controlPoint2: CGPoint(x: frame.minX + 79.12, y: frame.minY + 96.16))
        bezierPath.addCurve(to: CGPoint(x: frame.minX + 84.68, y: frame.minY + 87.53), controlPoint1: CGPoint(x: frame.minX + 79.12, y: frame.minY + 90.02), controlPoint2: CGPoint(x: frame.minX + 81.61, y: frame.minY + 87.53))
        bezierPath.close()
        bezierPath.move(to: CGPoint(x: frame.minX + 125.1, y: frame.minY + 110.84))
        bezierPath.addCurve(to: CGPoint(x: frame.minX + 99.5, y: frame.minY + 124.59), controlPoint1: CGPoint(x: frame.minX + 124.7, y: frame.minY + 111.4), controlPoint2: CGPoint(x: frame.minX + 115.1, y: frame.minY + 124.59))
        bezierPath.addCurve(to: CGPoint(x: frame.minX + 73.9, y: frame.minY + 110.84), controlPoint1: CGPoint(x: frame.minX + 83.9, y: frame.minY + 124.59), controlPoint2: CGPoint(x: frame.minX + 74.3, y: frame.minY + 111.4))
        bezierPath.addCurve(to: CGPoint(x: frame.minX + 74.33, y: frame.minY + 108.26), controlPoint1: CGPoint(x: frame.minX + 73.31, y: frame.minY + 110.01), controlPoint2: CGPoint(x: frame.minX + 73.5, y: frame.minY + 108.86))
        bezierPath.addCurve(to: CGPoint(x: frame.minX + 76.92, y: frame.minY + 108.68), controlPoint1: CGPoint(x: frame.minX + 75.16, y: frame.minY + 107.66), controlPoint2: CGPoint(x: frame.minX + 76.32, y: frame.minY + 107.85))
        bezierPath.addCurve(to: CGPoint(x: frame.minX + 99.5, y: frame.minY + 120.88), controlPoint1: CGPoint(x: frame.minX + 77, y: frame.minY + 108.81), controlPoint2: CGPoint(x: frame.minX + 85.84, y: frame.minY + 120.88))
        bezierPath.addCurve(to: CGPoint(x: frame.minX + 122.08, y: frame.minY + 108.69), controlPoint1: CGPoint(x: frame.minX + 113.16, y: frame.minY + 120.88), controlPoint2: CGPoint(x: frame.minX + 122, y: frame.minY + 108.81))
        bezierPath.addCurve(to: CGPoint(x: frame.minX + 124.67, y: frame.minY + 108.26), controlPoint1: CGPoint(x: frame.minX + 122.68, y: frame.minY + 107.86), controlPoint2: CGPoint(x: frame.minX + 123.83, y: frame.minY + 107.66))
        bezierPath.addCurve(to: CGPoint(x: frame.minX + 125.1, y: frame.minY + 110.84), controlPoint1: CGPoint(x: frame.minX + 125.5, y: frame.minY + 108.86), controlPoint2: CGPoint(x: frame.minX + 125.69, y: frame.minY + 110.01))
        bezierPath.close()
        fillColor.setFill()
        bezierPath.fill()


        //// Bezier 2 Drawing
        context.saveGState()
        context.translateBy(x: frame.minX + 99.5, y: frame.minY + 100.5)
        context.rotate(by: -sunRays * CGFloat.pi/180)

        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: -0.11, y: -89.48))
        bezier2Path.addCurve(to: CGPoint(x: -0.64, y: -89.35), controlPoint1: CGPoint(x: -0.29, y: -89.45), controlPoint2: CGPoint(x: -0.47, y: -89.4))
        bezier2Path.addCurve(to: CGPoint(x: -3.95, y: -85.09), controlPoint1: CGPoint(x: -2.61, y: -88.9), controlPoint2: CGPoint(x: -4, y: -87.12))
        bezier2Path.addLine(to: CGPoint(x: -3.95, y: -59.55))
        bezier2Path.addCurve(to: CGPoint(x: -1.85, y: -55.81), controlPoint1: CGPoint(x: -3.97, y: -58.02), controlPoint2: CGPoint(x: -3.18, y: -56.59))
        bezier2Path.addCurve(to: CGPoint(x: 2.43, y: -55.81), controlPoint1: CGPoint(x: -0.52, y: -55.04), controlPoint2: CGPoint(x: 1.1, y: -55.04))
        bezier2Path.addCurve(to: CGPoint(x: 4.54, y: -59.55), controlPoint1: CGPoint(x: 3.76, y: -56.59), controlPoint2: CGPoint(x: 4.55, y: -58.02))
        bezier2Path.addLine(to: CGPoint(x: 4.54, y: -85.09))
        bezier2Path.addCurve(to: CGPoint(x: 3.21, y: -88.33), controlPoint1: CGPoint(x: 4.59, y: -86.32), controlPoint2: CGPoint(x: 4.09, y: -87.5))
        bezier2Path.addCurve(to: CGPoint(x: -0.11, y: -89.48), controlPoint1: CGPoint(x: 2.31, y: -89.18), controlPoint2: CGPoint(x: 1.1, y: -89.6))
        bezier2Path.close()
        bezier2Path.move(to: CGPoint(x: -60.6, y: -64.47))
        bezier2Path.addCurve(to: CGPoint(x: -63.92, y: -61.48), controlPoint1: CGPoint(x: -62.19, y: -64.19), controlPoint2: CGPoint(x: -63.47, y: -63.02))
        bezier2Path.addCurve(to: CGPoint(x: -62.73, y: -57.15), controlPoint1: CGPoint(x: -64.37, y: -59.92), controlPoint2: CGPoint(x: -63.9, y: -58.25))
        bezier2Path.addLine(to: CGPoint(x: -44.68, y: -39.06))
        bezier2Path.addCurve(to: CGPoint(x: -40.42, y: -37.58), controlPoint1: CGPoint(x: -43.65, y: -37.8), controlPoint2: CGPoint(x: -42.01, y: -37.22))
        bezier2Path.addCurve(to: CGPoint(x: -37.24, y: -40.78), controlPoint1: CGPoint(x: -38.85, y: -37.95), controlPoint2: CGPoint(x: -37.6, y: -39.2))
        bezier2Path.addCurve(to: CGPoint(x: -38.71, y: -45.05), controlPoint1: CGPoint(x: -36.87, y: -42.37), controlPoint2: CGPoint(x: -37.45, y: -44.02))
        bezier2Path.addLine(to: CGPoint(x: -56.76, y: -63.14))
        bezier2Path.addCurve(to: CGPoint(x: -60.2, y: -64.47), controlPoint1: CGPoint(x: -57.63, y: -64.09), controlPoint2: CGPoint(x: -58.91, y: -64.57))
        bezier2Path.addCurve(to: CGPoint(x: -60.6, y: -64.47), controlPoint1: CGPoint(x: -60.34, y: -64.47), controlPoint2: CGPoint(x: -60.47, y: -64.47))
        bezier2Path.close()
        bezier2Path.move(to: CGPoint(x: 59.86, y: -64.47))
        bezier2Path.addCurve(to: CGPoint(x: 57.34, y: -63.14), controlPoint1: CGPoint(x: 58.9, y: -64.34), controlPoint2: CGPoint(x: 58, y: -63.86))
        bezier2Path.addLine(to: CGPoint(x: 39.29, y: -45.05))
        bezier2Path.addCurve(to: CGPoint(x: 37.82, y: -40.78), controlPoint1: CGPoint(x: 38.03, y: -44.02), controlPoint2: CGPoint(x: 37.45, y: -42.37))
        bezier2Path.addCurve(to: CGPoint(x: 41, y: -37.58), controlPoint1: CGPoint(x: 38.18, y: -39.2), controlPoint2: CGPoint(x: 39.43, y: -37.95))
        bezier2Path.addCurve(to: CGPoint(x: 45.26, y: -39.06), controlPoint1: CGPoint(x: 42.59, y: -37.22), controlPoint2: CGPoint(x: 44.24, y: -37.8))
        bezier2Path.addLine(to: CGPoint(x: 63.31, y: -57.15))
        bezier2Path.addCurve(to: CGPoint(x: 64.24, y: -62.06), controlPoint1: CGPoint(x: 64.63, y: -58.42), controlPoint2: CGPoint(x: 65.01, y: -60.4))
        bezier2Path.addCurve(to: CGPoint(x: 59.86, y: -64.47), controlPoint1: CGPoint(x: 63.44, y: -63.74), controlPoint2: CGPoint(x: 61.68, y: -64.7))
        bezier2Path.close()
        bezier2Path.move(to: CGPoint(x: -85.81, y: -4.21))
        bezier2Path.addCurve(to: CGPoint(x: -89.46, y: 0.65), controlPoint1: CGPoint(x: -88.15, y: -3.88), controlPoint2: CGPoint(x: -89.79, y: -1.7))
        bezier2Path.addCurve(to: CGPoint(x: -84.62, y: 4.3), controlPoint1: CGPoint(x: -89.13, y: 2.99), controlPoint2: CGPoint(x: -86.95, y: 4.64))
        bezier2Path.addLine(to: CGPoint(x: -59.14, y: 4.3))
        bezier2Path.addCurve(to: CGPoint(x: -55.41, y: 2.19), controlPoint1: CGPoint(x: -57.62, y: 4.32), controlPoint2: CGPoint(x: -56.19, y: 3.52))
        bezier2Path.addCurve(to: CGPoint(x: -55.41, y: -2.1), controlPoint1: CGPoint(x: -54.65, y: 0.86), controlPoint2: CGPoint(x: -54.65, y: -0.77))
        bezier2Path.addCurve(to: CGPoint(x: -59.14, y: -4.21), controlPoint1: CGPoint(x: -56.19, y: -3.43), controlPoint2: CGPoint(x: -57.62, y: -4.23))
        bezier2Path.addLine(to: CGPoint(x: -84.62, y: -4.21))
        bezier2Path.addCurve(to: CGPoint(x: -85.01, y: -4.21), controlPoint1: CGPoint(x: -84.75, y: -4.21), controlPoint2: CGPoint(x: -84.88, y: -4.21))
        bezier2Path.addCurve(to: CGPoint(x: -85.41, y: -4.21), controlPoint1: CGPoint(x: -85.15, y: -4.21), controlPoint2: CGPoint(x: -85.28, y: -4.21))
        bezier2Path.addCurve(to: CGPoint(x: -85.81, y: -4.21), controlPoint1: CGPoint(x: -85.54, y: -4.21), controlPoint2: CGPoint(x: -85.68, y: -4.21))
        bezier2Path.close()
        bezier2Path.move(to: CGPoint(x: 58.53, y: -4.21))
        bezier2Path.addCurve(to: CGPoint(x: 54.88, y: 0.65), controlPoint1: CGPoint(x: 56.19, y: -3.88), controlPoint2: CGPoint(x: 54.55, y: -1.7))
        bezier2Path.addCurve(to: CGPoint(x: 59.72, y: 4.3), controlPoint1: CGPoint(x: 55.21, y: 2.99), controlPoint2: CGPoint(x: 57.39, y: 4.64))
        bezier2Path.addLine(to: CGPoint(x: 85.2, y: 4.3))
        bezier2Path.addCurve(to: CGPoint(x: 88.93, y: 2.19), controlPoint1: CGPoint(x: 86.72, y: 4.32), controlPoint2: CGPoint(x: 88.15, y: 3.52))
        bezier2Path.addCurve(to: CGPoint(x: 88.93, y: -2.1), controlPoint1: CGPoint(x: 89.69, y: 0.86), controlPoint2: CGPoint(x: 89.69, y: -0.77))
        bezier2Path.addCurve(to: CGPoint(x: 85.2, y: -4.21), controlPoint1: CGPoint(x: 88.15, y: -3.43), controlPoint2: CGPoint(x: 86.72, y: -4.23))
        bezier2Path.addLine(to: CGPoint(x: 59.72, y: -4.21))
        bezier2Path.addCurve(to: CGPoint(x: 59.33, y: -4.21), controlPoint1: CGPoint(x: 59.59, y: -4.21), controlPoint2: CGPoint(x: 59.46, y: -4.21))
        bezier2Path.addCurve(to: CGPoint(x: 58.93, y: -4.21), controlPoint1: CGPoint(x: 59.19, y: -4.21), controlPoint2: CGPoint(x: 59.06, y: -4.21))
        bezier2Path.addCurve(to: CGPoint(x: 58.53, y: -4.21), controlPoint1: CGPoint(x: 58.8, y: -4.21), controlPoint2: CGPoint(x: 58.66, y: -4.21))
        bezier2Path.close()
        bezier2Path.move(to: CGPoint(x: -42.16, y: 37.83))
        bezier2Path.addCurve(to: CGPoint(x: -44.68, y: 39.16), controlPoint1: CGPoint(x: -43.12, y: 37.96), controlPoint2: CGPoint(x: -44.02, y: 38.44))
        bezier2Path.addLine(to: CGPoint(x: -62.73, y: 57.25))
        bezier2Path.addCurve(to: CGPoint(x: -64.2, y: 61.52), controlPoint1: CGPoint(x: -63.99, y: 58.28), controlPoint2: CGPoint(x: -64.57, y: 59.93))
        bezier2Path.addCurve(to: CGPoint(x: -61.02, y: 64.72), controlPoint1: CGPoint(x: -63.84, y: 63.1), controlPoint2: CGPoint(x: -62.59, y: 64.35))
        bezier2Path.addCurve(to: CGPoint(x: -56.76, y: 63.24), controlPoint1: CGPoint(x: -59.43, y: 65.08), controlPoint2: CGPoint(x: -57.78, y: 64.5))
        bezier2Path.addLine(to: CGPoint(x: -38.71, y: 45.14))
        bezier2Path.addCurve(to: CGPoint(x: -37.75, y: 40.44), controlPoint1: CGPoint(x: -37.45, y: 43.93), controlPoint2: CGPoint(x: -37.07, y: 42.05))
        bezier2Path.addCurve(to: CGPoint(x: -41.76, y: 37.83), controlPoint1: CGPoint(x: -38.41, y: 38.82), controlPoint2: CGPoint(x: -40.02, y: 37.79))
        bezier2Path.addCurve(to: CGPoint(x: -42.16, y: 37.83), controlPoint1: CGPoint(x: -41.9, y: 37.83), controlPoint2: CGPoint(x: -42.03, y: 37.83))
        bezier2Path.close()
        bezier2Path.move(to: CGPoint(x: 41.42, y: 37.83))
        bezier2Path.addCurve(to: CGPoint(x: 38.1, y: 40.82), controlPoint1: CGPoint(x: 39.83, y: 38.11), controlPoint2: CGPoint(x: 38.55, y: 39.27))
        bezier2Path.addCurve(to: CGPoint(x: 39.29, y: 45.14), controlPoint1: CGPoint(x: 37.65, y: 42.38), controlPoint2: CGPoint(x: 38.12, y: 44.05))
        bezier2Path.addLine(to: CGPoint(x: 57.34, y: 63.24))
        bezier2Path.addCurve(to: CGPoint(x: 61.6, y: 64.72), controlPoint1: CGPoint(x: 58.37, y: 64.5), controlPoint2: CGPoint(x: 60.01, y: 65.08))
        bezier2Path.addCurve(to: CGPoint(x: 64.78, y: 61.52), controlPoint1: CGPoint(x: 63.17, y: 64.35), controlPoint2: CGPoint(x: 64.42, y: 63.1))
        bezier2Path.addCurve(to: CGPoint(x: 63.31, y: 57.25), controlPoint1: CGPoint(x: 65.15, y: 59.93), controlPoint2: CGPoint(x: 64.57, y: 58.28))
        bezier2Path.addLine(to: CGPoint(x: 45.26, y: 39.16))
        bezier2Path.addCurve(to: CGPoint(x: 42.21, y: 37.83), controlPoint1: CGPoint(x: 44.47, y: 38.31), controlPoint2: CGPoint(x: 43.37, y: 37.84))
        bezier2Path.addCurve(to: CGPoint(x: 41.82, y: 37.83), controlPoint1: CGPoint(x: 42.08, y: 37.83), controlPoint2: CGPoint(x: 41.95, y: 37.83))
        bezier2Path.addCurve(to: CGPoint(x: 41.42, y: 37.83), controlPoint1: CGPoint(x: 41.68, y: 37.83), controlPoint2: CGPoint(x: 41.55, y: 37.83))
        bezier2Path.close()
        bezier2Path.move(to: CGPoint(x: -0.11, y: 55.25))
        bezier2Path.addCurve(to: CGPoint(x: -0.64, y: 55.39), controlPoint1: CGPoint(x: -0.29, y: 55.29), controlPoint2: CGPoint(x: -0.47, y: 55.34))
        bezier2Path.addCurve(to: CGPoint(x: -3.95, y: 59.64), controlPoint1: CGPoint(x: -2.61, y: 55.84), controlPoint2: CGPoint(x: -4, y: 57.61))
        bezier2Path.addLine(to: CGPoint(x: -3.95, y: 85.18))
        bezier2Path.addCurve(to: CGPoint(x: -1.85, y: 88.93), controlPoint1: CGPoint(x: -3.97, y: 86.71), controlPoint2: CGPoint(x: -3.18, y: 88.14))
        bezier2Path.addCurve(to: CGPoint(x: 2.43, y: 88.93), controlPoint1: CGPoint(x: -0.52, y: 89.69), controlPoint2: CGPoint(x: 1.1, y: 89.69))
        bezier2Path.addCurve(to: CGPoint(x: 4.54, y: 85.18), controlPoint1: CGPoint(x: 3.76, y: 88.14), controlPoint2: CGPoint(x: 4.55, y: 86.71))
        bezier2Path.addLine(to: CGPoint(x: 4.54, y: 59.64))
        bezier2Path.addCurve(to: CGPoint(x: 3.21, y: 56.4), controlPoint1: CGPoint(x: 4.59, y: 58.41), controlPoint2: CGPoint(x: 4.09, y: 57.23))
        bezier2Path.addCurve(to: CGPoint(x: -0.11, y: 55.25), controlPoint1: CGPoint(x: 2.31, y: 55.55), controlPoint2: CGPoint(x: 1.1, y: 55.14))
        bezier2Path.close()
        fillColor.setFill()
        bezier2Path.fill()

        context.restoreGState()
    }

    //// Generated Images

    @objc dynamic public class func imageOfWeatherSunny(sunRays: CGFloat = 90) -> UIImage {
        UIGraphicsBeginImageContextWithOptions(CGSize(width: 50, height: 50), false, 0)
            WeatherStyleKit.drawWeatherSunny(sunRays: sunRays)

        let imageOfWeatherSunny = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()

        return imageOfWeatherSunny
    }

    @objc dynamic public class var imageOfMoonWaningGibbous: UIImage {
        if Cache.imageOfMoonWaningGibbous != nil {
            return Cache.imageOfMoonWaningGibbous!
        }

        UIGraphicsBeginImageContextWithOptions(CGSize(width: 50, height: 50), false, 0)
            WeatherStyleKit.drawMoonWaningGibbous()

        Cache.imageOfMoonWaningGibbous = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()

        return Cache.imageOfMoonWaningGibbous!
    }

    @objc dynamic public class var imageOfWeatherPartlyCloudyDay: UIImage {
        if Cache.imageOfWeatherPartlyCloudyDay != nil {
            return Cache.imageOfWeatherPartlyCloudyDay!
        }

        UIGraphicsBeginImageContextWithOptions(CGSize(width: 50, height: 50), false, 0)
            WeatherStyleKit.drawWeatherPartlyCloudyDay()

        Cache.imageOfWeatherPartlyCloudyDay = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()

        return Cache.imageOfWeatherPartlyCloudyDay!
    }

    @objc dynamic public class var imageOfWeatherPartlyCloudyRainDay: UIImage {
        if Cache.imageOfWeatherPartlyCloudyRainDay != nil {
            return Cache.imageOfWeatherPartlyCloudyRainDay!
        }

        UIGraphicsBeginImageContextWithOptions(CGSize(width: 50, height: 50), false, 0)
            WeatherStyleKit.drawWeatherPartlyCloudyRainDay()

        Cache.imageOfWeatherPartlyCloudyRainDay = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()

        return Cache.imageOfWeatherPartlyCloudyRainDay!
    }

    @objc dynamic public class var imageOfMoonNew: UIImage {
        if Cache.imageOfMoonNew != nil {
            return Cache.imageOfMoonNew!
        }

        UIGraphicsBeginImageContextWithOptions(CGSize(width: 50, height: 50), false, 0)
            WeatherStyleKit.drawMoonNew()

        Cache.imageOfMoonNew = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()

        return Cache.imageOfMoonNew!
    }

    @objc dynamic public class var imageOfMoonWaningCrescent: UIImage {
        if Cache.imageOfMoonWaningCrescent != nil {
            return Cache.imageOfMoonWaningCrescent!
        }

        UIGraphicsBeginImageContextWithOptions(CGSize(width: 50, height: 50), false, 0)
            WeatherStyleKit.drawMoonWaningCrescent()

        Cache.imageOfMoonWaningCrescent = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()

        return Cache.imageOfMoonWaningCrescent!
    }

    @objc dynamic public class var imageOfMoonWaxingGibbous: UIImage {
        if Cache.imageOfMoonWaxingGibbous != nil {
            return Cache.imageOfMoonWaxingGibbous!
        }

        UIGraphicsBeginImageContextWithOptions(CGSize(width: 50, height: 50), false, 0)
            WeatherStyleKit.drawMoonWaxingGibbous()

        Cache.imageOfMoonWaxingGibbous = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()

        return Cache.imageOfMoonWaxingGibbous!
    }

    @objc dynamic public class var imageOfMoonFirstQuarter: UIImage {
        if Cache.imageOfMoonFirstQuarter != nil {
            return Cache.imageOfMoonFirstQuarter!
        }

        UIGraphicsBeginImageContextWithOptions(CGSize(width: 50, height: 50), false, 0)
            WeatherStyleKit.drawMoonFirstQuarter()

        Cache.imageOfMoonFirstQuarter = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()

        return Cache.imageOfMoonFirstQuarter!
    }

    @objc dynamic public class var imageOfMoonWaxingCrescent: UIImage {
        if Cache.imageOfMoonWaxingCrescent != nil {
            return Cache.imageOfMoonWaxingCrescent!
        }

        UIGraphicsBeginImageContextWithOptions(CGSize(width: 50, height: 50), false, 0)
            WeatherStyleKit.drawMoonWaxingCrescent()

        Cache.imageOfMoonWaxingCrescent = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()

        return Cache.imageOfMoonWaxingCrescent!
    }

    @objc dynamic public class var imageOfWeatherWindy: UIImage {
        if Cache.imageOfWeatherWindy != nil {
            return Cache.imageOfWeatherWindy!
        }

        UIGraphicsBeginImageContextWithOptions(CGSize(width: 50, height: 50), false, 0)
            WeatherStyleKit.drawWeatherWindy()

        Cache.imageOfWeatherWindy = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()

        return Cache.imageOfWeatherWindy!
    }

    @objc dynamic public class var imageOfWeatherLightSnow: UIImage {
        if Cache.imageOfWeatherLightSnow != nil {
            return Cache.imageOfWeatherLightSnow!
        }

        UIGraphicsBeginImageContextWithOptions(CGSize(width: 50, height: 50), false, 0)
            WeatherStyleKit.drawWeatherLightSnow()

        Cache.imageOfWeatherLightSnow = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()

        return Cache.imageOfWeatherLightSnow!
    }

    @objc dynamic public class var imageOfWeatherTornado: UIImage {
        if Cache.imageOfWeatherTornado != nil {
            return Cache.imageOfWeatherTornado!
        }

        UIGraphicsBeginImageContextWithOptions(CGSize(width: 50, height: 50), false, 0)
            WeatherStyleKit.drawWeatherTornado()

        Cache.imageOfWeatherTornado = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()

        return Cache.imageOfWeatherTornado!
    }

    @objc dynamic public class var imageOfWeatherSleet: UIImage {
        if Cache.imageOfWeatherSleet != nil {
            return Cache.imageOfWeatherSleet!
        }

        UIGraphicsBeginImageContextWithOptions(CGSize(width: 50, height: 50), false, 0)
            WeatherStyleKit.drawWeatherSleet()

        Cache.imageOfWeatherSleet = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()

        return Cache.imageOfWeatherSleet!
    }

    @objc dynamic public class var imageOfWeatherSnow: UIImage {
        if Cache.imageOfWeatherSnow != nil {
            return Cache.imageOfWeatherSnow!
        }

        UIGraphicsBeginImageContextWithOptions(CGSize(width: 50, height: 50), false, 0)
            WeatherStyleKit.drawWeatherSnow()

        Cache.imageOfWeatherSnow = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()

        return Cache.imageOfWeatherSnow!
    }

    @objc dynamic public class var imageOfWeatherStorm: UIImage {
        if Cache.imageOfWeatherStorm != nil {
            return Cache.imageOfWeatherStorm!
        }

        UIGraphicsBeginImageContextWithOptions(CGSize(width: 50, height: 50), false, 0)
            WeatherStyleKit.drawWeatherStorm()

        Cache.imageOfWeatherStorm = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()

        return Cache.imageOfWeatherStorm!
    }

    @objc dynamic public class var imageOfWeatherHail: UIImage {
        if Cache.imageOfWeatherHail != nil {
            return Cache.imageOfWeatherHail!
        }

        UIGraphicsBeginImageContextWithOptions(CGSize(width: 50, height: 50), false, 0)
            WeatherStyleKit.drawWeatherHail()

        Cache.imageOfWeatherHail = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()

        return Cache.imageOfWeatherHail!
    }

    @objc dynamic public class var imageOfWeatherTorrentialRain: UIImage {
        if Cache.imageOfWeatherTorrentialRain != nil {
            return Cache.imageOfWeatherTorrentialRain!
        }

        UIGraphicsBeginImageContextWithOptions(CGSize(width: 50, height: 50), false, 0)
            WeatherStyleKit.drawWeatherTorrentialRain()

        Cache.imageOfWeatherTorrentialRain = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()

        return Cache.imageOfWeatherTorrentialRain!
    }

    @objc dynamic public class var imageOfWeatherLightRain: UIImage {
        if Cache.imageOfWeatherLightRain != nil {
            return Cache.imageOfWeatherLightRain!
        }

        UIGraphicsBeginImageContextWithOptions(CGSize(width: 50, height: 50), false, 0)
            WeatherStyleKit.drawWeatherLightRain()

        Cache.imageOfWeatherLightRain = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()

        return Cache.imageOfWeatherLightRain!
    }

    @objc dynamic public class var imageOfWeatherModerateRain: UIImage {
        if Cache.imageOfWeatherModerateRain != nil {
            return Cache.imageOfWeatherModerateRain!
        }

        UIGraphicsBeginImageContextWithOptions(CGSize(width: 50, height: 50), false, 0)
            WeatherStyleKit.drawWeatherModerateRain()

        Cache.imageOfWeatherModerateRain = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()

        return Cache.imageOfWeatherModerateRain!
    }

    @objc dynamic public class func imageOfSadSun(imageSize: CGSize = CGSize(width: 200, height: 200)) -> UIImage {
        UIGraphicsBeginImageContextWithOptions(imageSize, false, 0)
            WeatherStyleKit.drawSadSun(frame: CGRect(x: 0, y: 0, width: imageSize.width, height: imageSize.height))

        let imageOfSadSun = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()

        return imageOfSadSun
    }

    @objc dynamic public class func imageOfHappySun(imageSize: CGSize = CGSize(width: 200, height: 200), sunRays: CGFloat = 90) -> UIImage {
        UIGraphicsBeginImageContextWithOptions(imageSize, false, 0)
            WeatherStyleKit.drawHappySun(frame: CGRect(x: 0, y: 0, width: imageSize.width, height: imageSize.height), sunRays: sunRays)

        let imageOfHappySun = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()

        return imageOfHappySun
    }

    //// Customization Infrastructure

    @objc @IBOutlet dynamic var moonWaningGibbousTargets: [AnyObject]! {
        get { return Cache.moonWaningGibbousTargets }
        set {
            Cache.moonWaningGibbousTargets = newValue
            for target: AnyObject in newValue {
                let _ = target.perform(NSSelectorFromString("setImage:"), with: WeatherStyleKit.imageOfMoonWaningGibbous)
            }
        }
    }

    @objc @IBOutlet dynamic var weatherPartlyCloudyDayTargets: [AnyObject]! {
        get { return Cache.weatherPartlyCloudyDayTargets }
        set {
            Cache.weatherPartlyCloudyDayTargets = newValue
            for target: AnyObject in newValue {
                let _ = target.perform(NSSelectorFromString("setImage:"), with: WeatherStyleKit.imageOfWeatherPartlyCloudyDay)
            }
        }
    }

    @objc @IBOutlet dynamic var weatherPartlyCloudyRainDayTargets: [AnyObject]! {
        get { return Cache.weatherPartlyCloudyRainDayTargets }
        set {
            Cache.weatherPartlyCloudyRainDayTargets = newValue
            for target: AnyObject in newValue {
                let _ = target.perform(NSSelectorFromString("setImage:"), with: WeatherStyleKit.imageOfWeatherPartlyCloudyRainDay)
            }
        }
    }

    @objc @IBOutlet dynamic var moonNewTargets: [AnyObject]! {
        get { return Cache.moonNewTargets }
        set {
            Cache.moonNewTargets = newValue
            for target: AnyObject in newValue {
                let _ = target.perform(NSSelectorFromString("setImage:"), with: WeatherStyleKit.imageOfMoonNew)
            }
        }
    }

    @objc @IBOutlet dynamic var moonWaningCrescentTargets: [AnyObject]! {
        get { return Cache.moonWaningCrescentTargets }
        set {
            Cache.moonWaningCrescentTargets = newValue
            for target: AnyObject in newValue {
                let _ = target.perform(NSSelectorFromString("setImage:"), with: WeatherStyleKit.imageOfMoonWaningCrescent)
            }
        }
    }

    @objc @IBOutlet dynamic var moonWaxingGibbousTargets: [AnyObject]! {
        get { return Cache.moonWaxingGibbousTargets }
        set {
            Cache.moonWaxingGibbousTargets = newValue
            for target: AnyObject in newValue {
                let _ = target.perform(NSSelectorFromString("setImage:"), with: WeatherStyleKit.imageOfMoonWaxingGibbous)
            }
        }
    }

    @objc @IBOutlet dynamic var moonFirstQuarterTargets: [AnyObject]! {
        get { return Cache.moonFirstQuarterTargets }
        set {
            Cache.moonFirstQuarterTargets = newValue
            for target: AnyObject in newValue {
                let _ = target.perform(NSSelectorFromString("setImage:"), with: WeatherStyleKit.imageOfMoonFirstQuarter)
            }
        }
    }

    @objc @IBOutlet dynamic var moonWaxingCrescentTargets: [AnyObject]! {
        get { return Cache.moonWaxingCrescentTargets }
        set {
            Cache.moonWaxingCrescentTargets = newValue
            for target: AnyObject in newValue {
                let _ = target.perform(NSSelectorFromString("setImage:"), with: WeatherStyleKit.imageOfMoonWaxingCrescent)
            }
        }
    }

    @objc @IBOutlet dynamic var weatherWindyTargets: [AnyObject]! {
        get { return Cache.weatherWindyTargets }
        set {
            Cache.weatherWindyTargets = newValue
            for target: AnyObject in newValue {
                let _ = target.perform(NSSelectorFromString("setImage:"), with: WeatherStyleKit.imageOfWeatherWindy)
            }
        }
    }

    @objc @IBOutlet dynamic var weatherLightSnowTargets: [AnyObject]! {
        get { return Cache.weatherLightSnowTargets }
        set {
            Cache.weatherLightSnowTargets = newValue
            for target: AnyObject in newValue {
                let _ = target.perform(NSSelectorFromString("setImage:"), with: WeatherStyleKit.imageOfWeatherLightSnow)
            }
        }
    }

    @objc @IBOutlet dynamic var weatherTornadoTargets: [AnyObject]! {
        get { return Cache.weatherTornadoTargets }
        set {
            Cache.weatherTornadoTargets = newValue
            for target: AnyObject in newValue {
                let _ = target.perform(NSSelectorFromString("setImage:"), with: WeatherStyleKit.imageOfWeatherTornado)
            }
        }
    }

    @objc @IBOutlet dynamic var weatherSleetTargets: [AnyObject]! {
        get { return Cache.weatherSleetTargets }
        set {
            Cache.weatherSleetTargets = newValue
            for target: AnyObject in newValue {
                let _ = target.perform(NSSelectorFromString("setImage:"), with: WeatherStyleKit.imageOfWeatherSleet)
            }
        }
    }

    @objc @IBOutlet dynamic var weatherSnowTargets: [AnyObject]! {
        get { return Cache.weatherSnowTargets }
        set {
            Cache.weatherSnowTargets = newValue
            for target: AnyObject in newValue {
                let _ = target.perform(NSSelectorFromString("setImage:"), with: WeatherStyleKit.imageOfWeatherSnow)
            }
        }
    }

    @objc @IBOutlet dynamic var weatherStormTargets: [AnyObject]! {
        get { return Cache.weatherStormTargets }
        set {
            Cache.weatherStormTargets = newValue
            for target: AnyObject in newValue {
                let _ = target.perform(NSSelectorFromString("setImage:"), with: WeatherStyleKit.imageOfWeatherStorm)
            }
        }
    }

    @objc @IBOutlet dynamic var weatherHailTargets: [AnyObject]! {
        get { return Cache.weatherHailTargets }
        set {
            Cache.weatherHailTargets = newValue
            for target: AnyObject in newValue {
                let _ = target.perform(NSSelectorFromString("setImage:"), with: WeatherStyleKit.imageOfWeatherHail)
            }
        }
    }

    @objc @IBOutlet dynamic var weatherTorrentialRainTargets: [AnyObject]! {
        get { return Cache.weatherTorrentialRainTargets }
        set {
            Cache.weatherTorrentialRainTargets = newValue
            for target: AnyObject in newValue {
                let _ = target.perform(NSSelectorFromString("setImage:"), with: WeatherStyleKit.imageOfWeatherTorrentialRain)
            }
        }
    }

    @objc @IBOutlet dynamic var weatherLightRainTargets: [AnyObject]! {
        get { return Cache.weatherLightRainTargets }
        set {
            Cache.weatherLightRainTargets = newValue
            for target: AnyObject in newValue {
                let _ = target.perform(NSSelectorFromString("setImage:"), with: WeatherStyleKit.imageOfWeatherLightRain)
            }
        }
    }

    @objc @IBOutlet dynamic var weatherModerateRainTargets: [AnyObject]! {
        get { return Cache.weatherModerateRainTargets }
        set {
            Cache.weatherModerateRainTargets = newValue
            for target: AnyObject in newValue {
                let _ = target.perform(NSSelectorFromString("setImage:"), with: WeatherStyleKit.imageOfWeatherModerateRain)
            }
        }
    }




    @objc(WeatherStyleKitResizingBehavior)
    public enum ResizingBehavior: Int {
        case aspectFit /// The content is proportionally resized to fit into the target rectangle.
        case aspectFill /// The content is proportionally resized to completely fill the target rectangle.
        case stretch /// The content is stretched to match the entire target rectangle.
        case center /// The content is centered in the target rectangle, but it is NOT resized.

        public func apply(rect: CGRect, target: CGRect) -> CGRect {
            if rect == target || target == CGRect.zero {
                return rect
            }

            var scales = CGSize.zero
            scales.width = abs(target.width / rect.width)
            scales.height = abs(target.height / rect.height)

            switch self {
                case .aspectFit:
                    scales.width = min(scales.width, scales.height)
                    scales.height = scales.width
                case .aspectFill:
                    scales.width = max(scales.width, scales.height)
                    scales.height = scales.width
                case .stretch:
                    break
                case .center:
                    scales.width = 1
                    scales.height = 1
            }

            var result = rect.standardized
            result.size.width *= scales.width
            result.size.height *= scales.height
            result.origin.x = target.minX + (target.width - result.width) / 2
            result.origin.y = target.minY + (target.height - result.height) / 2
            return result
        }
    }
}
